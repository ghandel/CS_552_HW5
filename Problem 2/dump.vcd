$date
	Thu Apr 18 02:11:32 2013
$end
$version
	ModelSim Version 5.8b
$end
$timescale
	1ns
$end
$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end
$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end
$scope task end_simulation $end
$upscope $end
$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end
$scope module m0 $end
$var parameter 32 $! mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 %! comp $end
$var wire 1 &! write $end
$var wire 1 '! sel_data_cache $end
$var wire 1 (! valid_in $end
$var wire 1 )! wr_mem $end
$var wire 1 *! rd_mem $end
$var wire 1 +! sel_tag_mem $end
$var wire 1 ,! offset_mem [2] $end
$var wire 1 -! offset_mem [1] $end
$var wire 1 .! offset_mem [0] $end
$var wire 1 /! offset_mem_q1 [2] $end
$var wire 1 0! offset_mem_q1 [1] $end
$var wire 1 1! offset_mem_q1 [0] $end
$var wire 1 2! offset_mem_q2 [2] $end
$var wire 1 3! offset_mem_q2 [1] $end
$var wire 1 4! offset_mem_q2 [0] $end
$var wire 1 5! err_ctrl $end
$var wire 1 6! hit_0 $end
$var wire 1 7! hit_1 $end
$var wire 1 8! dirty_0 $end
$var wire 1 9! dirty_1 $end
$var wire 1 :! valid_0 $end
$var wire 1 ;! valid_1 $end
$var wire 1 <! enable_0 $end
$var wire 1 =! enable_1 $end
$var wire 1 >! sel_cache $end
$var wire 1 ?! err_cache_0 $end
$var wire 1 @! err_cache_1 $end
$var wire 1 A! index [7] $end
$var wire 1 B! index [6] $end
$var wire 1 C! index [5] $end
$var wire 1 D! index [4] $end
$var wire 1 E! index [3] $end
$var wire 1 F! index [2] $end
$var wire 1 G! index [1] $end
$var wire 1 H! index [0] $end
$var wire 1 I! offset [2] $end
$var wire 1 J! offset [1] $end
$var wire 1 K! offset [0] $end
$var wire 1 L! offset_cache [2] $end
$var wire 1 M! offset_cache [1] $end
$var wire 1 N! offset_cache [0] $end
$var wire 1 O! tag_in [4] $end
$var wire 1 P! tag_in [3] $end
$var wire 1 Q! tag_in [2] $end
$var wire 1 R! tag_in [1] $end
$var wire 1 S! tag_in [0] $end
$var wire 1 T! tag_out [4] $end
$var wire 1 U! tag_out [3] $end
$var wire 1 V! tag_out [2] $end
$var wire 1 W! tag_out [1] $end
$var wire 1 X! tag_out [0] $end
$var wire 1 Y! tag_out_0 [4] $end
$var wire 1 Z! tag_out_0 [3] $end
$var wire 1 [! tag_out_0 [2] $end
$var wire 1 \! tag_out_0 [1] $end
$var wire 1 ]! tag_out_0 [0] $end
$var wire 1 ^! tag_out_1 [4] $end
$var wire 1 _! tag_out_1 [3] $end
$var wire 1 `! tag_out_1 [2] $end
$var wire 1 a! tag_out_1 [1] $end
$var wire 1 b! tag_out_1 [0] $end
$var wire 1 c! data_in_cache [15] $end
$var wire 1 d! data_in_cache [14] $end
$var wire 1 e! data_in_cache [13] $end
$var wire 1 f! data_in_cache [12] $end
$var wire 1 g! data_in_cache [11] $end
$var wire 1 h! data_in_cache [10] $end
$var wire 1 i! data_in_cache [9] $end
$var wire 1 j! data_in_cache [8] $end
$var wire 1 k! data_in_cache [7] $end
$var wire 1 l! data_in_cache [6] $end
$var wire 1 m! data_in_cache [5] $end
$var wire 1 n! data_in_cache [4] $end
$var wire 1 o! data_in_cache [3] $end
$var wire 1 p! data_in_cache [2] $end
$var wire 1 q! data_in_cache [1] $end
$var wire 1 r! data_in_cache [0] $end
$var wire 1 s! data_out_cache_0 [15] $end
$var wire 1 t! data_out_cache_0 [14] $end
$var wire 1 u! data_out_cache_0 [13] $end
$var wire 1 v! data_out_cache_0 [12] $end
$var wire 1 w! data_out_cache_0 [11] $end
$var wire 1 x! data_out_cache_0 [10] $end
$var wire 1 y! data_out_cache_0 [9] $end
$var wire 1 z! data_out_cache_0 [8] $end
$var wire 1 {! data_out_cache_0 [7] $end
$var wire 1 |! data_out_cache_0 [6] $end
$var wire 1 }! data_out_cache_0 [5] $end
$var wire 1 ~! data_out_cache_0 [4] $end
$var wire 1 !" data_out_cache_0 [3] $end
$var wire 1 "" data_out_cache_0 [2] $end
$var wire 1 #" data_out_cache_0 [1] $end
$var wire 1 $" data_out_cache_0 [0] $end
$var wire 1 %" data_out_cache_1 [15] $end
$var wire 1 &" data_out_cache_1 [14] $end
$var wire 1 '" data_out_cache_1 [13] $end
$var wire 1 (" data_out_cache_1 [12] $end
$var wire 1 )" data_out_cache_1 [11] $end
$var wire 1 *" data_out_cache_1 [10] $end
$var wire 1 +" data_out_cache_1 [9] $end
$var wire 1 ," data_out_cache_1 [8] $end
$var wire 1 -" data_out_cache_1 [7] $end
$var wire 1 ." data_out_cache_1 [6] $end
$var wire 1 /" data_out_cache_1 [5] $end
$var wire 1 0" data_out_cache_1 [4] $end
$var wire 1 1" data_out_cache_1 [3] $end
$var wire 1 2" data_out_cache_1 [2] $end
$var wire 1 3" data_out_cache_1 [1] $end
$var wire 1 4" data_out_cache_1 [0] $end
$var wire 1 5" addr_mem [15] $end
$var wire 1 6" addr_mem [14] $end
$var wire 1 7" addr_mem [13] $end
$var wire 1 8" addr_mem [12] $end
$var wire 1 9" addr_mem [11] $end
$var wire 1 :" addr_mem [10] $end
$var wire 1 ;" addr_mem [9] $end
$var wire 1 <" addr_mem [8] $end
$var wire 1 =" addr_mem [7] $end
$var wire 1 >" addr_mem [6] $end
$var wire 1 ?" addr_mem [5] $end
$var wire 1 @" addr_mem [4] $end
$var wire 1 A" addr_mem [3] $end
$var wire 1 B" addr_mem [2] $end
$var wire 1 C" addr_mem [1] $end
$var wire 1 D" addr_mem [0] $end
$var wire 1 E" data_out_mem [15] $end
$var wire 1 F" data_out_mem [14] $end
$var wire 1 G" data_out_mem [13] $end
$var wire 1 H" data_out_mem [12] $end
$var wire 1 I" data_out_mem [11] $end
$var wire 1 J" data_out_mem [10] $end
$var wire 1 K" data_out_mem [9] $end
$var wire 1 L" data_out_mem [8] $end
$var wire 1 M" data_out_mem [7] $end
$var wire 1 N" data_out_mem [6] $end
$var wire 1 O" data_out_mem [5] $end
$var wire 1 P" data_out_mem [4] $end
$var wire 1 Q" data_out_mem [3] $end
$var wire 1 R" data_out_mem [2] $end
$var wire 1 S" data_out_mem [1] $end
$var wire 1 T" data_out_mem [0] $end
$var wire 1 U" busy [3] $end
$var wire 1 V" busy [2] $end
$var wire 1 W" busy [1] $end
$var wire 1 X" busy [0] $end
$var wire 1 Y" Stall_mem $end
$var wire 1 Z" err_mem $end
$var wire 1 [" tag_mem [4] $end
$var wire 1 \" tag_mem [3] $end
$var wire 1 ]" tag_mem [2] $end
$var wire 1 ^" tag_mem [1] $end
$var wire 1 _" tag_mem [0] $end
$scope module offset_reg1[2] $end
$var wire 1 /! q $end
$var wire 1 ,! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `" state $end
$upscope $end
$scope module offset_reg1[1] $end
$var wire 1 0! q $end
$var wire 1 -! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a" state $end
$upscope $end
$scope module offset_reg1[0] $end
$var wire 1 1! q $end
$var wire 1 .! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b" state $end
$upscope $end
$scope module offset_reg2[2] $end
$var wire 1 2! q $end
$var wire 1 /! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c" state $end
$upscope $end
$scope module offset_reg2[1] $end
$var wire 1 3! q $end
$var wire 1 0! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d" state $end
$upscope $end
$scope module offset_reg2[0] $end
$var wire 1 4! q $end
$var wire 1 1! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e" state $end
$upscope $end
$scope module ctrl_unit $end
$var wire 1 %! comp $end
$var wire 1 &! write $end
$var wire 1 (! valid_in $end
$var wire 1 '! sel_data_cache $end
$var wire 1 )! wr_mem $end
$var wire 1 *! rd_mem $end
$var wire 1 +! sel_tag_mem $end
$var wire 1 ,! offset [2] $end
$var wire 1 -! offset [1] $end
$var wire 1 .! offset [0] $end
$var wire 1 1 done $end
$var wire 1 : cache_hit $end
$var wire 1 2 stall $end
$var wire 1 5! err $end
$var wire 1 >! sel_cache $end
$var wire 1 <! enable_0 $end
$var wire 1 =! enable_1 $end
$var wire 1 y rd_en $end
$var wire 1 z wr_en $end
$var wire 1 6! hit_0 $end
$var wire 1 8! dirty_0 $end
$var wire 1 :! valid_0 $end
$var wire 1 7! hit_1 $end
$var wire 1 9! dirty_1 $end
$var wire 1 ;! valid_1 $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 f" curr_state [8] $end
$var wire 1 g" curr_state [7] $end
$var wire 1 h" curr_state [6] $end
$var wire 1 i" curr_state [5] $end
$var wire 1 j" curr_state [4] $end
$var wire 1 k" curr_state [3] $end
$var wire 1 l" curr_state [2] $end
$var wire 1 m" curr_state [1] $end
$var wire 1 n" curr_state [0] $end
$var wire 1 o" next_state [8] $end
$var wire 1 p" next_state [7] $end
$var wire 1 q" next_state [6] $end
$var wire 1 r" next_state [5] $end
$var wire 1 s" next_state [4] $end
$var wire 1 t" next_state [3] $end
$var wire 1 u" next_state [2] $end
$var wire 1 v" next_state [1] $end
$var wire 1 w" next_state [0] $end
$var wire 1 x" s0 $end
$var wire 1 y" s1 $end
$var wire 1 z" s2 $end
$var wire 1 {" s3 $end
$var wire 1 |" s4 $end
$var wire 1 }" s5 $end
$var wire 1 ~" s6 $end
$var wire 1 !# s7 $end
$var wire 1 "# s8 $end
$var wire 1 ## n0 $end
$var wire 1 $# n1 $end
$var wire 1 %# n2 $end
$var wire 1 &# n3 $end
$var wire 1 '# n4 $end
$var wire 1 (# n5 $end
$var wire 1 )# n6 $end
$var wire 1 *# n7 $end
$var wire 1 +# n8 $end
$var wire 1 ,# S_idle $end
$var wire 1 -# S_compare $end
$var wire 1 .# S_access_write $end
$var wire 1 /# S_allocate $end
$var wire 1 0# S_access_read $end
$var wire 1 1# Request $end
$var wire 1 2# Access_write $end
$var wire 1 3# counter [1] $end
$var wire 1 4# counter [0] $end
$var wire 1 5# counter_d [1] $end
$var wire 1 6# counter_d [0] $end
$var wire 1 7# en_counter $end
$var wire 1 8# sel_cache_pre $end
$var wire 1 9# sel_cache_d $end
$var wire 1 :# selected $end
$var wire 1 ;# selected_d $end
$var wire 1 <# en_selected $end
$var wire 1 =# victimway_d $end
$var wire 1 ># victimway $end
$scope module state[8] $end
$var wire 1 f" q $end
$var wire 1 o" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?# state $end
$upscope $end
$scope module state[7] $end
$var wire 1 g" q $end
$var wire 1 p" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @# state $end
$upscope $end
$scope module state[6] $end
$var wire 1 h" q $end
$var wire 1 q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A# state $end
$upscope $end
$scope module state[5] $end
$var wire 1 i" q $end
$var wire 1 r" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B# state $end
$upscope $end
$scope module state[4] $end
$var wire 1 j" q $end
$var wire 1 s" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C# state $end
$upscope $end
$scope module state[3] $end
$var wire 1 k" q $end
$var wire 1 t" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D# state $end
$upscope $end
$scope module state[2] $end
$var wire 1 l" q $end
$var wire 1 u" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E# state $end
$upscope $end
$scope module state[1] $end
$var wire 1 m" q $end
$var wire 1 v" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F# state $end
$upscope $end
$scope module state[0] $end
$var wire 1 n" q $end
$var wire 1 w" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G# state $end
$upscope $end
$scope module Req_init_reg $end
$var wire 1 y d $end
$var wire 1 ,# en $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 1# q $end
$var wire 1 H# inner_d $end
$scope module dff_with_en $end
$var wire 1 1# q $end
$var wire 1 H# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I# state $end
$upscope $end
$upscope $end
$scope module Ac_write_reg $end
$var wire 1 2# q $end
$var wire 1 .# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J# state $end
$upscope $end
$scope module counter_reg[1] $end
$var wire 1 5# d $end
$var wire 1 7# en $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 3# q $end
$var wire 1 K# inner_d $end
$scope module dff_with_en $end
$var wire 1 3# q $end
$var wire 1 K# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L# state $end
$upscope $end
$upscope $end
$scope module counter_reg[0] $end
$var wire 1 6# d $end
$var wire 1 7# en $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 4# q $end
$var wire 1 M# inner_d $end
$scope module dff_with_en $end
$var wire 1 4# q $end
$var wire 1 M# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N# state $end
$upscope $end
$upscope $end
$scope module sel_cache_reg $end
$var wire 1 9# d $end
$var wire 1 -# en $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 8# q $end
$var wire 1 O# inner_d $end
$scope module dff_with_en $end
$var wire 1 8# q $end
$var wire 1 O# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P# state $end
$upscope $end
$upscope $end
$scope module selected_reg $end
$var wire 1 ;# d $end
$var wire 1 <# en $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 :# q $end
$var wire 1 Q# inner_d $end
$scope module dff_with_en $end
$var wire 1 :# q $end
$var wire 1 Q# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R# state $end
$upscope $end
$upscope $end
$scope module victimway_reg $end
$var wire 1 =# d $end
$var wire 1 1 en $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ># q $end
$var wire 1 S# inner_d $end
$scope module dff_with_en $end
$var wire 1 ># q $end
$var wire 1 S# d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T# state $end
$upscope $end
$upscope $end
$upscope $end
$scope module c0 $end
$var parameter 32 U# cache_id $end
$var wire 1 <! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 O! tag_in [4] $end
$var wire 1 P! tag_in [3] $end
$var wire 1 Q! tag_in [2] $end
$var wire 1 R! tag_in [1] $end
$var wire 1 S! tag_in [0] $end
$var wire 1 A! index [7] $end
$var wire 1 B! index [6] $end
$var wire 1 C! index [5] $end
$var wire 1 D! index [4] $end
$var wire 1 E! index [3] $end
$var wire 1 F! index [2] $end
$var wire 1 G! index [1] $end
$var wire 1 H! index [0] $end
$var wire 1 L! offset [2] $end
$var wire 1 M! offset [1] $end
$var wire 1 N! offset [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 %! comp $end
$var wire 1 &! write $end
$var wire 1 (! valid_in $end
$var wire 1 Y! tag_out [4] $end
$var wire 1 Z! tag_out [3] $end
$var wire 1 [! tag_out [2] $end
$var wire 1 \! tag_out [1] $end
$var wire 1 ]! tag_out [0] $end
$var wire 1 s! data_out [15] $end
$var wire 1 t! data_out [14] $end
$var wire 1 u! data_out [13] $end
$var wire 1 v! data_out [12] $end
$var wire 1 w! data_out [11] $end
$var wire 1 x! data_out [10] $end
$var wire 1 y! data_out [9] $end
$var wire 1 z! data_out [8] $end
$var wire 1 {! data_out [7] $end
$var wire 1 |! data_out [6] $end
$var wire 1 }! data_out [5] $end
$var wire 1 ~! data_out [4] $end
$var wire 1 !" data_out [3] $end
$var wire 1 "" data_out [2] $end
$var wire 1 #" data_out [1] $end
$var wire 1 $" data_out [0] $end
$var wire 1 6! hit $end
$var wire 1 8! dirty $end
$var wire 1 :! valid $end
$var wire 1 ?! err $end
$var wire 1 V# ram0_id [4] $end
$var wire 1 W# ram0_id [3] $end
$var wire 1 X# ram0_id [2] $end
$var wire 1 Y# ram0_id [1] $end
$var wire 1 Z# ram0_id [0] $end
$var wire 1 [# ram1_id [4] $end
$var wire 1 \# ram1_id [3] $end
$var wire 1 ]# ram1_id [2] $end
$var wire 1 ^# ram1_id [1] $end
$var wire 1 _# ram1_id [0] $end
$var wire 1 `# ram2_id [4] $end
$var wire 1 a# ram2_id [3] $end
$var wire 1 b# ram2_id [2] $end
$var wire 1 c# ram2_id [1] $end
$var wire 1 d# ram2_id [0] $end
$var wire 1 e# ram3_id [4] $end
$var wire 1 f# ram3_id [3] $end
$var wire 1 g# ram3_id [2] $end
$var wire 1 h# ram3_id [1] $end
$var wire 1 i# ram3_id [0] $end
$var wire 1 j# ram4_id [4] $end
$var wire 1 k# ram4_id [3] $end
$var wire 1 l# ram4_id [2] $end
$var wire 1 m# ram4_id [1] $end
$var wire 1 n# ram4_id [0] $end
$var wire 1 o# ram5_id [4] $end
$var wire 1 p# ram5_id [3] $end
$var wire 1 q# ram5_id [2] $end
$var wire 1 r# ram5_id [1] $end
$var wire 1 s# ram5_id [0] $end
$var wire 1 t# w0 [15] $end
$var wire 1 u# w0 [14] $end
$var wire 1 v# w0 [13] $end
$var wire 1 w# w0 [12] $end
$var wire 1 x# w0 [11] $end
$var wire 1 y# w0 [10] $end
$var wire 1 z# w0 [9] $end
$var wire 1 {# w0 [8] $end
$var wire 1 |# w0 [7] $end
$var wire 1 }# w0 [6] $end
$var wire 1 ~# w0 [5] $end
$var wire 1 !$ w0 [4] $end
$var wire 1 "$ w0 [3] $end
$var wire 1 #$ w0 [2] $end
$var wire 1 $$ w0 [1] $end
$var wire 1 %$ w0 [0] $end
$var wire 1 &$ w1 [15] $end
$var wire 1 '$ w1 [14] $end
$var wire 1 ($ w1 [13] $end
$var wire 1 )$ w1 [12] $end
$var wire 1 *$ w1 [11] $end
$var wire 1 +$ w1 [10] $end
$var wire 1 ,$ w1 [9] $end
$var wire 1 -$ w1 [8] $end
$var wire 1 .$ w1 [7] $end
$var wire 1 /$ w1 [6] $end
$var wire 1 0$ w1 [5] $end
$var wire 1 1$ w1 [4] $end
$var wire 1 2$ w1 [3] $end
$var wire 1 3$ w1 [2] $end
$var wire 1 4$ w1 [1] $end
$var wire 1 5$ w1 [0] $end
$var wire 1 6$ w2 [15] $end
$var wire 1 7$ w2 [14] $end
$var wire 1 8$ w2 [13] $end
$var wire 1 9$ w2 [12] $end
$var wire 1 :$ w2 [11] $end
$var wire 1 ;$ w2 [10] $end
$var wire 1 <$ w2 [9] $end
$var wire 1 =$ w2 [8] $end
$var wire 1 >$ w2 [7] $end
$var wire 1 ?$ w2 [6] $end
$var wire 1 @$ w2 [5] $end
$var wire 1 A$ w2 [4] $end
$var wire 1 B$ w2 [3] $end
$var wire 1 C$ w2 [2] $end
$var wire 1 D$ w2 [1] $end
$var wire 1 E$ w2 [0] $end
$var wire 1 F$ w3 [15] $end
$var wire 1 G$ w3 [14] $end
$var wire 1 H$ w3 [13] $end
$var wire 1 I$ w3 [12] $end
$var wire 1 J$ w3 [11] $end
$var wire 1 K$ w3 [10] $end
$var wire 1 L$ w3 [9] $end
$var wire 1 M$ w3 [8] $end
$var wire 1 N$ w3 [7] $end
$var wire 1 O$ w3 [6] $end
$var wire 1 P$ w3 [5] $end
$var wire 1 Q$ w3 [4] $end
$var wire 1 R$ w3 [3] $end
$var wire 1 S$ w3 [2] $end
$var wire 1 T$ w3 [1] $end
$var wire 1 U$ w3 [0] $end
$var wire 1 V$ go $end
$var wire 1 W$ match $end
$var wire 1 X$ wr_word0 $end
$var wire 1 Y$ wr_word1 $end
$var wire 1 Z$ wr_word2 $end
$var wire 1 [$ wr_word3 $end
$var wire 1 \$ wr_dirty $end
$var wire 1 ]$ wr_tag $end
$var wire 1 ^$ wr_valid $end
$var wire 1 _$ dirty_in $end
$var wire 1 `$ dirtybit $end
$var wire 1 a$ validbit $end
$scope module mem_w0 $end
$var parameter 32 b$ Size $end
$var wire 1 t# data_out [15] $end
$var wire 1 u# data_out [14] $end
$var wire 1 v# data_out [13] $end
$var wire 1 w# data_out [12] $end
$var wire 1 x# data_out [11] $end
$var wire 1 y# data_out [10] $end
$var wire 1 z# data_out [9] $end
$var wire 1 {# data_out [8] $end
$var wire 1 |# data_out [7] $end
$var wire 1 }# data_out [6] $end
$var wire 1 ~# data_out [5] $end
$var wire 1 !$ data_out [4] $end
$var wire 1 "$ data_out [3] $end
$var wire 1 #$ data_out [2] $end
$var wire 1 $$ data_out [1] $end
$var wire 1 %$ data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 X$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 V# file_id [4] $end
$var wire 1 W# file_id [3] $end
$var wire 1 X# file_id [2] $end
$var wire 1 Y# file_id [1] $end
$var wire 1 Z# file_id [0] $end
$var integer 32 c$ mcd $end
$var integer 32 d$ i $end
$upscope $end
$scope module mem_w1 $end
$var parameter 32 e$ Size $end
$var wire 1 &$ data_out [15] $end
$var wire 1 '$ data_out [14] $end
$var wire 1 ($ data_out [13] $end
$var wire 1 )$ data_out [12] $end
$var wire 1 *$ data_out [11] $end
$var wire 1 +$ data_out [10] $end
$var wire 1 ,$ data_out [9] $end
$var wire 1 -$ data_out [8] $end
$var wire 1 .$ data_out [7] $end
$var wire 1 /$ data_out [6] $end
$var wire 1 0$ data_out [5] $end
$var wire 1 1$ data_out [4] $end
$var wire 1 2$ data_out [3] $end
$var wire 1 3$ data_out [2] $end
$var wire 1 4$ data_out [1] $end
$var wire 1 5$ data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 Y$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 [# file_id [4] $end
$var wire 1 \# file_id [3] $end
$var wire 1 ]# file_id [2] $end
$var wire 1 ^# file_id [1] $end
$var wire 1 _# file_id [0] $end
$var integer 32 f$ mcd $end
$var integer 32 g$ i $end
$upscope $end
$scope module mem_w2 $end
$var parameter 32 h$ Size $end
$var wire 1 6$ data_out [15] $end
$var wire 1 7$ data_out [14] $end
$var wire 1 8$ data_out [13] $end
$var wire 1 9$ data_out [12] $end
$var wire 1 :$ data_out [11] $end
$var wire 1 ;$ data_out [10] $end
$var wire 1 <$ data_out [9] $end
$var wire 1 =$ data_out [8] $end
$var wire 1 >$ data_out [7] $end
$var wire 1 ?$ data_out [6] $end
$var wire 1 @$ data_out [5] $end
$var wire 1 A$ data_out [4] $end
$var wire 1 B$ data_out [3] $end
$var wire 1 C$ data_out [2] $end
$var wire 1 D$ data_out [1] $end
$var wire 1 E$ data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 Z$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 `# file_id [4] $end
$var wire 1 a# file_id [3] $end
$var wire 1 b# file_id [2] $end
$var wire 1 c# file_id [1] $end
$var wire 1 d# file_id [0] $end
$var integer 32 i$ mcd $end
$var integer 32 j$ i $end
$upscope $end
$scope module mem_w3 $end
$var parameter 32 k$ Size $end
$var wire 1 F$ data_out [15] $end
$var wire 1 G$ data_out [14] $end
$var wire 1 H$ data_out [13] $end
$var wire 1 I$ data_out [12] $end
$var wire 1 J$ data_out [11] $end
$var wire 1 K$ data_out [10] $end
$var wire 1 L$ data_out [9] $end
$var wire 1 M$ data_out [8] $end
$var wire 1 N$ data_out [7] $end
$var wire 1 O$ data_out [6] $end
$var wire 1 P$ data_out [5] $end
$var wire 1 Q$ data_out [4] $end
$var wire 1 R$ data_out [3] $end
$var wire 1 S$ data_out [2] $end
$var wire 1 T$ data_out [1] $end
$var wire 1 U$ data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 [$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 e# file_id [4] $end
$var wire 1 f# file_id [3] $end
$var wire 1 g# file_id [2] $end
$var wire 1 h# file_id [1] $end
$var wire 1 i# file_id [0] $end
$var integer 32 l$ mcd $end
$var integer 32 m$ i $end
$upscope $end
$scope module mem_tg $end
$var parameter 32 n$ Size $end
$var wire 1 Y! data_out [4] $end
$var wire 1 Z! data_out [3] $end
$var wire 1 [! data_out [2] $end
$var wire 1 \! data_out [1] $end
$var wire 1 ]! data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 O! data_in [4] $end
$var wire 1 P! data_in [3] $end
$var wire 1 Q! data_in [2] $end
$var wire 1 R! data_in [1] $end
$var wire 1 S! data_in [0] $end
$var wire 1 ]$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 j# file_id [4] $end
$var wire 1 k# file_id [3] $end
$var wire 1 l# file_id [2] $end
$var wire 1 m# file_id [1] $end
$var wire 1 n# file_id [0] $end
$var integer 32 o$ mcd $end
$var integer 32 p$ i $end
$upscope $end
$scope module mem_dr $end
$var parameter 32 q$ Size $end
$var wire 1 `$ data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 _$ data_in [0] $end
$var wire 1 \$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 o# file_id [4] $end
$var wire 1 p# file_id [3] $end
$var wire 1 q# file_id [2] $end
$var wire 1 r# file_id [1] $end
$var wire 1 s# file_id [0] $end
$var integer 32 r$ mcd $end
$var integer 32 s$ i $end
$upscope $end
$scope module mem_vl $end
$var wire 1 a$ data_out $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 (! data_in $end
$var wire 1 ^$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 V# file_id [4] $end
$var wire 1 W# file_id [3] $end
$var wire 1 X# file_id [2] $end
$var wire 1 Y# file_id [1] $end
$var wire 1 Z# file_id [0] $end
$var integer 32 t$ mcd $end
$var integer 32 u$ i $end
$upscope $end
$upscope $end
$scope module c1 $end
$var parameter 32 v$ cache_id $end
$var wire 1 =! enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 O! tag_in [4] $end
$var wire 1 P! tag_in [3] $end
$var wire 1 Q! tag_in [2] $end
$var wire 1 R! tag_in [1] $end
$var wire 1 S! tag_in [0] $end
$var wire 1 A! index [7] $end
$var wire 1 B! index [6] $end
$var wire 1 C! index [5] $end
$var wire 1 D! index [4] $end
$var wire 1 E! index [3] $end
$var wire 1 F! index [2] $end
$var wire 1 G! index [1] $end
$var wire 1 H! index [0] $end
$var wire 1 L! offset [2] $end
$var wire 1 M! offset [1] $end
$var wire 1 N! offset [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 %! comp $end
$var wire 1 &! write $end
$var wire 1 (! valid_in $end
$var wire 1 ^! tag_out [4] $end
$var wire 1 _! tag_out [3] $end
$var wire 1 `! tag_out [2] $end
$var wire 1 a! tag_out [1] $end
$var wire 1 b! tag_out [0] $end
$var wire 1 %" data_out [15] $end
$var wire 1 &" data_out [14] $end
$var wire 1 '" data_out [13] $end
$var wire 1 (" data_out [12] $end
$var wire 1 )" data_out [11] $end
$var wire 1 *" data_out [10] $end
$var wire 1 +" data_out [9] $end
$var wire 1 ," data_out [8] $end
$var wire 1 -" data_out [7] $end
$var wire 1 ." data_out [6] $end
$var wire 1 /" data_out [5] $end
$var wire 1 0" data_out [4] $end
$var wire 1 1" data_out [3] $end
$var wire 1 2" data_out [2] $end
$var wire 1 3" data_out [1] $end
$var wire 1 4" data_out [0] $end
$var wire 1 7! hit $end
$var wire 1 9! dirty $end
$var wire 1 ;! valid $end
$var wire 1 @! err $end
$var wire 1 w$ ram0_id [4] $end
$var wire 1 x$ ram0_id [3] $end
$var wire 1 y$ ram0_id [2] $end
$var wire 1 z$ ram0_id [1] $end
$var wire 1 {$ ram0_id [0] $end
$var wire 1 |$ ram1_id [4] $end
$var wire 1 }$ ram1_id [3] $end
$var wire 1 ~$ ram1_id [2] $end
$var wire 1 !% ram1_id [1] $end
$var wire 1 "% ram1_id [0] $end
$var wire 1 #% ram2_id [4] $end
$var wire 1 $% ram2_id [3] $end
$var wire 1 %% ram2_id [2] $end
$var wire 1 &% ram2_id [1] $end
$var wire 1 '% ram2_id [0] $end
$var wire 1 (% ram3_id [4] $end
$var wire 1 )% ram3_id [3] $end
$var wire 1 *% ram3_id [2] $end
$var wire 1 +% ram3_id [1] $end
$var wire 1 ,% ram3_id [0] $end
$var wire 1 -% ram4_id [4] $end
$var wire 1 .% ram4_id [3] $end
$var wire 1 /% ram4_id [2] $end
$var wire 1 0% ram4_id [1] $end
$var wire 1 1% ram4_id [0] $end
$var wire 1 2% ram5_id [4] $end
$var wire 1 3% ram5_id [3] $end
$var wire 1 4% ram5_id [2] $end
$var wire 1 5% ram5_id [1] $end
$var wire 1 6% ram5_id [0] $end
$var wire 1 7% w0 [15] $end
$var wire 1 8% w0 [14] $end
$var wire 1 9% w0 [13] $end
$var wire 1 :% w0 [12] $end
$var wire 1 ;% w0 [11] $end
$var wire 1 <% w0 [10] $end
$var wire 1 =% w0 [9] $end
$var wire 1 >% w0 [8] $end
$var wire 1 ?% w0 [7] $end
$var wire 1 @% w0 [6] $end
$var wire 1 A% w0 [5] $end
$var wire 1 B% w0 [4] $end
$var wire 1 C% w0 [3] $end
$var wire 1 D% w0 [2] $end
$var wire 1 E% w0 [1] $end
$var wire 1 F% w0 [0] $end
$var wire 1 G% w1 [15] $end
$var wire 1 H% w1 [14] $end
$var wire 1 I% w1 [13] $end
$var wire 1 J% w1 [12] $end
$var wire 1 K% w1 [11] $end
$var wire 1 L% w1 [10] $end
$var wire 1 M% w1 [9] $end
$var wire 1 N% w1 [8] $end
$var wire 1 O% w1 [7] $end
$var wire 1 P% w1 [6] $end
$var wire 1 Q% w1 [5] $end
$var wire 1 R% w1 [4] $end
$var wire 1 S% w1 [3] $end
$var wire 1 T% w1 [2] $end
$var wire 1 U% w1 [1] $end
$var wire 1 V% w1 [0] $end
$var wire 1 W% w2 [15] $end
$var wire 1 X% w2 [14] $end
$var wire 1 Y% w2 [13] $end
$var wire 1 Z% w2 [12] $end
$var wire 1 [% w2 [11] $end
$var wire 1 \% w2 [10] $end
$var wire 1 ]% w2 [9] $end
$var wire 1 ^% w2 [8] $end
$var wire 1 _% w2 [7] $end
$var wire 1 `% w2 [6] $end
$var wire 1 a% w2 [5] $end
$var wire 1 b% w2 [4] $end
$var wire 1 c% w2 [3] $end
$var wire 1 d% w2 [2] $end
$var wire 1 e% w2 [1] $end
$var wire 1 f% w2 [0] $end
$var wire 1 g% w3 [15] $end
$var wire 1 h% w3 [14] $end
$var wire 1 i% w3 [13] $end
$var wire 1 j% w3 [12] $end
$var wire 1 k% w3 [11] $end
$var wire 1 l% w3 [10] $end
$var wire 1 m% w3 [9] $end
$var wire 1 n% w3 [8] $end
$var wire 1 o% w3 [7] $end
$var wire 1 p% w3 [6] $end
$var wire 1 q% w3 [5] $end
$var wire 1 r% w3 [4] $end
$var wire 1 s% w3 [3] $end
$var wire 1 t% w3 [2] $end
$var wire 1 u% w3 [1] $end
$var wire 1 v% w3 [0] $end
$var wire 1 w% go $end
$var wire 1 x% match $end
$var wire 1 y% wr_word0 $end
$var wire 1 z% wr_word1 $end
$var wire 1 {% wr_word2 $end
$var wire 1 |% wr_word3 $end
$var wire 1 }% wr_dirty $end
$var wire 1 ~% wr_tag $end
$var wire 1 !& wr_valid $end
$var wire 1 "& dirty_in $end
$var wire 1 #& dirtybit $end
$var wire 1 $& validbit $end
$scope module mem_w0 $end
$var parameter 32 %& Size $end
$var wire 1 7% data_out [15] $end
$var wire 1 8% data_out [14] $end
$var wire 1 9% data_out [13] $end
$var wire 1 :% data_out [12] $end
$var wire 1 ;% data_out [11] $end
$var wire 1 <% data_out [10] $end
$var wire 1 =% data_out [9] $end
$var wire 1 >% data_out [8] $end
$var wire 1 ?% data_out [7] $end
$var wire 1 @% data_out [6] $end
$var wire 1 A% data_out [5] $end
$var wire 1 B% data_out [4] $end
$var wire 1 C% data_out [3] $end
$var wire 1 D% data_out [2] $end
$var wire 1 E% data_out [1] $end
$var wire 1 F% data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 y% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 w$ file_id [4] $end
$var wire 1 x$ file_id [3] $end
$var wire 1 y$ file_id [2] $end
$var wire 1 z$ file_id [1] $end
$var wire 1 {$ file_id [0] $end
$var integer 32 && mcd $end
$var integer 32 '& i $end
$upscope $end
$scope module mem_w1 $end
$var parameter 32 (& Size $end
$var wire 1 G% data_out [15] $end
$var wire 1 H% data_out [14] $end
$var wire 1 I% data_out [13] $end
$var wire 1 J% data_out [12] $end
$var wire 1 K% data_out [11] $end
$var wire 1 L% data_out [10] $end
$var wire 1 M% data_out [9] $end
$var wire 1 N% data_out [8] $end
$var wire 1 O% data_out [7] $end
$var wire 1 P% data_out [6] $end
$var wire 1 Q% data_out [5] $end
$var wire 1 R% data_out [4] $end
$var wire 1 S% data_out [3] $end
$var wire 1 T% data_out [2] $end
$var wire 1 U% data_out [1] $end
$var wire 1 V% data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 z% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 |$ file_id [4] $end
$var wire 1 }$ file_id [3] $end
$var wire 1 ~$ file_id [2] $end
$var wire 1 !% file_id [1] $end
$var wire 1 "% file_id [0] $end
$var integer 32 )& mcd $end
$var integer 32 *& i $end
$upscope $end
$scope module mem_w2 $end
$var parameter 32 +& Size $end
$var wire 1 W% data_out [15] $end
$var wire 1 X% data_out [14] $end
$var wire 1 Y% data_out [13] $end
$var wire 1 Z% data_out [12] $end
$var wire 1 [% data_out [11] $end
$var wire 1 \% data_out [10] $end
$var wire 1 ]% data_out [9] $end
$var wire 1 ^% data_out [8] $end
$var wire 1 _% data_out [7] $end
$var wire 1 `% data_out [6] $end
$var wire 1 a% data_out [5] $end
$var wire 1 b% data_out [4] $end
$var wire 1 c% data_out [3] $end
$var wire 1 d% data_out [2] $end
$var wire 1 e% data_out [1] $end
$var wire 1 f% data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 {% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 #% file_id [4] $end
$var wire 1 $% file_id [3] $end
$var wire 1 %% file_id [2] $end
$var wire 1 &% file_id [1] $end
$var wire 1 '% file_id [0] $end
$var integer 32 ,& mcd $end
$var integer 32 -& i $end
$upscope $end
$scope module mem_w3 $end
$var parameter 32 .& Size $end
$var wire 1 g% data_out [15] $end
$var wire 1 h% data_out [14] $end
$var wire 1 i% data_out [13] $end
$var wire 1 j% data_out [12] $end
$var wire 1 k% data_out [11] $end
$var wire 1 l% data_out [10] $end
$var wire 1 m% data_out [9] $end
$var wire 1 n% data_out [8] $end
$var wire 1 o% data_out [7] $end
$var wire 1 p% data_out [6] $end
$var wire 1 q% data_out [5] $end
$var wire 1 r% data_out [4] $end
$var wire 1 s% data_out [3] $end
$var wire 1 t% data_out [2] $end
$var wire 1 u% data_out [1] $end
$var wire 1 v% data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 c! data_in [15] $end
$var wire 1 d! data_in [14] $end
$var wire 1 e! data_in [13] $end
$var wire 1 f! data_in [12] $end
$var wire 1 g! data_in [11] $end
$var wire 1 h! data_in [10] $end
$var wire 1 i! data_in [9] $end
$var wire 1 j! data_in [8] $end
$var wire 1 k! data_in [7] $end
$var wire 1 l! data_in [6] $end
$var wire 1 m! data_in [5] $end
$var wire 1 n! data_in [4] $end
$var wire 1 o! data_in [3] $end
$var wire 1 p! data_in [2] $end
$var wire 1 q! data_in [1] $end
$var wire 1 r! data_in [0] $end
$var wire 1 |% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 (% file_id [4] $end
$var wire 1 )% file_id [3] $end
$var wire 1 *% file_id [2] $end
$var wire 1 +% file_id [1] $end
$var wire 1 ,% file_id [0] $end
$var integer 32 /& mcd $end
$var integer 32 0& i $end
$upscope $end
$scope module mem_tg $end
$var parameter 32 1& Size $end
$var wire 1 ^! data_out [4] $end
$var wire 1 _! data_out [3] $end
$var wire 1 `! data_out [2] $end
$var wire 1 a! data_out [1] $end
$var wire 1 b! data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 O! data_in [4] $end
$var wire 1 P! data_in [3] $end
$var wire 1 Q! data_in [2] $end
$var wire 1 R! data_in [1] $end
$var wire 1 S! data_in [0] $end
$var wire 1 ~% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 -% file_id [4] $end
$var wire 1 .% file_id [3] $end
$var wire 1 /% file_id [2] $end
$var wire 1 0% file_id [1] $end
$var wire 1 1% file_id [0] $end
$var integer 32 2& mcd $end
$var integer 32 3& i $end
$upscope $end
$scope module mem_dr $end
$var parameter 32 4& Size $end
$var wire 1 #& data_out [0] $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 "& data_in [0] $end
$var wire 1 }% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 2% file_id [4] $end
$var wire 1 3% file_id [3] $end
$var wire 1 4% file_id [2] $end
$var wire 1 5% file_id [1] $end
$var wire 1 6% file_id [0] $end
$var integer 32 5& mcd $end
$var integer 32 6& i $end
$upscope $end
$scope module mem_vl $end
$var wire 1 $& data_out $end
$var wire 1 A! addr [7] $end
$var wire 1 B! addr [6] $end
$var wire 1 C! addr [5] $end
$var wire 1 D! addr [4] $end
$var wire 1 E! addr [3] $end
$var wire 1 F! addr [2] $end
$var wire 1 G! addr [1] $end
$var wire 1 H! addr [0] $end
$var wire 1 (! data_in $end
$var wire 1 !& write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 w$ file_id [4] $end
$var wire 1 x$ file_id [3] $end
$var wire 1 y$ file_id [2] $end
$var wire 1 z$ file_id [1] $end
$var wire 1 {$ file_id [0] $end
$var integer 32 7& mcd $end
$var integer 32 8& i $end
$upscope $end
$upscope $end
$scope module main_mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 5" addr [15] $end
$var wire 1 6" addr [14] $end
$var wire 1 7" addr [13] $end
$var wire 1 8" addr [12] $end
$var wire 1 9" addr [11] $end
$var wire 1 :" addr [10] $end
$var wire 1 ;" addr [9] $end
$var wire 1 <" addr [8] $end
$var wire 1 =" addr [7] $end
$var wire 1 >" addr [6] $end
$var wire 1 ?" addr [5] $end
$var wire 1 @" addr [4] $end
$var wire 1 A" addr [3] $end
$var wire 1 B" addr [2] $end
$var wire 1 C" addr [1] $end
$var wire 1 D" addr [0] $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 )! wr $end
$var wire 1 *! rd $end
$var wire 1 E" data_out [15] $end
$var wire 1 F" data_out [14] $end
$var wire 1 G" data_out [13] $end
$var wire 1 H" data_out [12] $end
$var wire 1 I" data_out [11] $end
$var wire 1 J" data_out [10] $end
$var wire 1 K" data_out [9] $end
$var wire 1 L" data_out [8] $end
$var wire 1 M" data_out [7] $end
$var wire 1 N" data_out [6] $end
$var wire 1 O" data_out [5] $end
$var wire 1 P" data_out [4] $end
$var wire 1 Q" data_out [3] $end
$var wire 1 R" data_out [2] $end
$var wire 1 S" data_out [1] $end
$var wire 1 T" data_out [0] $end
$var wire 1 Y" stall $end
$var wire 1 U" busy [3] $end
$var wire 1 V" busy [2] $end
$var wire 1 W" busy [1] $end
$var wire 1 X" busy [0] $end
$var wire 1 Z" err $end
$var wire 1 9& data0_out [15] $end
$var wire 1 :& data0_out [14] $end
$var wire 1 ;& data0_out [13] $end
$var wire 1 <& data0_out [12] $end
$var wire 1 =& data0_out [11] $end
$var wire 1 >& data0_out [10] $end
$var wire 1 ?& data0_out [9] $end
$var wire 1 @& data0_out [8] $end
$var wire 1 A& data0_out [7] $end
$var wire 1 B& data0_out [6] $end
$var wire 1 C& data0_out [5] $end
$var wire 1 D& data0_out [4] $end
$var wire 1 E& data0_out [3] $end
$var wire 1 F& data0_out [2] $end
$var wire 1 G& data0_out [1] $end
$var wire 1 H& data0_out [0] $end
$var wire 1 I& data1_out [15] $end
$var wire 1 J& data1_out [14] $end
$var wire 1 K& data1_out [13] $end
$var wire 1 L& data1_out [12] $end
$var wire 1 M& data1_out [11] $end
$var wire 1 N& data1_out [10] $end
$var wire 1 O& data1_out [9] $end
$var wire 1 P& data1_out [8] $end
$var wire 1 Q& data1_out [7] $end
$var wire 1 R& data1_out [6] $end
$var wire 1 S& data1_out [5] $end
$var wire 1 T& data1_out [4] $end
$var wire 1 U& data1_out [3] $end
$var wire 1 V& data1_out [2] $end
$var wire 1 W& data1_out [1] $end
$var wire 1 X& data1_out [0] $end
$var wire 1 Y& data2_out [15] $end
$var wire 1 Z& data2_out [14] $end
$var wire 1 [& data2_out [13] $end
$var wire 1 \& data2_out [12] $end
$var wire 1 ]& data2_out [11] $end
$var wire 1 ^& data2_out [10] $end
$var wire 1 _& data2_out [9] $end
$var wire 1 `& data2_out [8] $end
$var wire 1 a& data2_out [7] $end
$var wire 1 b& data2_out [6] $end
$var wire 1 c& data2_out [5] $end
$var wire 1 d& data2_out [4] $end
$var wire 1 e& data2_out [3] $end
$var wire 1 f& data2_out [2] $end
$var wire 1 g& data2_out [1] $end
$var wire 1 h& data2_out [0] $end
$var wire 1 i& data3_out [15] $end
$var wire 1 j& data3_out [14] $end
$var wire 1 k& data3_out [13] $end
$var wire 1 l& data3_out [12] $end
$var wire 1 m& data3_out [11] $end
$var wire 1 n& data3_out [10] $end
$var wire 1 o& data3_out [9] $end
$var wire 1 p& data3_out [8] $end
$var wire 1 q& data3_out [7] $end
$var wire 1 r& data3_out [6] $end
$var wire 1 s& data3_out [5] $end
$var wire 1 t& data3_out [4] $end
$var wire 1 u& data3_out [3] $end
$var wire 1 v& data3_out [2] $end
$var wire 1 w& data3_out [1] $end
$var wire 1 x& data3_out [0] $end
$var wire 1 y& sel0 $end
$var wire 1 z& sel1 $end
$var wire 1 {& sel2 $end
$var wire 1 |& sel3 $end
$var wire 1 }& en [3] $end
$var wire 1 ~& en [2] $end
$var wire 1 !' en [1] $end
$var wire 1 "' en [0] $end
$var wire 1 #' err0 $end
$var wire 1 $' err1 $end
$var wire 1 %' err2 $end
$var wire 1 &' err3 $end
$var wire 1 '' bsy0 [3] $end
$var wire 1 (' bsy0 [2] $end
$var wire 1 )' bsy0 [1] $end
$var wire 1 *' bsy0 [0] $end
$var wire 1 +' bsy1 [3] $end
$var wire 1 ,' bsy1 [2] $end
$var wire 1 -' bsy1 [1] $end
$var wire 1 .' bsy1 [0] $end
$var wire 1 /' bsy2 [3] $end
$var wire 1 0' bsy2 [2] $end
$var wire 1 1' bsy2 [1] $end
$var wire 1 2' bsy2 [0] $end
$scope module m0 $end
$var wire 1 9& data_out [15] $end
$var wire 1 :& data_out [14] $end
$var wire 1 ;& data_out [13] $end
$var wire 1 <& data_out [12] $end
$var wire 1 =& data_out [11] $end
$var wire 1 >& data_out [10] $end
$var wire 1 ?& data_out [9] $end
$var wire 1 @& data_out [8] $end
$var wire 1 A& data_out [7] $end
$var wire 1 B& data_out [6] $end
$var wire 1 C& data_out [5] $end
$var wire 1 D& data_out [4] $end
$var wire 1 E& data_out [3] $end
$var wire 1 F& data_out [2] $end
$var wire 1 G& data_out [1] $end
$var wire 1 H& data_out [0] $end
$var wire 1 #' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 5" addr [12] $end
$var wire 1 6" addr [11] $end
$var wire 1 7" addr [10] $end
$var wire 1 8" addr [9] $end
$var wire 1 9" addr [8] $end
$var wire 1 :" addr [7] $end
$var wire 1 ;" addr [6] $end
$var wire 1 <" addr [5] $end
$var wire 1 =" addr [4] $end
$var wire 1 >" addr [3] $end
$var wire 1 ?" addr [2] $end
$var wire 1 @" addr [1] $end
$var wire 1 A" addr [0] $end
$var wire 1 )! wr $end
$var wire 1 *! rd $end
$var wire 1 "' enable $end
$var wire 1 { create_dump $end
$var wire 1 3' bank_id [1] $end
$var wire 1 4' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5' loaded $end
$var reg 16 6' largest [15:0] $end
$var wire 1 7' addr_1c [13] $end
$var wire 1 8' addr_1c [12] $end
$var wire 1 9' addr_1c [11] $end
$var wire 1 :' addr_1c [10] $end
$var wire 1 ;' addr_1c [9] $end
$var wire 1 <' addr_1c [8] $end
$var wire 1 =' addr_1c [7] $end
$var wire 1 >' addr_1c [6] $end
$var wire 1 ?' addr_1c [5] $end
$var wire 1 @' addr_1c [4] $end
$var wire 1 A' addr_1c [3] $end
$var wire 1 B' addr_1c [2] $end
$var wire 1 C' addr_1c [1] $end
$var wire 1 D' addr_1c [0] $end
$var wire 1 E' data_in_1c [15] $end
$var wire 1 F' data_in_1c [14] $end
$var wire 1 G' data_in_1c [13] $end
$var wire 1 H' data_in_1c [12] $end
$var wire 1 I' data_in_1c [11] $end
$var wire 1 J' data_in_1c [10] $end
$var wire 1 K' data_in_1c [9] $end
$var wire 1 L' data_in_1c [8] $end
$var wire 1 M' data_in_1c [7] $end
$var wire 1 N' data_in_1c [6] $end
$var wire 1 O' data_in_1c [5] $end
$var wire 1 P' data_in_1c [4] $end
$var wire 1 Q' data_in_1c [3] $end
$var wire 1 R' data_in_1c [2] $end
$var wire 1 S' data_in_1c [1] $end
$var wire 1 T' data_in_1c [0] $end
$var integer 32 U' mcd $end
$var integer 32 V' largeout $end
$var integer 32 W' i $end
$var wire 1 X' rd0 $end
$var wire 1 Y' wr0 $end
$var wire 1 Z' rd1 $end
$var wire 1 [' wr1 $end
$var wire 1 \' data_out_1c [15] $end
$var wire 1 ]' data_out_1c [14] $end
$var wire 1 ^' data_out_1c [13] $end
$var wire 1 _' data_out_1c [12] $end
$var wire 1 `' data_out_1c [11] $end
$var wire 1 a' data_out_1c [10] $end
$var wire 1 b' data_out_1c [9] $end
$var wire 1 c' data_out_1c [8] $end
$var wire 1 d' data_out_1c [7] $end
$var wire 1 e' data_out_1c [6] $end
$var wire 1 f' data_out_1c [5] $end
$var wire 1 g' data_out_1c [4] $end
$var wire 1 h' data_out_1c [3] $end
$var wire 1 i' data_out_1c [2] $end
$var wire 1 j' data_out_1c [1] $end
$var wire 1 k' data_out_1c [0] $end
$var wire 1 l' rd2 $end
$var wire 1 m' wr2 $end
$var wire 1 n' rd3 $end
$var wire 1 o' wr3 $end
$var wire 1 p' busy $end
$scope module ff0 $end
$var wire 1 Z' q $end
$var wire 1 X' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q' state $end
$upscope $end
$scope module ff1 $end
$var wire 1 [' q $end
$var wire 1 Y' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r' state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 8' q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s' state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 9' q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t' state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 :' q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u' state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 ;' q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v' state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 <' q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w' state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 =' q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x' state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 >' q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y' state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 ?' q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z' state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 @' q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {' state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 A' q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |' state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 B' q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }' state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 C' q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~' state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 D' q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !( state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 E' q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "( state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 F' q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #( state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 G' q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $( state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 H' q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %( state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 I' q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &( state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 J' q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '( state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 K' q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (( state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 L' q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )( state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 M' q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *( state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 N' q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +( state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 O' q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,( state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 P' q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -( state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 Q' q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .( state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 R' q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /( state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 S' q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0( state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 T' q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1( state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 9& q $end
$var wire 1 \' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2( state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 :& q $end
$var wire 1 ]' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3( state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 ;& q $end
$var wire 1 ^' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4( state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 <& q $end
$var wire 1 _' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5( state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 =& q $end
$var wire 1 `' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6( state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 >& q $end
$var wire 1 a' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7( state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 ?& q $end
$var wire 1 b' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8( state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 @& q $end
$var wire 1 c' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9( state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 A& q $end
$var wire 1 d' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :( state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 B& q $end
$var wire 1 e' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;( state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 C& q $end
$var wire 1 f' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <( state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 D& q $end
$var wire 1 g' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =( state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 E& q $end
$var wire 1 h' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >( state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 F& q $end
$var wire 1 i' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?( state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 G& q $end
$var wire 1 j' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @( state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 H& q $end
$var wire 1 k' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A( state $end
$upscope $end
$scope module ff2 $end
$var wire 1 l' q $end
$var wire 1 Z' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B( state $end
$upscope $end
$scope module ff3 $end
$var wire 1 m' q $end
$var wire 1 [' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C( state $end
$upscope $end
$scope module ff4 $end
$var wire 1 n' q $end
$var wire 1 l' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D( state $end
$upscope $end
$scope module ff5 $end
$var wire 1 o' q $end
$var wire 1 m' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E( state $end
$upscope $end
$upscope $end
$scope module m1 $end
$var wire 1 I& data_out [15] $end
$var wire 1 J& data_out [14] $end
$var wire 1 K& data_out [13] $end
$var wire 1 L& data_out [12] $end
$var wire 1 M& data_out [11] $end
$var wire 1 N& data_out [10] $end
$var wire 1 O& data_out [9] $end
$var wire 1 P& data_out [8] $end
$var wire 1 Q& data_out [7] $end
$var wire 1 R& data_out [6] $end
$var wire 1 S& data_out [5] $end
$var wire 1 T& data_out [4] $end
$var wire 1 U& data_out [3] $end
$var wire 1 V& data_out [2] $end
$var wire 1 W& data_out [1] $end
$var wire 1 X& data_out [0] $end
$var wire 1 $' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 5" addr [12] $end
$var wire 1 6" addr [11] $end
$var wire 1 7" addr [10] $end
$var wire 1 8" addr [9] $end
$var wire 1 9" addr [8] $end
$var wire 1 :" addr [7] $end
$var wire 1 ;" addr [6] $end
$var wire 1 <" addr [5] $end
$var wire 1 =" addr [4] $end
$var wire 1 >" addr [3] $end
$var wire 1 ?" addr [2] $end
$var wire 1 @" addr [1] $end
$var wire 1 A" addr [0] $end
$var wire 1 )! wr $end
$var wire 1 *! rd $end
$var wire 1 !' enable $end
$var wire 1 { create_dump $end
$var wire 1 F( bank_id [1] $end
$var wire 1 G( bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H( loaded $end
$var reg 16 I( largest [15:0] $end
$var wire 1 J( addr_1c [13] $end
$var wire 1 K( addr_1c [12] $end
$var wire 1 L( addr_1c [11] $end
$var wire 1 M( addr_1c [10] $end
$var wire 1 N( addr_1c [9] $end
$var wire 1 O( addr_1c [8] $end
$var wire 1 P( addr_1c [7] $end
$var wire 1 Q( addr_1c [6] $end
$var wire 1 R( addr_1c [5] $end
$var wire 1 S( addr_1c [4] $end
$var wire 1 T( addr_1c [3] $end
$var wire 1 U( addr_1c [2] $end
$var wire 1 V( addr_1c [1] $end
$var wire 1 W( addr_1c [0] $end
$var wire 1 X( data_in_1c [15] $end
$var wire 1 Y( data_in_1c [14] $end
$var wire 1 Z( data_in_1c [13] $end
$var wire 1 [( data_in_1c [12] $end
$var wire 1 \( data_in_1c [11] $end
$var wire 1 ]( data_in_1c [10] $end
$var wire 1 ^( data_in_1c [9] $end
$var wire 1 _( data_in_1c [8] $end
$var wire 1 `( data_in_1c [7] $end
$var wire 1 a( data_in_1c [6] $end
$var wire 1 b( data_in_1c [5] $end
$var wire 1 c( data_in_1c [4] $end
$var wire 1 d( data_in_1c [3] $end
$var wire 1 e( data_in_1c [2] $end
$var wire 1 f( data_in_1c [1] $end
$var wire 1 g( data_in_1c [0] $end
$var integer 32 h( mcd $end
$var integer 32 i( largeout $end
$var integer 32 j( i $end
$var wire 1 k( rd0 $end
$var wire 1 l( wr0 $end
$var wire 1 m( rd1 $end
$var wire 1 n( wr1 $end
$var wire 1 o( data_out_1c [15] $end
$var wire 1 p( data_out_1c [14] $end
$var wire 1 q( data_out_1c [13] $end
$var wire 1 r( data_out_1c [12] $end
$var wire 1 s( data_out_1c [11] $end
$var wire 1 t( data_out_1c [10] $end
$var wire 1 u( data_out_1c [9] $end
$var wire 1 v( data_out_1c [8] $end
$var wire 1 w( data_out_1c [7] $end
$var wire 1 x( data_out_1c [6] $end
$var wire 1 y( data_out_1c [5] $end
$var wire 1 z( data_out_1c [4] $end
$var wire 1 {( data_out_1c [3] $end
$var wire 1 |( data_out_1c [2] $end
$var wire 1 }( data_out_1c [1] $end
$var wire 1 ~( data_out_1c [0] $end
$var wire 1 !) rd2 $end
$var wire 1 ") wr2 $end
$var wire 1 #) rd3 $end
$var wire 1 $) wr3 $end
$var wire 1 %) busy $end
$scope module ff0 $end
$var wire 1 m( q $end
$var wire 1 k( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &) state $end
$upscope $end
$scope module ff1 $end
$var wire 1 n( q $end
$var wire 1 l( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ') state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 K( q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 () state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 L( q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )) state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 M( q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *) state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 N( q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +) state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 O( q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,) state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 P( q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -) state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 Q( q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .) state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 R( q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /) state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 S( q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0) state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 T( q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1) state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 U( q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2) state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 V( q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3) state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 W( q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4) state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 X( q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5) state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 Y( q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6) state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 Z( q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7) state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 [( q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8) state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 \( q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9) state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 ]( q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :) state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 ^( q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;) state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 _( q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <) state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 `( q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =) state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 a( q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >) state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 b( q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?) state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 c( q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @) state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 d( q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A) state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 e( q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B) state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 f( q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C) state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 g( q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D) state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 I& q $end
$var wire 1 o( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E) state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 J& q $end
$var wire 1 p( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F) state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 K& q $end
$var wire 1 q( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G) state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 L& q $end
$var wire 1 r( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H) state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 M& q $end
$var wire 1 s( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I) state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 N& q $end
$var wire 1 t( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J) state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 O& q $end
$var wire 1 u( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K) state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 P& q $end
$var wire 1 v( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L) state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 Q& q $end
$var wire 1 w( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M) state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 R& q $end
$var wire 1 x( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N) state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 S& q $end
$var wire 1 y( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O) state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 T& q $end
$var wire 1 z( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 U& q $end
$var wire 1 {( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 V& q $end
$var wire 1 |( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 W& q $end
$var wire 1 }( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 X& q $end
$var wire 1 ~( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end
$scope module ff2 $end
$var wire 1 !) q $end
$var wire 1 m( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end
$scope module ff3 $end
$var wire 1 ") q $end
$var wire 1 n( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end
$scope module ff4 $end
$var wire 1 #) q $end
$var wire 1 !) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end
$scope module ff5 $end
$var wire 1 $) q $end
$var wire 1 ") d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end
$upscope $end
$scope module m2 $end
$var wire 1 Y& data_out [15] $end
$var wire 1 Z& data_out [14] $end
$var wire 1 [& data_out [13] $end
$var wire 1 \& data_out [12] $end
$var wire 1 ]& data_out [11] $end
$var wire 1 ^& data_out [10] $end
$var wire 1 _& data_out [9] $end
$var wire 1 `& data_out [8] $end
$var wire 1 a& data_out [7] $end
$var wire 1 b& data_out [6] $end
$var wire 1 c& data_out [5] $end
$var wire 1 d& data_out [4] $end
$var wire 1 e& data_out [3] $end
$var wire 1 f& data_out [2] $end
$var wire 1 g& data_out [1] $end
$var wire 1 h& data_out [0] $end
$var wire 1 %' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 5" addr [12] $end
$var wire 1 6" addr [11] $end
$var wire 1 7" addr [10] $end
$var wire 1 8" addr [9] $end
$var wire 1 9" addr [8] $end
$var wire 1 :" addr [7] $end
$var wire 1 ;" addr [6] $end
$var wire 1 <" addr [5] $end
$var wire 1 =" addr [4] $end
$var wire 1 >" addr [3] $end
$var wire 1 ?" addr [2] $end
$var wire 1 @" addr [1] $end
$var wire 1 A" addr [0] $end
$var wire 1 )! wr $end
$var wire 1 *! rd $end
$var wire 1 ~& enable $end
$var wire 1 { create_dump $end
$var wire 1 Y) bank_id [1] $end
$var wire 1 Z) bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [) loaded $end
$var reg 16 \) largest [15:0] $end
$var wire 1 ]) addr_1c [13] $end
$var wire 1 ^) addr_1c [12] $end
$var wire 1 _) addr_1c [11] $end
$var wire 1 `) addr_1c [10] $end
$var wire 1 a) addr_1c [9] $end
$var wire 1 b) addr_1c [8] $end
$var wire 1 c) addr_1c [7] $end
$var wire 1 d) addr_1c [6] $end
$var wire 1 e) addr_1c [5] $end
$var wire 1 f) addr_1c [4] $end
$var wire 1 g) addr_1c [3] $end
$var wire 1 h) addr_1c [2] $end
$var wire 1 i) addr_1c [1] $end
$var wire 1 j) addr_1c [0] $end
$var wire 1 k) data_in_1c [15] $end
$var wire 1 l) data_in_1c [14] $end
$var wire 1 m) data_in_1c [13] $end
$var wire 1 n) data_in_1c [12] $end
$var wire 1 o) data_in_1c [11] $end
$var wire 1 p) data_in_1c [10] $end
$var wire 1 q) data_in_1c [9] $end
$var wire 1 r) data_in_1c [8] $end
$var wire 1 s) data_in_1c [7] $end
$var wire 1 t) data_in_1c [6] $end
$var wire 1 u) data_in_1c [5] $end
$var wire 1 v) data_in_1c [4] $end
$var wire 1 w) data_in_1c [3] $end
$var wire 1 x) data_in_1c [2] $end
$var wire 1 y) data_in_1c [1] $end
$var wire 1 z) data_in_1c [0] $end
$var integer 32 {) mcd $end
$var integer 32 |) largeout $end
$var integer 32 }) i $end
$var wire 1 ~) rd0 $end
$var wire 1 !* wr0 $end
$var wire 1 "* rd1 $end
$var wire 1 #* wr1 $end
$var wire 1 $* data_out_1c [15] $end
$var wire 1 %* data_out_1c [14] $end
$var wire 1 &* data_out_1c [13] $end
$var wire 1 '* data_out_1c [12] $end
$var wire 1 (* data_out_1c [11] $end
$var wire 1 )* data_out_1c [10] $end
$var wire 1 ** data_out_1c [9] $end
$var wire 1 +* data_out_1c [8] $end
$var wire 1 ,* data_out_1c [7] $end
$var wire 1 -* data_out_1c [6] $end
$var wire 1 .* data_out_1c [5] $end
$var wire 1 /* data_out_1c [4] $end
$var wire 1 0* data_out_1c [3] $end
$var wire 1 1* data_out_1c [2] $end
$var wire 1 2* data_out_1c [1] $end
$var wire 1 3* data_out_1c [0] $end
$var wire 1 4* rd2 $end
$var wire 1 5* wr2 $end
$var wire 1 6* rd3 $end
$var wire 1 7* wr3 $end
$var wire 1 8* busy $end
$scope module ff0 $end
$var wire 1 "* q $end
$var wire 1 ~) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9* state $end
$upscope $end
$scope module ff1 $end
$var wire 1 #* q $end
$var wire 1 !* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :* state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 ^) q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;* state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 _) q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <* state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 `) q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =* state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 a) q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >* state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 b) q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?* state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 c) q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @* state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 d) q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A* state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 e) q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B* state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 f) q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C* state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 g) q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D* state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 h) q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E* state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 i) q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F* state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 j) q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G* state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 k) q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H* state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 l) q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I* state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 m) q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J* state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 n) q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K* state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 o) q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L* state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 p) q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M* state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 q) q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N* state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 r) q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O* state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 s) q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P* state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 t) q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q* state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 u) q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R* state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 v) q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S* state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 w) q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T* state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 x) q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U* state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 y) q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V* state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 z) q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W* state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 Y& q $end
$var wire 1 $* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X* state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 Z& q $end
$var wire 1 %* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y* state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 [& q $end
$var wire 1 &* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z* state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 \& q $end
$var wire 1 '* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [* state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 ]& q $end
$var wire 1 (* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \* state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 ^& q $end
$var wire 1 )* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]* state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 _& q $end
$var wire 1 ** d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^* state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 `& q $end
$var wire 1 +* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _* state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 a& q $end
$var wire 1 ,* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `* state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 b& q $end
$var wire 1 -* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a* state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 c& q $end
$var wire 1 .* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b* state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 d& q $end
$var wire 1 /* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c* state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 e& q $end
$var wire 1 0* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d* state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 f& q $end
$var wire 1 1* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e* state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 g& q $end
$var wire 1 2* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f* state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 h& q $end
$var wire 1 3* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g* state $end
$upscope $end
$scope module ff2 $end
$var wire 1 4* q $end
$var wire 1 "* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h* state $end
$upscope $end
$scope module ff3 $end
$var wire 1 5* q $end
$var wire 1 #* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i* state $end
$upscope $end
$scope module ff4 $end
$var wire 1 6* q $end
$var wire 1 4* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j* state $end
$upscope $end
$scope module ff5 $end
$var wire 1 7* q $end
$var wire 1 5* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k* state $end
$upscope $end
$upscope $end
$scope module m3 $end
$var wire 1 i& data_out [15] $end
$var wire 1 j& data_out [14] $end
$var wire 1 k& data_out [13] $end
$var wire 1 l& data_out [12] $end
$var wire 1 m& data_out [11] $end
$var wire 1 n& data_out [10] $end
$var wire 1 o& data_out [9] $end
$var wire 1 p& data_out [8] $end
$var wire 1 q& data_out [7] $end
$var wire 1 r& data_out [6] $end
$var wire 1 s& data_out [5] $end
$var wire 1 t& data_out [4] $end
$var wire 1 u& data_out [3] $end
$var wire 1 v& data_out [2] $end
$var wire 1 w& data_out [1] $end
$var wire 1 x& data_out [0] $end
$var wire 1 &' err $end
$var wire 1 ! data_in [15] $end
$var wire 1 " data_in [14] $end
$var wire 1 # data_in [13] $end
$var wire 1 $ data_in [12] $end
$var wire 1 % data_in [11] $end
$var wire 1 & data_in [10] $end
$var wire 1 ' data_in [9] $end
$var wire 1 ( data_in [8] $end
$var wire 1 ) data_in [7] $end
$var wire 1 * data_in [6] $end
$var wire 1 + data_in [5] $end
$var wire 1 , data_in [4] $end
$var wire 1 - data_in [3] $end
$var wire 1 . data_in [2] $end
$var wire 1 / data_in [1] $end
$var wire 1 0 data_in [0] $end
$var wire 1 5" addr [12] $end
$var wire 1 6" addr [11] $end
$var wire 1 7" addr [10] $end
$var wire 1 8" addr [9] $end
$var wire 1 9" addr [8] $end
$var wire 1 :" addr [7] $end
$var wire 1 ;" addr [6] $end
$var wire 1 <" addr [5] $end
$var wire 1 =" addr [4] $end
$var wire 1 >" addr [3] $end
$var wire 1 ?" addr [2] $end
$var wire 1 @" addr [1] $end
$var wire 1 A" addr [0] $end
$var wire 1 )! wr $end
$var wire 1 *! rd $end
$var wire 1 }& enable $end
$var wire 1 { create_dump $end
$var wire 1 l* bank_id [1] $end
$var wire 1 m* bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n* loaded $end
$var reg 16 o* largest [15:0] $end
$var wire 1 p* addr_1c [13] $end
$var wire 1 q* addr_1c [12] $end
$var wire 1 r* addr_1c [11] $end
$var wire 1 s* addr_1c [10] $end
$var wire 1 t* addr_1c [9] $end
$var wire 1 u* addr_1c [8] $end
$var wire 1 v* addr_1c [7] $end
$var wire 1 w* addr_1c [6] $end
$var wire 1 x* addr_1c [5] $end
$var wire 1 y* addr_1c [4] $end
$var wire 1 z* addr_1c [3] $end
$var wire 1 {* addr_1c [2] $end
$var wire 1 |* addr_1c [1] $end
$var wire 1 }* addr_1c [0] $end
$var wire 1 ~* data_in_1c [15] $end
$var wire 1 !+ data_in_1c [14] $end
$var wire 1 "+ data_in_1c [13] $end
$var wire 1 #+ data_in_1c [12] $end
$var wire 1 $+ data_in_1c [11] $end
$var wire 1 %+ data_in_1c [10] $end
$var wire 1 &+ data_in_1c [9] $end
$var wire 1 '+ data_in_1c [8] $end
$var wire 1 (+ data_in_1c [7] $end
$var wire 1 )+ data_in_1c [6] $end
$var wire 1 *+ data_in_1c [5] $end
$var wire 1 ++ data_in_1c [4] $end
$var wire 1 ,+ data_in_1c [3] $end
$var wire 1 -+ data_in_1c [2] $end
$var wire 1 .+ data_in_1c [1] $end
$var wire 1 /+ data_in_1c [0] $end
$var integer 32 0+ mcd $end
$var integer 32 1+ largeout $end
$var integer 32 2+ i $end
$var wire 1 3+ rd0 $end
$var wire 1 4+ wr0 $end
$var wire 1 5+ rd1 $end
$var wire 1 6+ wr1 $end
$var wire 1 7+ data_out_1c [15] $end
$var wire 1 8+ data_out_1c [14] $end
$var wire 1 9+ data_out_1c [13] $end
$var wire 1 :+ data_out_1c [12] $end
$var wire 1 ;+ data_out_1c [11] $end
$var wire 1 <+ data_out_1c [10] $end
$var wire 1 =+ data_out_1c [9] $end
$var wire 1 >+ data_out_1c [8] $end
$var wire 1 ?+ data_out_1c [7] $end
$var wire 1 @+ data_out_1c [6] $end
$var wire 1 A+ data_out_1c [5] $end
$var wire 1 B+ data_out_1c [4] $end
$var wire 1 C+ data_out_1c [3] $end
$var wire 1 D+ data_out_1c [2] $end
$var wire 1 E+ data_out_1c [1] $end
$var wire 1 F+ data_out_1c [0] $end
$var wire 1 G+ rd2 $end
$var wire 1 H+ wr2 $end
$var wire 1 I+ rd3 $end
$var wire 1 J+ wr3 $end
$var wire 1 K+ busy $end
$scope module ff0 $end
$var wire 1 5+ q $end
$var wire 1 3+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L+ state $end
$upscope $end
$scope module ff1 $end
$var wire 1 6+ q $end
$var wire 1 4+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M+ state $end
$upscope $end
$scope module reg0[12] $end
$var wire 1 q* q $end
$var wire 1 5" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N+ state $end
$upscope $end
$scope module reg0[11] $end
$var wire 1 r* q $end
$var wire 1 6" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O+ state $end
$upscope $end
$scope module reg0[10] $end
$var wire 1 s* q $end
$var wire 1 7" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P+ state $end
$upscope $end
$scope module reg0[9] $end
$var wire 1 t* q $end
$var wire 1 8" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q+ state $end
$upscope $end
$scope module reg0[8] $end
$var wire 1 u* q $end
$var wire 1 9" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R+ state $end
$upscope $end
$scope module reg0[7] $end
$var wire 1 v* q $end
$var wire 1 :" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S+ state $end
$upscope $end
$scope module reg0[6] $end
$var wire 1 w* q $end
$var wire 1 ;" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T+ state $end
$upscope $end
$scope module reg0[5] $end
$var wire 1 x* q $end
$var wire 1 <" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U+ state $end
$upscope $end
$scope module reg0[4] $end
$var wire 1 y* q $end
$var wire 1 =" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V+ state $end
$upscope $end
$scope module reg0[3] $end
$var wire 1 z* q $end
$var wire 1 >" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W+ state $end
$upscope $end
$scope module reg0[2] $end
$var wire 1 {* q $end
$var wire 1 ?" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X+ state $end
$upscope $end
$scope module reg0[1] $end
$var wire 1 |* q $end
$var wire 1 @" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y+ state $end
$upscope $end
$scope module reg0[0] $end
$var wire 1 }* q $end
$var wire 1 A" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z+ state $end
$upscope $end
$scope module reg1[15] $end
$var wire 1 ~* q $end
$var wire 1 ! d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [+ state $end
$upscope $end
$scope module reg1[14] $end
$var wire 1 !+ q $end
$var wire 1 " d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \+ state $end
$upscope $end
$scope module reg1[13] $end
$var wire 1 "+ q $end
$var wire 1 # d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]+ state $end
$upscope $end
$scope module reg1[12] $end
$var wire 1 #+ q $end
$var wire 1 $ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^+ state $end
$upscope $end
$scope module reg1[11] $end
$var wire 1 $+ q $end
$var wire 1 % d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _+ state $end
$upscope $end
$scope module reg1[10] $end
$var wire 1 %+ q $end
$var wire 1 & d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `+ state $end
$upscope $end
$scope module reg1[9] $end
$var wire 1 &+ q $end
$var wire 1 ' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a+ state $end
$upscope $end
$scope module reg1[8] $end
$var wire 1 '+ q $end
$var wire 1 ( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b+ state $end
$upscope $end
$scope module reg1[7] $end
$var wire 1 (+ q $end
$var wire 1 ) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c+ state $end
$upscope $end
$scope module reg1[6] $end
$var wire 1 )+ q $end
$var wire 1 * d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d+ state $end
$upscope $end
$scope module reg1[5] $end
$var wire 1 *+ q $end
$var wire 1 + d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e+ state $end
$upscope $end
$scope module reg1[4] $end
$var wire 1 ++ q $end
$var wire 1 , d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f+ state $end
$upscope $end
$scope module reg1[3] $end
$var wire 1 ,+ q $end
$var wire 1 - d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g+ state $end
$upscope $end
$scope module reg1[2] $end
$var wire 1 -+ q $end
$var wire 1 . d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h+ state $end
$upscope $end
$scope module reg1[1] $end
$var wire 1 .+ q $end
$var wire 1 / d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i+ state $end
$upscope $end
$scope module reg1[0] $end
$var wire 1 /+ q $end
$var wire 1 0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j+ state $end
$upscope $end
$scope module reg2[15] $end
$var wire 1 i& q $end
$var wire 1 7+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k+ state $end
$upscope $end
$scope module reg2[14] $end
$var wire 1 j& q $end
$var wire 1 8+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l+ state $end
$upscope $end
$scope module reg2[13] $end
$var wire 1 k& q $end
$var wire 1 9+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m+ state $end
$upscope $end
$scope module reg2[12] $end
$var wire 1 l& q $end
$var wire 1 :+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n+ state $end
$upscope $end
$scope module reg2[11] $end
$var wire 1 m& q $end
$var wire 1 ;+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o+ state $end
$upscope $end
$scope module reg2[10] $end
$var wire 1 n& q $end
$var wire 1 <+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p+ state $end
$upscope $end
$scope module reg2[9] $end
$var wire 1 o& q $end
$var wire 1 =+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q+ state $end
$upscope $end
$scope module reg2[8] $end
$var wire 1 p& q $end
$var wire 1 >+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r+ state $end
$upscope $end
$scope module reg2[7] $end
$var wire 1 q& q $end
$var wire 1 ?+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s+ state $end
$upscope $end
$scope module reg2[6] $end
$var wire 1 r& q $end
$var wire 1 @+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t+ state $end
$upscope $end
$scope module reg2[5] $end
$var wire 1 s& q $end
$var wire 1 A+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u+ state $end
$upscope $end
$scope module reg2[4] $end
$var wire 1 t& q $end
$var wire 1 B+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v+ state $end
$upscope $end
$scope module reg2[3] $end
$var wire 1 u& q $end
$var wire 1 C+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w+ state $end
$upscope $end
$scope module reg2[2] $end
$var wire 1 v& q $end
$var wire 1 D+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x+ state $end
$upscope $end
$scope module reg2[1] $end
$var wire 1 w& q $end
$var wire 1 E+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y+ state $end
$upscope $end
$scope module reg2[0] $end
$var wire 1 x& q $end
$var wire 1 F+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z+ state $end
$upscope $end
$scope module ff2 $end
$var wire 1 G+ q $end
$var wire 1 5+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {+ state $end
$upscope $end
$scope module ff3 $end
$var wire 1 H+ q $end
$var wire 1 6+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |+ state $end
$upscope $end
$scope module ff4 $end
$var wire 1 I+ q $end
$var wire 1 G+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }+ state $end
$upscope $end
$scope module ff5 $end
$var wire 1 J+ q $end
$var wire 1 H+ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~+ state $end
$upscope $end
$upscope $end
$scope module b0[3] $end
$var wire 1 '' q $end
$var wire 1 }& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !, state $end
$upscope $end
$scope module b0[2] $end
$var wire 1 (' q $end
$var wire 1 ~& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ", state $end
$upscope $end
$scope module b0[1] $end
$var wire 1 )' q $end
$var wire 1 !' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #, state $end
$upscope $end
$scope module b0[0] $end
$var wire 1 *' q $end
$var wire 1 "' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $, state $end
$upscope $end
$scope module b1[3] $end
$var wire 1 +' q $end
$var wire 1 '' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %, state $end
$upscope $end
$scope module b1[2] $end
$var wire 1 ,' q $end
$var wire 1 (' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &, state $end
$upscope $end
$scope module b1[1] $end
$var wire 1 -' q $end
$var wire 1 )' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ', state $end
$upscope $end
$scope module b1[0] $end
$var wire 1 .' q $end
$var wire 1 *' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (, state $end
$upscope $end
$scope module b2[3] $end
$var wire 1 /' q $end
$var wire 1 +' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ), state $end
$upscope $end
$scope module b2[2] $end
$var wire 1 0' q $end
$var wire 1 ,' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *, state $end
$upscope $end
$scope module b2[1] $end
$var wire 1 1' q $end
$var wire 1 -' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +, state $end
$upscope $end
$scope module b2[0] $end
$var wire 1 2' q $end
$var wire 1 .' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,, state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module ref $end
$var wire 1 -, Addr [15] $end
$var wire 1 ., Addr [14] $end
$var wire 1 /, Addr [13] $end
$var wire 1 0, Addr [12] $end
$var wire 1 1, Addr [11] $end
$var wire 1 2, Addr [10] $end
$var wire 1 3, Addr [9] $end
$var wire 1 4, Addr [8] $end
$var wire 1 5, Addr [7] $end
$var wire 1 6, Addr [6] $end
$var wire 1 7, Addr [5] $end
$var wire 1 8, Addr [4] $end
$var wire 1 9, Addr [3] $end
$var wire 1 :, Addr [2] $end
$var wire 1 ;, Addr [1] $end
$var wire 1 <, Addr [0] $end
$var wire 1 =, DataIn [15] $end
$var wire 1 >, DataIn [14] $end
$var wire 1 ?, DataIn [13] $end
$var wire 1 @, DataIn [12] $end
$var wire 1 A, DataIn [11] $end
$var wire 1 B, DataIn [10] $end
$var wire 1 C, DataIn [9] $end
$var wire 1 D, DataIn [8] $end
$var wire 1 E, DataIn [7] $end
$var wire 1 F, DataIn [6] $end
$var wire 1 G, DataIn [5] $end
$var wire 1 H, DataIn [4] $end
$var wire 1 I, DataIn [3] $end
$var wire 1 J, DataIn [2] $end
$var wire 1 K, DataIn [1] $end
$var wire 1 L, DataIn [0] $end
$var wire 1 M, Rd $end
$var wire 1 N, Wr $end
$var wire 1 O, clk $end
$var wire 1 P, rst $end
$var reg 16 Q, DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 R, loaded $end
$var integer 32 S, i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 X
b1 $!
b1 U#
b10000 b$
b10000 e$
b10000 h$
b10000 k$
b101 n$
b1 q$
b11 v$
b10000 %&
b10000 (&
b10000 +&
b10000 .&
b101 1&
b1 4&
b0 3
b0 4
05
06
b110110101100101011011010010111001100001011001000110010001110010 7
0N
b0 O
b0 P
b0 Q
1R
b0 S
b10000000000000000000000000000110 T
bx U
bx V
bx W
bx Q,
1R,
b10000000000000000 S,
0,,
0+,
0*,
0),
0(,
0',
0&,
0%,
0$,
0#,
0",
0!,
1n*
b1 o*
bx 0+
bx 1+
b100000000000001 2+
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0t+
0s+
0r+
0q+
0p+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0U+
0T+
0S+
0R+
0Q+
0P+
0O+
0N+
0M+
0L+
1[)
b1 \)
bx {)
bx |)
b100000000000001 })
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0[*
0Z*
0Y*
0X*
0W*
0V*
0U*
0T*
0S*
0R*
0Q*
0P*
0O*
0N*
0M*
0L*
0K*
0J*
0I*
0H*
0G*
0F*
0E*
0D*
0C*
0B*
0A*
0@*
0?*
0>*
0=*
0<*
0;*
0:*
09*
1H(
b1 I(
bx h(
bx i(
b100000000000001 j(
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
0>)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
15'
b1 6'
bx U'
bx V'
b100000000000001 W'
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
bx 7&
b100000000 8&
bx 5&
b100000000 6&
bx 2&
b100000000 3&
bx /&
b100000000 0&
bx ,&
b100000000 -&
bx )&
b100000000 *&
bx &&
b100000000 '&
bx t$
b100000000 u$
bx r$
b100000000 s$
bx o$
b100000000 p$
bx l$
b100000000 m$
bx i$
b100000000 j$
bx f$
b100000000 g$
bx c$
b100000000 d$
0T#
0R#
0P#
0N#
0L#
0J#
0I#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0e"
0d"
0c"
0b"
0a"
0`"
1!!
1"!
b1 #!
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
01
x2
18
19
0:
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
x|
1}
1~
x%!
x&!
x'!
x(!
x)!
x*!
x+!
0.!
x-!
x,!
x1!
x0!
x/!
x4!
x3!
x2!
x5!
06!
07!
08!
09!
0:!
0;!
x<!
x=!
x>!
x?!
x@!
0H!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0K!
0J!
0I!
xN!
xM!
xL!
0S!
0R!
0Q!
0P!
0O!
0X!
0W!
0V!
0U!
0T!
0]!
0\!
0[!
0Z!
0Y!
0b!
0a!
0`!
0_!
0^!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
xd!
xc!
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0D"
xC"
xB"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xX"
xW"
xV"
xU"
0Y"
0Z"
0_"
0^"
0]"
0\"
0["
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
x<&
x;&
x:&
x9&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xM&
xL&
xK&
xJ&
xI&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
x\&
x[&
xZ&
xY&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
xi&
xy&
xz&
x{&
x|&
x"'
x!'
x~&
x}&
0#'
0$'
0%'
0&'
x*'
x)'
x('
x''
x.'
x-'
x,'
x+'
x2'
x1'
x0'
x/'
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
0p*
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
03+
04+
x5+
x6+
xF+
xE+
xD+
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
xG+
xH+
xI+
xJ+
xK+
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
0])
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
0~)
0!*
x"*
x#*
x3*
x2*
x1*
x0*
x/*
x.*
x-*
x,*
x+*
x**
x)*
x(*
x'*
x&*
x%*
x$*
x4*
x5*
x6*
x7*
x8*
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
0J(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
0k(
0l(
xm(
xn(
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
xo(
x!)
x")
x#)
x$)
x%)
xD'
xC'
xB'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
07'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
0X'
0Y'
xZ'
x['
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
x\'
xl'
xm'
xn'
xo'
xp'
0{$
0z$
0y$
1x$
1w$
1"%
0!%
0~$
1}$
1|$
0'%
1&%
0%%
1$%
1#%
1,%
1+%
0*%
1)%
1(%
01%
00%
1/%
1.%
1-%
16%
05%
14%
13%
12%
0F%
0E%
0D%
0C%
0B%
0A%
0@%
0?%
0>%
0=%
0<%
0;%
0:%
09%
08%
07%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0J%
0I%
0H%
0G%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0Z%
0Y%
0X%
0W%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
0j%
0i%
0h%
0g%
0w%
1x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
x"&
0#&
0$&
0Z#
0Y#
0X#
1W#
0V#
1_#
0^#
0]#
1\#
0[#
0d#
1c#
0b#
1a#
0`#
1i#
1h#
0g#
1f#
0e#
0n#
0m#
1l#
1k#
0j#
1s#
0r#
1q#
1p#
0o#
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0E$
0D$
0C$
0B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
07$
06$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0V$
1W$
0X$
0Y$
0Z$
0[$
0\$
0]$
0^$
x_$
0`$
0a$
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xx"
xy"
xz"
x{"
x|"
x}"
x~"
x!#
x"#
x##
x$#
x%#
x&#
x'#
x(#
x)#
x*#
x+#
x,#
x-#
x.#
x/#
x0#
x1#
x2#
x4#
x3#
x6#
x5#
x7#
x8#
09#
x:#
x;#
x<#
x=#
x>#
xS#
xQ#
xO#
xM#
xK#
xH#
0N,
0M,
0L,
0K,
0J,
0I,
0H,
0G,
0F,
0E,
0D,
0C,
0B,
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
01,
00,
0/,
0.,
0-,
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
1m*
1l*
0Z)
1Y)
1G(
0F(
04'
03'
1O,
1P,
$end
#1
0/'
00'
01'
02'
0+'
0,'
0-'
0.'
0''
0('
0)'
0*'
0J+
0I+
0H+
0G+
0i&
0j&
0k&
0l&
0m&
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0~*
0!+
0"+
0#+
0$+
0%+
0&+
0'+
0(+
0)+
0*+
0++
0,+
0-+
0.+
0/+
0q*
0r*
0s*
0t*
0u*
0v*
0w*
0x*
0y*
0z*
0{*
0|*
0}*
06+
05+
0K+
07*
06*
05*
04*
0Y&
0Z&
0[&
0\&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0k)
0l)
0m)
0n)
0o)
0p)
0q)
0r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0^)
0_)
0`)
0a)
0b)
0c)
0d)
0e)
0f)
0g)
0h)
0i)
0j)
0#*
0"*
08*
0$)
0#)
0")
0!)
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0X(
0Y(
0Z(
0[(
0\(
0](
0^(
0_(
0`(
0a(
0b(
0c(
0d(
0e(
0f(
0g(
0K(
0L(
0M(
0N(
0O(
0P(
0Q(
0R(
0S(
0T(
0U(
0V(
0W(
0n(
0m(
0%)
0o'
0n'
0m'
0l'
09&
0:&
0;&
0<&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
0E&
0F&
0G&
0H&
0E'
0F'
0G'
0H'
0I'
0J'
0K'
0L'
0M'
0N'
0O'
0P'
0Q'
0R'
0S'
0T'
08'
09'
0:'
0;'
0<'
0='
0>'
0?'
0@'
0A'
0B'
0C'
0D'
0['
0Z'
0p'
0>#
1=#
0S#
0:#
1=!
1<!
08#
0O#
03#
04#
02#
01#
0H#
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
02!
03!
04!
0/!
00!
01!
0##
0>!
0w"
0N!
0@!
0?!
0x"
0y"
0*!
0/#
0z"
0&#
0{"
0(!
0.#
0|"
0%!
0"&
0_$
0-#
0;#
0Q#
0}"
0+!
0)!
00#
0~"
0*#
0!#
0+#
0"#
1,#
02
1<#
17#
05!
0|
05#
0K#
0%#
0)#
0-!
0,!
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0F+
0E+
0D+
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0X"
0W"
0V"
0U"
0"'
0!'
0~&
0}&
0&!
0'#
0'!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
0C"
0B"
06#
0M#
0M!
0L!
0u"
0t"
0s"
0q"
0p"
0o"
0$#
0(#
0v"
0r"
1y&
0z&
0{&
0|&
#50
0!!
08
0O,
0}
#100
1!!
b10 #!
18
1O,
1}
b0 d$
b1 d$
b10 d$
b11 d$
b100 d$
b101 d$
b110 d$
b111 d$
b1000 d$
b1001 d$
b1010 d$
b1011 d$
b1100 d$
b1101 d$
b1110 d$
b1111 d$
b10000 d$
b10001 d$
b10010 d$
b10011 d$
b10100 d$
b10101 d$
b10110 d$
b10111 d$
b11000 d$
b11001 d$
b11010 d$
b11011 d$
b11100 d$
b11101 d$
b11110 d$
b11111 d$
b100000 d$
b100001 d$
b100010 d$
b100011 d$
b100100 d$
b100101 d$
b100110 d$
b100111 d$
b101000 d$
b101001 d$
b101010 d$
b101011 d$
b101100 d$
b101101 d$
b101110 d$
b101111 d$
b110000 d$
b110001 d$
b110010 d$
b110011 d$
b110100 d$
b110101 d$
b110110 d$
b110111 d$
b111000 d$
b111001 d$
b111010 d$
b111011 d$
b111100 d$
b111101 d$
b111110 d$
b111111 d$
b1000000 d$
b1000001 d$
b1000010 d$
b1000011 d$
b1000100 d$
b1000101 d$
b1000110 d$
b1000111 d$
b1001000 d$
b1001001 d$
b1001010 d$
b1001011 d$
b1001100 d$
b1001101 d$
b1001110 d$
b1001111 d$
b1010000 d$
b1010001 d$
b1010010 d$
b1010011 d$
b1010100 d$
b1010101 d$
b1010110 d$
b1010111 d$
b1011000 d$
b1011001 d$
b1011010 d$
b1011011 d$
b1011100 d$
b1011101 d$
b1011110 d$
b1011111 d$
b1100000 d$
b1100001 d$
b1100010 d$
b1100011 d$
b1100100 d$
b1100101 d$
b1100110 d$
b1100111 d$
b1101000 d$
b1101001 d$
b1101010 d$
b1101011 d$
b1101100 d$
b1101101 d$
b1101110 d$
b1101111 d$
b1110000 d$
b1110001 d$
b1110010 d$
b1110011 d$
b1110100 d$
b1110101 d$
b1110110 d$
b1110111 d$
b1111000 d$
b1111001 d$
b1111010 d$
b1111011 d$
b1111100 d$
b1111101 d$
b1111110 d$
b1111111 d$
b10000000 d$
b10000001 d$
b10000010 d$
b10000011 d$
b10000100 d$
b10000101 d$
b10000110 d$
b10000111 d$
b10001000 d$
b10001001 d$
b10001010 d$
b10001011 d$
b10001100 d$
b10001101 d$
b10001110 d$
b10001111 d$
b10010000 d$
b10010001 d$
b10010010 d$
b10010011 d$
b10010100 d$
b10010101 d$
b10010110 d$
b10010111 d$
b10011000 d$
b10011001 d$
b10011010 d$
b10011011 d$
b10011100 d$
b10011101 d$
b10011110 d$
b10011111 d$
b10100000 d$
b10100001 d$
b10100010 d$
b10100011 d$
b10100100 d$
b10100101 d$
b10100110 d$
b10100111 d$
b10101000 d$
b10101001 d$
b10101010 d$
b10101011 d$
b10101100 d$
b10101101 d$
b10101110 d$
b10101111 d$
b10110000 d$
b10110001 d$
b10110010 d$
b10110011 d$
b10110100 d$
b10110101 d$
b10110110 d$
b10110111 d$
b10111000 d$
b10111001 d$
b10111010 d$
b10111011 d$
b10111100 d$
b10111101 d$
b10111110 d$
b10111111 d$
b11000000 d$
b11000001 d$
b11000010 d$
b11000011 d$
b11000100 d$
b11000101 d$
b11000110 d$
b11000111 d$
b11001000 d$
b11001001 d$
b11001010 d$
b11001011 d$
b11001100 d$
b11001101 d$
b11001110 d$
b11001111 d$
b11010000 d$
b11010001 d$
b11010010 d$
b11010011 d$
b11010100 d$
b11010101 d$
b11010110 d$
b11010111 d$
b11011000 d$
b11011001 d$
b11011010 d$
b11011011 d$
b11011100 d$
b11011101 d$
b11011110 d$
b11011111 d$
b11100000 d$
b11100001 d$
b11100010 d$
b11100011 d$
b11100100 d$
b11100101 d$
b11100110 d$
b11100111 d$
b11101000 d$
b11101001 d$
b11101010 d$
b11101011 d$
b11101100 d$
b11101101 d$
b11101110 d$
b11101111 d$
b11110000 d$
b11110001 d$
b11110010 d$
b11110011 d$
b11110100 d$
b11110101 d$
b11110110 d$
b11110111 d$
b11111000 d$
b11111001 d$
b11111010 d$
b11111011 d$
b11111100 d$
b11111101 d$
b11111110 d$
b11111111 d$
b100000000 d$
b0 g$
b1 g$
b10 g$
b11 g$
b100 g$
b101 g$
b110 g$
b111 g$
b1000 g$
b1001 g$
b1010 g$
b1011 g$
b1100 g$
b1101 g$
b1110 g$
b1111 g$
b10000 g$
b10001 g$
b10010 g$
b10011 g$
b10100 g$
b10101 g$
b10110 g$
b10111 g$
b11000 g$
b11001 g$
b11010 g$
b11011 g$
b11100 g$
b11101 g$
b11110 g$
b11111 g$
b100000 g$
b100001 g$
b100010 g$
b100011 g$
b100100 g$
b100101 g$
b100110 g$
b100111 g$
b101000 g$
b101001 g$
b101010 g$
b101011 g$
b101100 g$
b101101 g$
b101110 g$
b101111 g$
b110000 g$
b110001 g$
b110010 g$
b110011 g$
b110100 g$
b110101 g$
b110110 g$
b110111 g$
b111000 g$
b111001 g$
b111010 g$
b111011 g$
b111100 g$
b111101 g$
b111110 g$
b111111 g$
b1000000 g$
b1000001 g$
b1000010 g$
b1000011 g$
b1000100 g$
b1000101 g$
b1000110 g$
b1000111 g$
b1001000 g$
b1001001 g$
b1001010 g$
b1001011 g$
b1001100 g$
b1001101 g$
b1001110 g$
b1001111 g$
b1010000 g$
b1010001 g$
b1010010 g$
b1010011 g$
b1010100 g$
b1010101 g$
b1010110 g$
b1010111 g$
b1011000 g$
b1011001 g$
b1011010 g$
b1011011 g$
b1011100 g$
b1011101 g$
b1011110 g$
b1011111 g$
b1100000 g$
b1100001 g$
b1100010 g$
b1100011 g$
b1100100 g$
b1100101 g$
b1100110 g$
b1100111 g$
b1101000 g$
b1101001 g$
b1101010 g$
b1101011 g$
b1101100 g$
b1101101 g$
b1101110 g$
b1101111 g$
b1110000 g$
b1110001 g$
b1110010 g$
b1110011 g$
b1110100 g$
b1110101 g$
b1110110 g$
b1110111 g$
b1111000 g$
b1111001 g$
b1111010 g$
b1111011 g$
b1111100 g$
b1111101 g$
b1111110 g$
b1111111 g$
b10000000 g$
b10000001 g$
b10000010 g$
b10000011 g$
b10000100 g$
b10000101 g$
b10000110 g$
b10000111 g$
b10001000 g$
b10001001 g$
b10001010 g$
b10001011 g$
b10001100 g$
b10001101 g$
b10001110 g$
b10001111 g$
b10010000 g$
b10010001 g$
b10010010 g$
b10010011 g$
b10010100 g$
b10010101 g$
b10010110 g$
b10010111 g$
b10011000 g$
b10011001 g$
b10011010 g$
b10011011 g$
b10011100 g$
b10011101 g$
b10011110 g$
b10011111 g$
b10100000 g$
b10100001 g$
b10100010 g$
b10100011 g$
b10100100 g$
b10100101 g$
b10100110 g$
b10100111 g$
b10101000 g$
b10101001 g$
b10101010 g$
b10101011 g$
b10101100 g$
b10101101 g$
b10101110 g$
b10101111 g$
b10110000 g$
b10110001 g$
b10110010 g$
b10110011 g$
b10110100 g$
b10110101 g$
b10110110 g$
b10110111 g$
b10111000 g$
b10111001 g$
b10111010 g$
b10111011 g$
b10111100 g$
b10111101 g$
b10111110 g$
b10111111 g$
b11000000 g$
b11000001 g$
b11000010 g$
b11000011 g$
b11000100 g$
b11000101 g$
b11000110 g$
b11000111 g$
b11001000 g$
b11001001 g$
b11001010 g$
b11001011 g$
b11001100 g$
b11001101 g$
b11001110 g$
b11001111 g$
b11010000 g$
b11010001 g$
b11010010 g$
b11010011 g$
b11010100 g$
b11010101 g$
b11010110 g$
b11010111 g$
b11011000 g$
b11011001 g$
b11011010 g$
b11011011 g$
b11011100 g$
b11011101 g$
b11011110 g$
b11011111 g$
b11100000 g$
b11100001 g$
b11100010 g$
b11100011 g$
b11100100 g$
b11100101 g$
b11100110 g$
b11100111 g$
b11101000 g$
b11101001 g$
b11101010 g$
b11101011 g$
b11101100 g$
b11101101 g$
b11101110 g$
b11101111 g$
b11110000 g$
b11110001 g$
b11110010 g$
b11110011 g$
b11110100 g$
b11110101 g$
b11110110 g$
b11110111 g$
b11111000 g$
b11111001 g$
b11111010 g$
b11111011 g$
b11111100 g$
b11111101 g$
b11111110 g$
b11111111 g$
b100000000 g$
b0 j$
b1 j$
b10 j$
b11 j$
b100 j$
b101 j$
b110 j$
b111 j$
b1000 j$
b1001 j$
b1010 j$
b1011 j$
b1100 j$
b1101 j$
b1110 j$
b1111 j$
b10000 j$
b10001 j$
b10010 j$
b10011 j$
b10100 j$
b10101 j$
b10110 j$
b10111 j$
b11000 j$
b11001 j$
b11010 j$
b11011 j$
b11100 j$
b11101 j$
b11110 j$
b11111 j$
b100000 j$
b100001 j$
b100010 j$
b100011 j$
b100100 j$
b100101 j$
b100110 j$
b100111 j$
b101000 j$
b101001 j$
b101010 j$
b101011 j$
b101100 j$
b101101 j$
b101110 j$
b101111 j$
b110000 j$
b110001 j$
b110010 j$
b110011 j$
b110100 j$
b110101 j$
b110110 j$
b110111 j$
b111000 j$
b111001 j$
b111010 j$
b111011 j$
b111100 j$
b111101 j$
b111110 j$
b111111 j$
b1000000 j$
b1000001 j$
b1000010 j$
b1000011 j$
b1000100 j$
b1000101 j$
b1000110 j$
b1000111 j$
b1001000 j$
b1001001 j$
b1001010 j$
b1001011 j$
b1001100 j$
b1001101 j$
b1001110 j$
b1001111 j$
b1010000 j$
b1010001 j$
b1010010 j$
b1010011 j$
b1010100 j$
b1010101 j$
b1010110 j$
b1010111 j$
b1011000 j$
b1011001 j$
b1011010 j$
b1011011 j$
b1011100 j$
b1011101 j$
b1011110 j$
b1011111 j$
b1100000 j$
b1100001 j$
b1100010 j$
b1100011 j$
b1100100 j$
b1100101 j$
b1100110 j$
b1100111 j$
b1101000 j$
b1101001 j$
b1101010 j$
b1101011 j$
b1101100 j$
b1101101 j$
b1101110 j$
b1101111 j$
b1110000 j$
b1110001 j$
b1110010 j$
b1110011 j$
b1110100 j$
b1110101 j$
b1110110 j$
b1110111 j$
b1111000 j$
b1111001 j$
b1111010 j$
b1111011 j$
b1111100 j$
b1111101 j$
b1111110 j$
b1111111 j$
b10000000 j$
b10000001 j$
b10000010 j$
b10000011 j$
b10000100 j$
b10000101 j$
b10000110 j$
b10000111 j$
b10001000 j$
b10001001 j$
b10001010 j$
b10001011 j$
b10001100 j$
b10001101 j$
b10001110 j$
b10001111 j$
b10010000 j$
b10010001 j$
b10010010 j$
b10010011 j$
b10010100 j$
b10010101 j$
b10010110 j$
b10010111 j$
b10011000 j$
b10011001 j$
b10011010 j$
b10011011 j$
b10011100 j$
b10011101 j$
b10011110 j$
b10011111 j$
b10100000 j$
b10100001 j$
b10100010 j$
b10100011 j$
b10100100 j$
b10100101 j$
b10100110 j$
b10100111 j$
b10101000 j$
b10101001 j$
b10101010 j$
b10101011 j$
b10101100 j$
b10101101 j$
b10101110 j$
b10101111 j$
b10110000 j$
b10110001 j$
b10110010 j$
b10110011 j$
b10110100 j$
b10110101 j$
b10110110 j$
b10110111 j$
b10111000 j$
b10111001 j$
b10111010 j$
b10111011 j$
b10111100 j$
b10111101 j$
b10111110 j$
b10111111 j$
b11000000 j$
b11000001 j$
b11000010 j$
b11000011 j$
b11000100 j$
b11000101 j$
b11000110 j$
b11000111 j$
b11001000 j$
b11001001 j$
b11001010 j$
b11001011 j$
b11001100 j$
b11001101 j$
b11001110 j$
b11001111 j$
b11010000 j$
b11010001 j$
b11010010 j$
b11010011 j$
b11010100 j$
b11010101 j$
b11010110 j$
b11010111 j$
b11011000 j$
b11011001 j$
b11011010 j$
b11011011 j$
b11011100 j$
b11011101 j$
b11011110 j$
b11011111 j$
b11100000 j$
b11100001 j$
b11100010 j$
b11100011 j$
b11100100 j$
b11100101 j$
b11100110 j$
b11100111 j$
b11101000 j$
b11101001 j$
b11101010 j$
b11101011 j$
b11101100 j$
b11101101 j$
b11101110 j$
b11101111 j$
b11110000 j$
b11110001 j$
b11110010 j$
b11110011 j$
b11110100 j$
b11110101 j$
b11110110 j$
b11110111 j$
b11111000 j$
b11111001 j$
b11111010 j$
b11111011 j$
b11111100 j$
b11111101 j$
b11111110 j$
b11111111 j$
b100000000 j$
b0 m$
b1 m$
b10 m$
b11 m$
b100 m$
b101 m$
b110 m$
b111 m$
b1000 m$
b1001 m$
b1010 m$
b1011 m$
b1100 m$
b1101 m$
b1110 m$
b1111 m$
b10000 m$
b10001 m$
b10010 m$
b10011 m$
b10100 m$
b10101 m$
b10110 m$
b10111 m$
b11000 m$
b11001 m$
b11010 m$
b11011 m$
b11100 m$
b11101 m$
b11110 m$
b11111 m$
b100000 m$
b100001 m$
b100010 m$
b100011 m$
b100100 m$
b100101 m$
b100110 m$
b100111 m$
b101000 m$
b101001 m$
b101010 m$
b101011 m$
b101100 m$
b101101 m$
b101110 m$
b101111 m$
b110000 m$
b110001 m$
b110010 m$
b110011 m$
b110100 m$
b110101 m$
b110110 m$
b110111 m$
b111000 m$
b111001 m$
b111010 m$
b111011 m$
b111100 m$
b111101 m$
b111110 m$
b111111 m$
b1000000 m$
b1000001 m$
b1000010 m$
b1000011 m$
b1000100 m$
b1000101 m$
b1000110 m$
b1000111 m$
b1001000 m$
b1001001 m$
b1001010 m$
b1001011 m$
b1001100 m$
b1001101 m$
b1001110 m$
b1001111 m$
b1010000 m$
b1010001 m$
b1010010 m$
b1010011 m$
b1010100 m$
b1010101 m$
b1010110 m$
b1010111 m$
b1011000 m$
b1011001 m$
b1011010 m$
b1011011 m$
b1011100 m$
b1011101 m$
b1011110 m$
b1011111 m$
b1100000 m$
b1100001 m$
b1100010 m$
b1100011 m$
b1100100 m$
b1100101 m$
b1100110 m$
b1100111 m$
b1101000 m$
b1101001 m$
b1101010 m$
b1101011 m$
b1101100 m$
b1101101 m$
b1101110 m$
b1101111 m$
b1110000 m$
b1110001 m$
b1110010 m$
b1110011 m$
b1110100 m$
b1110101 m$
b1110110 m$
b1110111 m$
b1111000 m$
b1111001 m$
b1111010 m$
b1111011 m$
b1111100 m$
b1111101 m$
b1111110 m$
b1111111 m$
b10000000 m$
b10000001 m$
b10000010 m$
b10000011 m$
b10000100 m$
b10000101 m$
b10000110 m$
b10000111 m$
b10001000 m$
b10001001 m$
b10001010 m$
b10001011 m$
b10001100 m$
b10001101 m$
b10001110 m$
b10001111 m$
b10010000 m$
b10010001 m$
b10010010 m$
b10010011 m$
b10010100 m$
b10010101 m$
b10010110 m$
b10010111 m$
b10011000 m$
b10011001 m$
b10011010 m$
b10011011 m$
b10011100 m$
b10011101 m$
b10011110 m$
b10011111 m$
b10100000 m$
b10100001 m$
b10100010 m$
b10100011 m$
b10100100 m$
b10100101 m$
b10100110 m$
b10100111 m$
b10101000 m$
b10101001 m$
b10101010 m$
b10101011 m$
b10101100 m$
b10101101 m$
b10101110 m$
b10101111 m$
b10110000 m$
b10110001 m$
b10110010 m$
b10110011 m$
b10110100 m$
b10110101 m$
b10110110 m$
b10110111 m$
b10111000 m$
b10111001 m$
b10111010 m$
b10111011 m$
b10111100 m$
b10111101 m$
b10111110 m$
b10111111 m$
b11000000 m$
b11000001 m$
b11000010 m$
b11000011 m$
b11000100 m$
b11000101 m$
b11000110 m$
b11000111 m$
b11001000 m$
b11001001 m$
b11001010 m$
b11001011 m$
b11001100 m$
b11001101 m$
b11001110 m$
b11001111 m$
b11010000 m$
b11010001 m$
b11010010 m$
b11010011 m$
b11010100 m$
b11010101 m$
b11010110 m$
b11010111 m$
b11011000 m$
b11011001 m$
b11011010 m$
b11011011 m$
b11011100 m$
b11011101 m$
b11011110 m$
b11011111 m$
b11100000 m$
b11100001 m$
b11100010 m$
b11100011 m$
b11100100 m$
b11100101 m$
b11100110 m$
b11100111 m$
b11101000 m$
b11101001 m$
b11101010 m$
b11101011 m$
b11101100 m$
b11101101 m$
b11101110 m$
b11101111 m$
b11110000 m$
b11110001 m$
b11110010 m$
b11110011 m$
b11110100 m$
b11110101 m$
b11110110 m$
b11110111 m$
b11111000 m$
b11111001 m$
b11111010 m$
b11111011 m$
b11111100 m$
b11111101 m$
b11111110 m$
b11111111 m$
b100000000 m$
b0 p$
b1 p$
b10 p$
b11 p$
b100 p$
b101 p$
b110 p$
b111 p$
b1000 p$
b1001 p$
b1010 p$
b1011 p$
b1100 p$
b1101 p$
b1110 p$
b1111 p$
b10000 p$
b10001 p$
b10010 p$
b10011 p$
b10100 p$
b10101 p$
b10110 p$
b10111 p$
b11000 p$
b11001 p$
b11010 p$
b11011 p$
b11100 p$
b11101 p$
b11110 p$
b11111 p$
b100000 p$
b100001 p$
b100010 p$
b100011 p$
b100100 p$
b100101 p$
b100110 p$
b100111 p$
b101000 p$
b101001 p$
b101010 p$
b101011 p$
b101100 p$
b101101 p$
b101110 p$
b101111 p$
b110000 p$
b110001 p$
b110010 p$
b110011 p$
b110100 p$
b110101 p$
b110110 p$
b110111 p$
b111000 p$
b111001 p$
b111010 p$
b111011 p$
b111100 p$
b111101 p$
b111110 p$
b111111 p$
b1000000 p$
b1000001 p$
b1000010 p$
b1000011 p$
b1000100 p$
b1000101 p$
b1000110 p$
b1000111 p$
b1001000 p$
b1001001 p$
b1001010 p$
b1001011 p$
b1001100 p$
b1001101 p$
b1001110 p$
b1001111 p$
b1010000 p$
b1010001 p$
b1010010 p$
b1010011 p$
b1010100 p$
b1010101 p$
b1010110 p$
b1010111 p$
b1011000 p$
b1011001 p$
b1011010 p$
b1011011 p$
b1011100 p$
b1011101 p$
b1011110 p$
b1011111 p$
b1100000 p$
b1100001 p$
b1100010 p$
b1100011 p$
b1100100 p$
b1100101 p$
b1100110 p$
b1100111 p$
b1101000 p$
b1101001 p$
b1101010 p$
b1101011 p$
b1101100 p$
b1101101 p$
b1101110 p$
b1101111 p$
b1110000 p$
b1110001 p$
b1110010 p$
b1110011 p$
b1110100 p$
b1110101 p$
b1110110 p$
b1110111 p$
b1111000 p$
b1111001 p$
b1111010 p$
b1111011 p$
b1111100 p$
b1111101 p$
b1111110 p$
b1111111 p$
b10000000 p$
b10000001 p$
b10000010 p$
b10000011 p$
b10000100 p$
b10000101 p$
b10000110 p$
b10000111 p$
b10001000 p$
b10001001 p$
b10001010 p$
b10001011 p$
b10001100 p$
b10001101 p$
b10001110 p$
b10001111 p$
b10010000 p$
b10010001 p$
b10010010 p$
b10010011 p$
b10010100 p$
b10010101 p$
b10010110 p$
b10010111 p$
b10011000 p$
b10011001 p$
b10011010 p$
b10011011 p$
b10011100 p$
b10011101 p$
b10011110 p$
b10011111 p$
b10100000 p$
b10100001 p$
b10100010 p$
b10100011 p$
b10100100 p$
b10100101 p$
b10100110 p$
b10100111 p$
b10101000 p$
b10101001 p$
b10101010 p$
b10101011 p$
b10101100 p$
b10101101 p$
b10101110 p$
b10101111 p$
b10110000 p$
b10110001 p$
b10110010 p$
b10110011 p$
b10110100 p$
b10110101 p$
b10110110 p$
b10110111 p$
b10111000 p$
b10111001 p$
b10111010 p$
b10111011 p$
b10111100 p$
b10111101 p$
b10111110 p$
b10111111 p$
b11000000 p$
b11000001 p$
b11000010 p$
b11000011 p$
b11000100 p$
b11000101 p$
b11000110 p$
b11000111 p$
b11001000 p$
b11001001 p$
b11001010 p$
b11001011 p$
b11001100 p$
b11001101 p$
b11001110 p$
b11001111 p$
b11010000 p$
b11010001 p$
b11010010 p$
b11010011 p$
b11010100 p$
b11010101 p$
b11010110 p$
b11010111 p$
b11011000 p$
b11011001 p$
b11011010 p$
b11011011 p$
b11011100 p$
b11011101 p$
b11011110 p$
b11011111 p$
b11100000 p$
b11100001 p$
b11100010 p$
b11100011 p$
b11100100 p$
b11100101 p$
b11100110 p$
b11100111 p$
b11101000 p$
b11101001 p$
b11101010 p$
b11101011 p$
b11101100 p$
b11101101 p$
b11101110 p$
b11101111 p$
b11110000 p$
b11110001 p$
b11110010 p$
b11110011 p$
b11110100 p$
b11110101 p$
b11110110 p$
b11110111 p$
b11111000 p$
b11111001 p$
b11111010 p$
b11111011 p$
b11111100 p$
b11111101 p$
b11111110 p$
b11111111 p$
b100000000 p$
b0 s$
b1 s$
b10 s$
b11 s$
b100 s$
b101 s$
b110 s$
b111 s$
b1000 s$
b1001 s$
b1010 s$
b1011 s$
b1100 s$
b1101 s$
b1110 s$
b1111 s$
b10000 s$
b10001 s$
b10010 s$
b10011 s$
b10100 s$
b10101 s$
b10110 s$
b10111 s$
b11000 s$
b11001 s$
b11010 s$
b11011 s$
b11100 s$
b11101 s$
b11110 s$
b11111 s$
b100000 s$
b100001 s$
b100010 s$
b100011 s$
b100100 s$
b100101 s$
b100110 s$
b100111 s$
b101000 s$
b101001 s$
b101010 s$
b101011 s$
b101100 s$
b101101 s$
b101110 s$
b101111 s$
b110000 s$
b110001 s$
b110010 s$
b110011 s$
b110100 s$
b110101 s$
b110110 s$
b110111 s$
b111000 s$
b111001 s$
b111010 s$
b111011 s$
b111100 s$
b111101 s$
b111110 s$
b111111 s$
b1000000 s$
b1000001 s$
b1000010 s$
b1000011 s$
b1000100 s$
b1000101 s$
b1000110 s$
b1000111 s$
b1001000 s$
b1001001 s$
b1001010 s$
b1001011 s$
b1001100 s$
b1001101 s$
b1001110 s$
b1001111 s$
b1010000 s$
b1010001 s$
b1010010 s$
b1010011 s$
b1010100 s$
b1010101 s$
b1010110 s$
b1010111 s$
b1011000 s$
b1011001 s$
b1011010 s$
b1011011 s$
b1011100 s$
b1011101 s$
b1011110 s$
b1011111 s$
b1100000 s$
b1100001 s$
b1100010 s$
b1100011 s$
b1100100 s$
b1100101 s$
b1100110 s$
b1100111 s$
b1101000 s$
b1101001 s$
b1101010 s$
b1101011 s$
b1101100 s$
b1101101 s$
b1101110 s$
b1101111 s$
b1110000 s$
b1110001 s$
b1110010 s$
b1110011 s$
b1110100 s$
b1110101 s$
b1110110 s$
b1110111 s$
b1111000 s$
b1111001 s$
b1111010 s$
b1111011 s$
b1111100 s$
b1111101 s$
b1111110 s$
b1111111 s$
b10000000 s$
b10000001 s$
b10000010 s$
b10000011 s$
b10000100 s$
b10000101 s$
b10000110 s$
b10000111 s$
b10001000 s$
b10001001 s$
b10001010 s$
b10001011 s$
b10001100 s$
b10001101 s$
b10001110 s$
b10001111 s$
b10010000 s$
b10010001 s$
b10010010 s$
b10010011 s$
b10010100 s$
b10010101 s$
b10010110 s$
b10010111 s$
b10011000 s$
b10011001 s$
b10011010 s$
b10011011 s$
b10011100 s$
b10011101 s$
b10011110 s$
b10011111 s$
b10100000 s$
b10100001 s$
b10100010 s$
b10100011 s$
b10100100 s$
b10100101 s$
b10100110 s$
b10100111 s$
b10101000 s$
b10101001 s$
b10101010 s$
b10101011 s$
b10101100 s$
b10101101 s$
b10101110 s$
b10101111 s$
b10110000 s$
b10110001 s$
b10110010 s$
b10110011 s$
b10110100 s$
b10110101 s$
b10110110 s$
b10110111 s$
b10111000 s$
b10111001 s$
b10111010 s$
b10111011 s$
b10111100 s$
b10111101 s$
b10111110 s$
b10111111 s$
b11000000 s$
b11000001 s$
b11000010 s$
b11000011 s$
b11000100 s$
b11000101 s$
b11000110 s$
b11000111 s$
b11001000 s$
b11001001 s$
b11001010 s$
b11001011 s$
b11001100 s$
b11001101 s$
b11001110 s$
b11001111 s$
b11010000 s$
b11010001 s$
b11010010 s$
b11010011 s$
b11010100 s$
b11010101 s$
b11010110 s$
b11010111 s$
b11011000 s$
b11011001 s$
b11011010 s$
b11011011 s$
b11011100 s$
b11011101 s$
b11011110 s$
b11011111 s$
b11100000 s$
b11100001 s$
b11100010 s$
b11100011 s$
b11100100 s$
b11100101 s$
b11100110 s$
b11100111 s$
b11101000 s$
b11101001 s$
b11101010 s$
b11101011 s$
b11101100 s$
b11101101 s$
b11101110 s$
b11101111 s$
b11110000 s$
b11110001 s$
b11110010 s$
b11110011 s$
b11110100 s$
b11110101 s$
b11110110 s$
b11110111 s$
b11111000 s$
b11111001 s$
b11111010 s$
b11111011 s$
b11111100 s$
b11111101 s$
b11111110 s$
b11111111 s$
b100000000 s$
b0 u$
b1 u$
b10 u$
b11 u$
b100 u$
b101 u$
b110 u$
b111 u$
b1000 u$
b1001 u$
b1010 u$
b1011 u$
b1100 u$
b1101 u$
b1110 u$
b1111 u$
b10000 u$
b10001 u$
b10010 u$
b10011 u$
b10100 u$
b10101 u$
b10110 u$
b10111 u$
b11000 u$
b11001 u$
b11010 u$
b11011 u$
b11100 u$
b11101 u$
b11110 u$
b11111 u$
b100000 u$
b100001 u$
b100010 u$
b100011 u$
b100100 u$
b100101 u$
b100110 u$
b100111 u$
b101000 u$
b101001 u$
b101010 u$
b101011 u$
b101100 u$
b101101 u$
b101110 u$
b101111 u$
b110000 u$
b110001 u$
b110010 u$
b110011 u$
b110100 u$
b110101 u$
b110110 u$
b110111 u$
b111000 u$
b111001 u$
b111010 u$
b111011 u$
b111100 u$
b111101 u$
b111110 u$
b111111 u$
b1000000 u$
b1000001 u$
b1000010 u$
b1000011 u$
b1000100 u$
b1000101 u$
b1000110 u$
b1000111 u$
b1001000 u$
b1001001 u$
b1001010 u$
b1001011 u$
b1001100 u$
b1001101 u$
b1001110 u$
b1001111 u$
b1010000 u$
b1010001 u$
b1010010 u$
b1010011 u$
b1010100 u$
b1010101 u$
b1010110 u$
b1010111 u$
b1011000 u$
b1011001 u$
b1011010 u$
b1011011 u$
b1011100 u$
b1011101 u$
b1011110 u$
b1011111 u$
b1100000 u$
b1100001 u$
b1100010 u$
b1100011 u$
b1100100 u$
b1100101 u$
b1100110 u$
b1100111 u$
b1101000 u$
b1101001 u$
b1101010 u$
b1101011 u$
b1101100 u$
b1101101 u$
b1101110 u$
b1101111 u$
b1110000 u$
b1110001 u$
b1110010 u$
b1110011 u$
b1110100 u$
b1110101 u$
b1110110 u$
b1110111 u$
b1111000 u$
b1111001 u$
b1111010 u$
b1111011 u$
b1111100 u$
b1111101 u$
b1111110 u$
b1111111 u$
b10000000 u$
b10000001 u$
b10000010 u$
b10000011 u$
b10000100 u$
b10000101 u$
b10000110 u$
b10000111 u$
b10001000 u$
b10001001 u$
b10001010 u$
b10001011 u$
b10001100 u$
b10001101 u$
b10001110 u$
b10001111 u$
b10010000 u$
b10010001 u$
b10010010 u$
b10010011 u$
b10010100 u$
b10010101 u$
b10010110 u$
b10010111 u$
b10011000 u$
b10011001 u$
b10011010 u$
b10011011 u$
b10011100 u$
b10011101 u$
b10011110 u$
b10011111 u$
b10100000 u$
b10100001 u$
b10100010 u$
b10100011 u$
b10100100 u$
b10100101 u$
b10100110 u$
b10100111 u$
b10101000 u$
b10101001 u$
b10101010 u$
b10101011 u$
b10101100 u$
b10101101 u$
b10101110 u$
b10101111 u$
b10110000 u$
b10110001 u$
b10110010 u$
b10110011 u$
b10110100 u$
b10110101 u$
b10110110 u$
b10110111 u$
b10111000 u$
b10111001 u$
b10111010 u$
b10111011 u$
b10111100 u$
b10111101 u$
b10111110 u$
b10111111 u$
b11000000 u$
b11000001 u$
b11000010 u$
b11000011 u$
b11000100 u$
b11000101 u$
b11000110 u$
b11000111 u$
b11001000 u$
b11001001 u$
b11001010 u$
b11001011 u$
b11001100 u$
b11001101 u$
b11001110 u$
b11001111 u$
b11010000 u$
b11010001 u$
b11010010 u$
b11010011 u$
b11010100 u$
b11010101 u$
b11010110 u$
b11010111 u$
b11011000 u$
b11011001 u$
b11011010 u$
b11011011 u$
b11011100 u$
b11011101 u$
b11011110 u$
b11011111 u$
b11100000 u$
b11100001 u$
b11100010 u$
b11100011 u$
b11100100 u$
b11100101 u$
b11100110 u$
b11100111 u$
b11101000 u$
b11101001 u$
b11101010 u$
b11101011 u$
b11101100 u$
b11101101 u$
b11101110 u$
b11101111 u$
b11110000 u$
b11110001 u$
b11110010 u$
b11110011 u$
b11110100 u$
b11110101 u$
b11110110 u$
b11110111 u$
b11111000 u$
b11111001 u$
b11111010 u$
b11111011 u$
b11111100 u$
b11111101 u$
b11111110 u$
b11111111 u$
b100000000 u$
b0 '&
b1 '&
b10 '&
b11 '&
b100 '&
b101 '&
b110 '&
b111 '&
b1000 '&
b1001 '&
b1010 '&
b1011 '&
b1100 '&
b1101 '&
b1110 '&
b1111 '&
b10000 '&
b10001 '&
b10010 '&
b10011 '&
b10100 '&
b10101 '&
b10110 '&
b10111 '&
b11000 '&
b11001 '&
b11010 '&
b11011 '&
b11100 '&
b11101 '&
b11110 '&
b11111 '&
b100000 '&
b100001 '&
b100010 '&
b100011 '&
b100100 '&
b100101 '&
b100110 '&
b100111 '&
b101000 '&
b101001 '&
b101010 '&
b101011 '&
b101100 '&
b101101 '&
b101110 '&
b101111 '&
b110000 '&
b110001 '&
b110010 '&
b110011 '&
b110100 '&
b110101 '&
b110110 '&
b110111 '&
b111000 '&
b111001 '&
b111010 '&
b111011 '&
b111100 '&
b111101 '&
b111110 '&
b111111 '&
b1000000 '&
b1000001 '&
b1000010 '&
b1000011 '&
b1000100 '&
b1000101 '&
b1000110 '&
b1000111 '&
b1001000 '&
b1001001 '&
b1001010 '&
b1001011 '&
b1001100 '&
b1001101 '&
b1001110 '&
b1001111 '&
b1010000 '&
b1010001 '&
b1010010 '&
b1010011 '&
b1010100 '&
b1010101 '&
b1010110 '&
b1010111 '&
b1011000 '&
b1011001 '&
b1011010 '&
b1011011 '&
b1011100 '&
b1011101 '&
b1011110 '&
b1011111 '&
b1100000 '&
b1100001 '&
b1100010 '&
b1100011 '&
b1100100 '&
b1100101 '&
b1100110 '&
b1100111 '&
b1101000 '&
b1101001 '&
b1101010 '&
b1101011 '&
b1101100 '&
b1101101 '&
b1101110 '&
b1101111 '&
b1110000 '&
b1110001 '&
b1110010 '&
b1110011 '&
b1110100 '&
b1110101 '&
b1110110 '&
b1110111 '&
b1111000 '&
b1111001 '&
b1111010 '&
b1111011 '&
b1111100 '&
b1111101 '&
b1111110 '&
b1111111 '&
b10000000 '&
b10000001 '&
b10000010 '&
b10000011 '&
b10000100 '&
b10000101 '&
b10000110 '&
b10000111 '&
b10001000 '&
b10001001 '&
b10001010 '&
b10001011 '&
b10001100 '&
b10001101 '&
b10001110 '&
b10001111 '&
b10010000 '&
b10010001 '&
b10010010 '&
b10010011 '&
b10010100 '&
b10010101 '&
b10010110 '&
b10010111 '&
b10011000 '&
b10011001 '&
b10011010 '&
b10011011 '&
b10011100 '&
b10011101 '&
b10011110 '&
b10011111 '&
b10100000 '&
b10100001 '&
b10100010 '&
b10100011 '&
b10100100 '&
b10100101 '&
b10100110 '&
b10100111 '&
b10101000 '&
b10101001 '&
b10101010 '&
b10101011 '&
b10101100 '&
b10101101 '&
b10101110 '&
b10101111 '&
b10110000 '&
b10110001 '&
b10110010 '&
b10110011 '&
b10110100 '&
b10110101 '&
b10110110 '&
b10110111 '&
b10111000 '&
b10111001 '&
b10111010 '&
b10111011 '&
b10111100 '&
b10111101 '&
b10111110 '&
b10111111 '&
b11000000 '&
b11000001 '&
b11000010 '&
b11000011 '&
b11000100 '&
b11000101 '&
b11000110 '&
b11000111 '&
b11001000 '&
b11001001 '&
b11001010 '&
b11001011 '&
b11001100 '&
b11001101 '&
b11001110 '&
b11001111 '&
b11010000 '&
b11010001 '&
b11010010 '&
b11010011 '&
b11010100 '&
b11010101 '&
b11010110 '&
b11010111 '&
b11011000 '&
b11011001 '&
b11011010 '&
b11011011 '&
b11011100 '&
b11011101 '&
b11011110 '&
b11011111 '&
b11100000 '&
b11100001 '&
b11100010 '&
b11100011 '&
b11100100 '&
b11100101 '&
b11100110 '&
b11100111 '&
b11101000 '&
b11101001 '&
b11101010 '&
b11101011 '&
b11101100 '&
b11101101 '&
b11101110 '&
b11101111 '&
b11110000 '&
b11110001 '&
b11110010 '&
b11110011 '&
b11110100 '&
b11110101 '&
b11110110 '&
b11110111 '&
b11111000 '&
b11111001 '&
b11111010 '&
b11111011 '&
b11111100 '&
b11111101 '&
b11111110 '&
b11111111 '&
b100000000 '&
b0 *&
b1 *&
b10 *&
b11 *&
b100 *&
b101 *&
b110 *&
b111 *&
b1000 *&
b1001 *&
b1010 *&
b1011 *&
b1100 *&
b1101 *&
b1110 *&
b1111 *&
b10000 *&
b10001 *&
b10010 *&
b10011 *&
b10100 *&
b10101 *&
b10110 *&
b10111 *&
b11000 *&
b11001 *&
b11010 *&
b11011 *&
b11100 *&
b11101 *&
b11110 *&
b11111 *&
b100000 *&
b100001 *&
b100010 *&
b100011 *&
b100100 *&
b100101 *&
b100110 *&
b100111 *&
b101000 *&
b101001 *&
b101010 *&
b101011 *&
b101100 *&
b101101 *&
b101110 *&
b101111 *&
b110000 *&
b110001 *&
b110010 *&
b110011 *&
b110100 *&
b110101 *&
b110110 *&
b110111 *&
b111000 *&
b111001 *&
b111010 *&
b111011 *&
b111100 *&
b111101 *&
b111110 *&
b111111 *&
b1000000 *&
b1000001 *&
b1000010 *&
b1000011 *&
b1000100 *&
b1000101 *&
b1000110 *&
b1000111 *&
b1001000 *&
b1001001 *&
b1001010 *&
b1001011 *&
b1001100 *&
b1001101 *&
b1001110 *&
b1001111 *&
b1010000 *&
b1010001 *&
b1010010 *&
b1010011 *&
b1010100 *&
b1010101 *&
b1010110 *&
b1010111 *&
b1011000 *&
b1011001 *&
b1011010 *&
b1011011 *&
b1011100 *&
b1011101 *&
b1011110 *&
b1011111 *&
b1100000 *&
b1100001 *&
b1100010 *&
b1100011 *&
b1100100 *&
b1100101 *&
b1100110 *&
b1100111 *&
b1101000 *&
b1101001 *&
b1101010 *&
b1101011 *&
b1101100 *&
b1101101 *&
b1101110 *&
b1101111 *&
b1110000 *&
b1110001 *&
b1110010 *&
b1110011 *&
b1110100 *&
b1110101 *&
b1110110 *&
b1110111 *&
b1111000 *&
b1111001 *&
b1111010 *&
b1111011 *&
b1111100 *&
b1111101 *&
b1111110 *&
b1111111 *&
b10000000 *&
b10000001 *&
b10000010 *&
b10000011 *&
b10000100 *&
b10000101 *&
b10000110 *&
b10000111 *&
b10001000 *&
b10001001 *&
b10001010 *&
b10001011 *&
b10001100 *&
b10001101 *&
b10001110 *&
b10001111 *&
b10010000 *&
b10010001 *&
b10010010 *&
b10010011 *&
b10010100 *&
b10010101 *&
b10010110 *&
b10010111 *&
b10011000 *&
b10011001 *&
b10011010 *&
b10011011 *&
b10011100 *&
b10011101 *&
b10011110 *&
b10011111 *&
b10100000 *&
b10100001 *&
b10100010 *&
b10100011 *&
b10100100 *&
b10100101 *&
b10100110 *&
b10100111 *&
b10101000 *&
b10101001 *&
b10101010 *&
b10101011 *&
b10101100 *&
b10101101 *&
b10101110 *&
b10101111 *&
b10110000 *&
b10110001 *&
b10110010 *&
b10110011 *&
b10110100 *&
b10110101 *&
b10110110 *&
b10110111 *&
b10111000 *&
b10111001 *&
b10111010 *&
b10111011 *&
b10111100 *&
b10111101 *&
b10111110 *&
b10111111 *&
b11000000 *&
b11000001 *&
b11000010 *&
b11000011 *&
b11000100 *&
b11000101 *&
b11000110 *&
b11000111 *&
b11001000 *&
b11001001 *&
b11001010 *&
b11001011 *&
b11001100 *&
b11001101 *&
b11001110 *&
b11001111 *&
b11010000 *&
b11010001 *&
b11010010 *&
b11010011 *&
b11010100 *&
b11010101 *&
b11010110 *&
b11010111 *&
b11011000 *&
b11011001 *&
b11011010 *&
b11011011 *&
b11011100 *&
b11011101 *&
b11011110 *&
b11011111 *&
b11100000 *&
b11100001 *&
b11100010 *&
b11100011 *&
b11100100 *&
b11100101 *&
b11100110 *&
b11100111 *&
b11101000 *&
b11101001 *&
b11101010 *&
b11101011 *&
b11101100 *&
b11101101 *&
b11101110 *&
b11101111 *&
b11110000 *&
b11110001 *&
b11110010 *&
b11110011 *&
b11110100 *&
b11110101 *&
b11110110 *&
b11110111 *&
b11111000 *&
b11111001 *&
b11111010 *&
b11111011 *&
b11111100 *&
b11111101 *&
b11111110 *&
b11111111 *&
b100000000 *&
b0 -&
b1 -&
b10 -&
b11 -&
b100 -&
b101 -&
b110 -&
b111 -&
b1000 -&
b1001 -&
b1010 -&
b1011 -&
b1100 -&
b1101 -&
b1110 -&
b1111 -&
b10000 -&
b10001 -&
b10010 -&
b10011 -&
b10100 -&
b10101 -&
b10110 -&
b10111 -&
b11000 -&
b11001 -&
b11010 -&
b11011 -&
b11100 -&
b11101 -&
b11110 -&
b11111 -&
b100000 -&
b100001 -&
b100010 -&
b100011 -&
b100100 -&
b100101 -&
b100110 -&
b100111 -&
b101000 -&
b101001 -&
b101010 -&
b101011 -&
b101100 -&
b101101 -&
b101110 -&
b101111 -&
b110000 -&
b110001 -&
b110010 -&
b110011 -&
b110100 -&
b110101 -&
b110110 -&
b110111 -&
b111000 -&
b111001 -&
b111010 -&
b111011 -&
b111100 -&
b111101 -&
b111110 -&
b111111 -&
b1000000 -&
b1000001 -&
b1000010 -&
b1000011 -&
b1000100 -&
b1000101 -&
b1000110 -&
b1000111 -&
b1001000 -&
b1001001 -&
b1001010 -&
b1001011 -&
b1001100 -&
b1001101 -&
b1001110 -&
b1001111 -&
b1010000 -&
b1010001 -&
b1010010 -&
b1010011 -&
b1010100 -&
b1010101 -&
b1010110 -&
b1010111 -&
b1011000 -&
b1011001 -&
b1011010 -&
b1011011 -&
b1011100 -&
b1011101 -&
b1011110 -&
b1011111 -&
b1100000 -&
b1100001 -&
b1100010 -&
b1100011 -&
b1100100 -&
b1100101 -&
b1100110 -&
b1100111 -&
b1101000 -&
b1101001 -&
b1101010 -&
b1101011 -&
b1101100 -&
b1101101 -&
b1101110 -&
b1101111 -&
b1110000 -&
b1110001 -&
b1110010 -&
b1110011 -&
b1110100 -&
b1110101 -&
b1110110 -&
b1110111 -&
b1111000 -&
b1111001 -&
b1111010 -&
b1111011 -&
b1111100 -&
b1111101 -&
b1111110 -&
b1111111 -&
b10000000 -&
b10000001 -&
b10000010 -&
b10000011 -&
b10000100 -&
b10000101 -&
b10000110 -&
b10000111 -&
b10001000 -&
b10001001 -&
b10001010 -&
b10001011 -&
b10001100 -&
b10001101 -&
b10001110 -&
b10001111 -&
b10010000 -&
b10010001 -&
b10010010 -&
b10010011 -&
b10010100 -&
b10010101 -&
b10010110 -&
b10010111 -&
b10011000 -&
b10011001 -&
b10011010 -&
b10011011 -&
b10011100 -&
b10011101 -&
b10011110 -&
b10011111 -&
b10100000 -&
b10100001 -&
b10100010 -&
b10100011 -&
b10100100 -&
b10100101 -&
b10100110 -&
b10100111 -&
b10101000 -&
b10101001 -&
b10101010 -&
b10101011 -&
b10101100 -&
b10101101 -&
b10101110 -&
b10101111 -&
b10110000 -&
b10110001 -&
b10110010 -&
b10110011 -&
b10110100 -&
b10110101 -&
b10110110 -&
b10110111 -&
b10111000 -&
b10111001 -&
b10111010 -&
b10111011 -&
b10111100 -&
b10111101 -&
b10111110 -&
b10111111 -&
b11000000 -&
b11000001 -&
b11000010 -&
b11000011 -&
b11000100 -&
b11000101 -&
b11000110 -&
b11000111 -&
b11001000 -&
b11001001 -&
b11001010 -&
b11001011 -&
b11001100 -&
b11001101 -&
b11001110 -&
b11001111 -&
b11010000 -&
b11010001 -&
b11010010 -&
b11010011 -&
b11010100 -&
b11010101 -&
b11010110 -&
b11010111 -&
b11011000 -&
b11011001 -&
b11011010 -&
b11011011 -&
b11011100 -&
b11011101 -&
b11011110 -&
b11011111 -&
b11100000 -&
b11100001 -&
b11100010 -&
b11100011 -&
b11100100 -&
b11100101 -&
b11100110 -&
b11100111 -&
b11101000 -&
b11101001 -&
b11101010 -&
b11101011 -&
b11101100 -&
b11101101 -&
b11101110 -&
b11101111 -&
b11110000 -&
b11110001 -&
b11110010 -&
b11110011 -&
b11110100 -&
b11110101 -&
b11110110 -&
b11110111 -&
b11111000 -&
b11111001 -&
b11111010 -&
b11111011 -&
b11111100 -&
b11111101 -&
b11111110 -&
b11111111 -&
b100000000 -&
b0 0&
b1 0&
b10 0&
b11 0&
b100 0&
b101 0&
b110 0&
b111 0&
b1000 0&
b1001 0&
b1010 0&
b1011 0&
b1100 0&
b1101 0&
b1110 0&
b1111 0&
b10000 0&
b10001 0&
b10010 0&
b10011 0&
b10100 0&
b10101 0&
b10110 0&
b10111 0&
b11000 0&
b11001 0&
b11010 0&
b11011 0&
b11100 0&
b11101 0&
b11110 0&
b11111 0&
b100000 0&
b100001 0&
b100010 0&
b100011 0&
b100100 0&
b100101 0&
b100110 0&
b100111 0&
b101000 0&
b101001 0&
b101010 0&
b101011 0&
b101100 0&
b101101 0&
b101110 0&
b101111 0&
b110000 0&
b110001 0&
b110010 0&
b110011 0&
b110100 0&
b110101 0&
b110110 0&
b110111 0&
b111000 0&
b111001 0&
b111010 0&
b111011 0&
b111100 0&
b111101 0&
b111110 0&
b111111 0&
b1000000 0&
b1000001 0&
b1000010 0&
b1000011 0&
b1000100 0&
b1000101 0&
b1000110 0&
b1000111 0&
b1001000 0&
b1001001 0&
b1001010 0&
b1001011 0&
b1001100 0&
b1001101 0&
b1001110 0&
b1001111 0&
b1010000 0&
b1010001 0&
b1010010 0&
b1010011 0&
b1010100 0&
b1010101 0&
b1010110 0&
b1010111 0&
b1011000 0&
b1011001 0&
b1011010 0&
b1011011 0&
b1011100 0&
b1011101 0&
b1011110 0&
b1011111 0&
b1100000 0&
b1100001 0&
b1100010 0&
b1100011 0&
b1100100 0&
b1100101 0&
b1100110 0&
b1100111 0&
b1101000 0&
b1101001 0&
b1101010 0&
b1101011 0&
b1101100 0&
b1101101 0&
b1101110 0&
b1101111 0&
b1110000 0&
b1110001 0&
b1110010 0&
b1110011 0&
b1110100 0&
b1110101 0&
b1110110 0&
b1110111 0&
b1111000 0&
b1111001 0&
b1111010 0&
b1111011 0&
b1111100 0&
b1111101 0&
b1111110 0&
b1111111 0&
b10000000 0&
b10000001 0&
b10000010 0&
b10000011 0&
b10000100 0&
b10000101 0&
b10000110 0&
b10000111 0&
b10001000 0&
b10001001 0&
b10001010 0&
b10001011 0&
b10001100 0&
b10001101 0&
b10001110 0&
b10001111 0&
b10010000 0&
b10010001 0&
b10010010 0&
b10010011 0&
b10010100 0&
b10010101 0&
b10010110 0&
b10010111 0&
b10011000 0&
b10011001 0&
b10011010 0&
b10011011 0&
b10011100 0&
b10011101 0&
b10011110 0&
b10011111 0&
b10100000 0&
b10100001 0&
b10100010 0&
b10100011 0&
b10100100 0&
b10100101 0&
b10100110 0&
b10100111 0&
b10101000 0&
b10101001 0&
b10101010 0&
b10101011 0&
b10101100 0&
b10101101 0&
b10101110 0&
b10101111 0&
b10110000 0&
b10110001 0&
b10110010 0&
b10110011 0&
b10110100 0&
b10110101 0&
b10110110 0&
b10110111 0&
b10111000 0&
b10111001 0&
b10111010 0&
b10111011 0&
b10111100 0&
b10111101 0&
b10111110 0&
b10111111 0&
b11000000 0&
b11000001 0&
b11000010 0&
b11000011 0&
b11000100 0&
b11000101 0&
b11000110 0&
b11000111 0&
b11001000 0&
b11001001 0&
b11001010 0&
b11001011 0&
b11001100 0&
b11001101 0&
b11001110 0&
b11001111 0&
b11010000 0&
b11010001 0&
b11010010 0&
b11010011 0&
b11010100 0&
b11010101 0&
b11010110 0&
b11010111 0&
b11011000 0&
b11011001 0&
b11011010 0&
b11011011 0&
b11011100 0&
b11011101 0&
b11011110 0&
b11011111 0&
b11100000 0&
b11100001 0&
b11100010 0&
b11100011 0&
b11100100 0&
b11100101 0&
b11100110 0&
b11100111 0&
b11101000 0&
b11101001 0&
b11101010 0&
b11101011 0&
b11101100 0&
b11101101 0&
b11101110 0&
b11101111 0&
b11110000 0&
b11110001 0&
b11110010 0&
b11110011 0&
b11110100 0&
b11110101 0&
b11110110 0&
b11110111 0&
b11111000 0&
b11111001 0&
b11111010 0&
b11111011 0&
b11111100 0&
b11111101 0&
b11111110 0&
b11111111 0&
b100000000 0&
b0 3&
b1 3&
b10 3&
b11 3&
b100 3&
b101 3&
b110 3&
b111 3&
b1000 3&
b1001 3&
b1010 3&
b1011 3&
b1100 3&
b1101 3&
b1110 3&
b1111 3&
b10000 3&
b10001 3&
b10010 3&
b10011 3&
b10100 3&
b10101 3&
b10110 3&
b10111 3&
b11000 3&
b11001 3&
b11010 3&
b11011 3&
b11100 3&
b11101 3&
b11110 3&
b11111 3&
b100000 3&
b100001 3&
b100010 3&
b100011 3&
b100100 3&
b100101 3&
b100110 3&
b100111 3&
b101000 3&
b101001 3&
b101010 3&
b101011 3&
b101100 3&
b101101 3&
b101110 3&
b101111 3&
b110000 3&
b110001 3&
b110010 3&
b110011 3&
b110100 3&
b110101 3&
b110110 3&
b110111 3&
b111000 3&
b111001 3&
b111010 3&
b111011 3&
b111100 3&
b111101 3&
b111110 3&
b111111 3&
b1000000 3&
b1000001 3&
b1000010 3&
b1000011 3&
b1000100 3&
b1000101 3&
b1000110 3&
b1000111 3&
b1001000 3&
b1001001 3&
b1001010 3&
b1001011 3&
b1001100 3&
b1001101 3&
b1001110 3&
b1001111 3&
b1010000 3&
b1010001 3&
b1010010 3&
b1010011 3&
b1010100 3&
b1010101 3&
b1010110 3&
b1010111 3&
b1011000 3&
b1011001 3&
b1011010 3&
b1011011 3&
b1011100 3&
b1011101 3&
b1011110 3&
b1011111 3&
b1100000 3&
b1100001 3&
b1100010 3&
b1100011 3&
b1100100 3&
b1100101 3&
b1100110 3&
b1100111 3&
b1101000 3&
b1101001 3&
b1101010 3&
b1101011 3&
b1101100 3&
b1101101 3&
b1101110 3&
b1101111 3&
b1110000 3&
b1110001 3&
b1110010 3&
b1110011 3&
b1110100 3&
b1110101 3&
b1110110 3&
b1110111 3&
b1111000 3&
b1111001 3&
b1111010 3&
b1111011 3&
b1111100 3&
b1111101 3&
b1111110 3&
b1111111 3&
b10000000 3&
b10000001 3&
b10000010 3&
b10000011 3&
b10000100 3&
b10000101 3&
b10000110 3&
b10000111 3&
b10001000 3&
b10001001 3&
b10001010 3&
b10001011 3&
b10001100 3&
b10001101 3&
b10001110 3&
b10001111 3&
b10010000 3&
b10010001 3&
b10010010 3&
b10010011 3&
b10010100 3&
b10010101 3&
b10010110 3&
b10010111 3&
b10011000 3&
b10011001 3&
b10011010 3&
b10011011 3&
b10011100 3&
b10011101 3&
b10011110 3&
b10011111 3&
b10100000 3&
b10100001 3&
b10100010 3&
b10100011 3&
b10100100 3&
b10100101 3&
b10100110 3&
b10100111 3&
b10101000 3&
b10101001 3&
b10101010 3&
b10101011 3&
b10101100 3&
b10101101 3&
b10101110 3&
b10101111 3&
b10110000 3&
b10110001 3&
b10110010 3&
b10110011 3&
b10110100 3&
b10110101 3&
b10110110 3&
b10110111 3&
b10111000 3&
b10111001 3&
b10111010 3&
b10111011 3&
b10111100 3&
b10111101 3&
b10111110 3&
b10111111 3&
b11000000 3&
b11000001 3&
b11000010 3&
b11000011 3&
b11000100 3&
b11000101 3&
b11000110 3&
b11000111 3&
b11001000 3&
b11001001 3&
b11001010 3&
b11001011 3&
b11001100 3&
b11001101 3&
b11001110 3&
b11001111 3&
b11010000 3&
b11010001 3&
b11010010 3&
b11010011 3&
b11010100 3&
b11010101 3&
b11010110 3&
b11010111 3&
b11011000 3&
b11011001 3&
b11011010 3&
b11011011 3&
b11011100 3&
b11011101 3&
b11011110 3&
b11011111 3&
b11100000 3&
b11100001 3&
b11100010 3&
b11100011 3&
b11100100 3&
b11100101 3&
b11100110 3&
b11100111 3&
b11101000 3&
b11101001 3&
b11101010 3&
b11101011 3&
b11101100 3&
b11101101 3&
b11101110 3&
b11101111 3&
b11110000 3&
b11110001 3&
b11110010 3&
b11110011 3&
b11110100 3&
b11110101 3&
b11110110 3&
b11110111 3&
b11111000 3&
b11111001 3&
b11111010 3&
b11111011 3&
b11111100 3&
b11111101 3&
b11111110 3&
b11111111 3&
b100000000 3&
b0 6&
b1 6&
b10 6&
b11 6&
b100 6&
b101 6&
b110 6&
b111 6&
b1000 6&
b1001 6&
b1010 6&
b1011 6&
b1100 6&
b1101 6&
b1110 6&
b1111 6&
b10000 6&
b10001 6&
b10010 6&
b10011 6&
b10100 6&
b10101 6&
b10110 6&
b10111 6&
b11000 6&
b11001 6&
b11010 6&
b11011 6&
b11100 6&
b11101 6&
b11110 6&
b11111 6&
b100000 6&
b100001 6&
b100010 6&
b100011 6&
b100100 6&
b100101 6&
b100110 6&
b100111 6&
b101000 6&
b101001 6&
b101010 6&
b101011 6&
b101100 6&
b101101 6&
b101110 6&
b101111 6&
b110000 6&
b110001 6&
b110010 6&
b110011 6&
b110100 6&
b110101 6&
b110110 6&
b110111 6&
b111000 6&
b111001 6&
b111010 6&
b111011 6&
b111100 6&
b111101 6&
b111110 6&
b111111 6&
b1000000 6&
b1000001 6&
b1000010 6&
b1000011 6&
b1000100 6&
b1000101 6&
b1000110 6&
b1000111 6&
b1001000 6&
b1001001 6&
b1001010 6&
b1001011 6&
b1001100 6&
b1001101 6&
b1001110 6&
b1001111 6&
b1010000 6&
b1010001 6&
b1010010 6&
b1010011 6&
b1010100 6&
b1010101 6&
b1010110 6&
b1010111 6&
b1011000 6&
b1011001 6&
b1011010 6&
b1011011 6&
b1011100 6&
b1011101 6&
b1011110 6&
b1011111 6&
b1100000 6&
b1100001 6&
b1100010 6&
b1100011 6&
b1100100 6&
b1100101 6&
b1100110 6&
b1100111 6&
b1101000 6&
b1101001 6&
b1101010 6&
b1101011 6&
b1101100 6&
b1101101 6&
b1101110 6&
b1101111 6&
b1110000 6&
b1110001 6&
b1110010 6&
b1110011 6&
b1110100 6&
b1110101 6&
b1110110 6&
b1110111 6&
b1111000 6&
b1111001 6&
b1111010 6&
b1111011 6&
b1111100 6&
b1111101 6&
b1111110 6&
b1111111 6&
b10000000 6&
b10000001 6&
b10000010 6&
b10000011 6&
b10000100 6&
b10000101 6&
b10000110 6&
b10000111 6&
b10001000 6&
b10001001 6&
b10001010 6&
b10001011 6&
b10001100 6&
b10001101 6&
b10001110 6&
b10001111 6&
b10010000 6&
b10010001 6&
b10010010 6&
b10010011 6&
b10010100 6&
b10010101 6&
b10010110 6&
b10010111 6&
b10011000 6&
b10011001 6&
b10011010 6&
b10011011 6&
b10011100 6&
b10011101 6&
b10011110 6&
b10011111 6&
b10100000 6&
b10100001 6&
b10100010 6&
b10100011 6&
b10100100 6&
b10100101 6&
b10100110 6&
b10100111 6&
b10101000 6&
b10101001 6&
b10101010 6&
b10101011 6&
b10101100 6&
b10101101 6&
b10101110 6&
b10101111 6&
b10110000 6&
b10110001 6&
b10110010 6&
b10110011 6&
b10110100 6&
b10110101 6&
b10110110 6&
b10110111 6&
b10111000 6&
b10111001 6&
b10111010 6&
b10111011 6&
b10111100 6&
b10111101 6&
b10111110 6&
b10111111 6&
b11000000 6&
b11000001 6&
b11000010 6&
b11000011 6&
b11000100 6&
b11000101 6&
b11000110 6&
b11000111 6&
b11001000 6&
b11001001 6&
b11001010 6&
b11001011 6&
b11001100 6&
b11001101 6&
b11001110 6&
b11001111 6&
b11010000 6&
b11010001 6&
b11010010 6&
b11010011 6&
b11010100 6&
b11010101 6&
b11010110 6&
b11010111 6&
b11011000 6&
b11011001 6&
b11011010 6&
b11011011 6&
b11011100 6&
b11011101 6&
b11011110 6&
b11011111 6&
b11100000 6&
b11100001 6&
b11100010 6&
b11100011 6&
b11100100 6&
b11100101 6&
b11100110 6&
b11100111 6&
b11101000 6&
b11101001 6&
b11101010 6&
b11101011 6&
b11101100 6&
b11101101 6&
b11101110 6&
b11101111 6&
b11110000 6&
b11110001 6&
b11110010 6&
b11110011 6&
b11110100 6&
b11110101 6&
b11110110 6&
b11110111 6&
b11111000 6&
b11111001 6&
b11111010 6&
b11111011 6&
b11111100 6&
b11111101 6&
b11111110 6&
b11111111 6&
b100000000 6&
b0 8&
b1 8&
b10 8&
b11 8&
b100 8&
b101 8&
b110 8&
b111 8&
b1000 8&
b1001 8&
b1010 8&
b1011 8&
b1100 8&
b1101 8&
b1110 8&
b1111 8&
b10000 8&
b10001 8&
b10010 8&
b10011 8&
b10100 8&
b10101 8&
b10110 8&
b10111 8&
b11000 8&
b11001 8&
b11010 8&
b11011 8&
b11100 8&
b11101 8&
b11110 8&
b11111 8&
b100000 8&
b100001 8&
b100010 8&
b100011 8&
b100100 8&
b100101 8&
b100110 8&
b100111 8&
b101000 8&
b101001 8&
b101010 8&
b101011 8&
b101100 8&
b101101 8&
b101110 8&
b101111 8&
b110000 8&
b110001 8&
b110010 8&
b110011 8&
b110100 8&
b110101 8&
b110110 8&
b110111 8&
b111000 8&
b111001 8&
b111010 8&
b111011 8&
b111100 8&
b111101 8&
b111110 8&
b111111 8&
b1000000 8&
b1000001 8&
b1000010 8&
b1000011 8&
b1000100 8&
b1000101 8&
b1000110 8&
b1000111 8&
b1001000 8&
b1001001 8&
b1001010 8&
b1001011 8&
b1001100 8&
b1001101 8&
b1001110 8&
b1001111 8&
b1010000 8&
b1010001 8&
b1010010 8&
b1010011 8&
b1010100 8&
b1010101 8&
b1010110 8&
b1010111 8&
b1011000 8&
b1011001 8&
b1011010 8&
b1011011 8&
b1011100 8&
b1011101 8&
b1011110 8&
b1011111 8&
b1100000 8&
b1100001 8&
b1100010 8&
b1100011 8&
b1100100 8&
b1100101 8&
b1100110 8&
b1100111 8&
b1101000 8&
b1101001 8&
b1101010 8&
b1101011 8&
b1101100 8&
b1101101 8&
b1101110 8&
b1101111 8&
b1110000 8&
b1110001 8&
b1110010 8&
b1110011 8&
b1110100 8&
b1110101 8&
b1110110 8&
b1110111 8&
b1111000 8&
b1111001 8&
b1111010 8&
b1111011 8&
b1111100 8&
b1111101 8&
b1111110 8&
b1111111 8&
b10000000 8&
b10000001 8&
b10000010 8&
b10000011 8&
b10000100 8&
b10000101 8&
b10000110 8&
b10000111 8&
b10001000 8&
b10001001 8&
b10001010 8&
b10001011 8&
b10001100 8&
b10001101 8&
b10001110 8&
b10001111 8&
b10010000 8&
b10010001 8&
b10010010 8&
b10010011 8&
b10010100 8&
b10010101 8&
b10010110 8&
b10010111 8&
b10011000 8&
b10011001 8&
b10011010 8&
b10011011 8&
b10011100 8&
b10011101 8&
b10011110 8&
b10011111 8&
b10100000 8&
b10100001 8&
b10100010 8&
b10100011 8&
b10100100 8&
b10100101 8&
b10100110 8&
b10100111 8&
b10101000 8&
b10101001 8&
b10101010 8&
b10101011 8&
b10101100 8&
b10101101 8&
b10101110 8&
b10101111 8&
b10110000 8&
b10110001 8&
b10110010 8&
b10110011 8&
b10110100 8&
b10110101 8&
b10110110 8&
b10110111 8&
b10111000 8&
b10111001 8&
b10111010 8&
b10111011 8&
b10111100 8&
b10111101 8&
b10111110 8&
b10111111 8&
b11000000 8&
b11000001 8&
b11000010 8&
b11000011 8&
b11000100 8&
b11000101 8&
b11000110 8&
b11000111 8&
b11001000 8&
b11001001 8&
b11001010 8&
b11001011 8&
b11001100 8&
b11001101 8&
b11001110 8&
b11001111 8&
b11010000 8&
b11010001 8&
b11010010 8&
b11010011 8&
b11010100 8&
b11010101 8&
b11010110 8&
b11010111 8&
b11011000 8&
b11011001 8&
b11011010 8&
b11011011 8&
b11011100 8&
b11011101 8&
b11011110 8&
b11011111 8&
b11100000 8&
b11100001 8&
b11100010 8&
b11100011 8&
b11100100 8&
b11100101 8&
b11100110 8&
b11100111 8&
b11101000 8&
b11101001 8&
b11101010 8&
b11101011 8&
b11101100 8&
b11101101 8&
b11101110 8&
b11101111 8&
b11110000 8&
b11110001 8&
b11110010 8&
b11110011 8&
b11110100 8&
b11110101 8&
b11110110 8&
b11110111 8&
b11111000 8&
b11111001 8&
b11111010 8&
b11111011 8&
b11111100 8&
b11111101 8&
b11111110 8&
b11111111 8&
b100000000 8&
#150
0!!
08
0O,
0}
#200
1!!
b11 #!
18
1O,
1}
b0 d$
b1 d$
b10 d$
b11 d$
b100 d$
b101 d$
b110 d$
b111 d$
b1000 d$
b1001 d$
b1010 d$
b1011 d$
b1100 d$
b1101 d$
b1110 d$
b1111 d$
b10000 d$
b10001 d$
b10010 d$
b10011 d$
b10100 d$
b10101 d$
b10110 d$
b10111 d$
b11000 d$
b11001 d$
b11010 d$
b11011 d$
b11100 d$
b11101 d$
b11110 d$
b11111 d$
b100000 d$
b100001 d$
b100010 d$
b100011 d$
b100100 d$
b100101 d$
b100110 d$
b100111 d$
b101000 d$
b101001 d$
b101010 d$
b101011 d$
b101100 d$
b101101 d$
b101110 d$
b101111 d$
b110000 d$
b110001 d$
b110010 d$
b110011 d$
b110100 d$
b110101 d$
b110110 d$
b110111 d$
b111000 d$
b111001 d$
b111010 d$
b111011 d$
b111100 d$
b111101 d$
b111110 d$
b111111 d$
b1000000 d$
b1000001 d$
b1000010 d$
b1000011 d$
b1000100 d$
b1000101 d$
b1000110 d$
b1000111 d$
b1001000 d$
b1001001 d$
b1001010 d$
b1001011 d$
b1001100 d$
b1001101 d$
b1001110 d$
b1001111 d$
b1010000 d$
b1010001 d$
b1010010 d$
b1010011 d$
b1010100 d$
b1010101 d$
b1010110 d$
b1010111 d$
b1011000 d$
b1011001 d$
b1011010 d$
b1011011 d$
b1011100 d$
b1011101 d$
b1011110 d$
b1011111 d$
b1100000 d$
b1100001 d$
b1100010 d$
b1100011 d$
b1100100 d$
b1100101 d$
b1100110 d$
b1100111 d$
b1101000 d$
b1101001 d$
b1101010 d$
b1101011 d$
b1101100 d$
b1101101 d$
b1101110 d$
b1101111 d$
b1110000 d$
b1110001 d$
b1110010 d$
b1110011 d$
b1110100 d$
b1110101 d$
b1110110 d$
b1110111 d$
b1111000 d$
b1111001 d$
b1111010 d$
b1111011 d$
b1111100 d$
b1111101 d$
b1111110 d$
b1111111 d$
b10000000 d$
b10000001 d$
b10000010 d$
b10000011 d$
b10000100 d$
b10000101 d$
b10000110 d$
b10000111 d$
b10001000 d$
b10001001 d$
b10001010 d$
b10001011 d$
b10001100 d$
b10001101 d$
b10001110 d$
b10001111 d$
b10010000 d$
b10010001 d$
b10010010 d$
b10010011 d$
b10010100 d$
b10010101 d$
b10010110 d$
b10010111 d$
b10011000 d$
b10011001 d$
b10011010 d$
b10011011 d$
b10011100 d$
b10011101 d$
b10011110 d$
b10011111 d$
b10100000 d$
b10100001 d$
b10100010 d$
b10100011 d$
b10100100 d$
b10100101 d$
b10100110 d$
b10100111 d$
b10101000 d$
b10101001 d$
b10101010 d$
b10101011 d$
b10101100 d$
b10101101 d$
b10101110 d$
b10101111 d$
b10110000 d$
b10110001 d$
b10110010 d$
b10110011 d$
b10110100 d$
b10110101 d$
b10110110 d$
b10110111 d$
b10111000 d$
b10111001 d$
b10111010 d$
b10111011 d$
b10111100 d$
b10111101 d$
b10111110 d$
b10111111 d$
b11000000 d$
b11000001 d$
b11000010 d$
b11000011 d$
b11000100 d$
b11000101 d$
b11000110 d$
b11000111 d$
b11001000 d$
b11001001 d$
b11001010 d$
b11001011 d$
b11001100 d$
b11001101 d$
b11001110 d$
b11001111 d$
b11010000 d$
b11010001 d$
b11010010 d$
b11010011 d$
b11010100 d$
b11010101 d$
b11010110 d$
b11010111 d$
b11011000 d$
b11011001 d$
b11011010 d$
b11011011 d$
b11011100 d$
b11011101 d$
b11011110 d$
b11011111 d$
b11100000 d$
b11100001 d$
b11100010 d$
b11100011 d$
b11100100 d$
b11100101 d$
b11100110 d$
b11100111 d$
b11101000 d$
b11101001 d$
b11101010 d$
b11101011 d$
b11101100 d$
b11101101 d$
b11101110 d$
b11101111 d$
b11110000 d$
b11110001 d$
b11110010 d$
b11110011 d$
b11110100 d$
b11110101 d$
b11110110 d$
b11110111 d$
b11111000 d$
b11111001 d$
b11111010 d$
b11111011 d$
b11111100 d$
b11111101 d$
b11111110 d$
b11111111 d$
b100000000 d$
b0 g$
b1 g$
b10 g$
b11 g$
b100 g$
b101 g$
b110 g$
b111 g$
b1000 g$
b1001 g$
b1010 g$
b1011 g$
b1100 g$
b1101 g$
b1110 g$
b1111 g$
b10000 g$
b10001 g$
b10010 g$
b10011 g$
b10100 g$
b10101 g$
b10110 g$
b10111 g$
b11000 g$
b11001 g$
b11010 g$
b11011 g$
b11100 g$
b11101 g$
b11110 g$
b11111 g$
b100000 g$
b100001 g$
b100010 g$
b100011 g$
b100100 g$
b100101 g$
b100110 g$
b100111 g$
b101000 g$
b101001 g$
b101010 g$
b101011 g$
b101100 g$
b101101 g$
b101110 g$
b101111 g$
b110000 g$
b110001 g$
b110010 g$
b110011 g$
b110100 g$
b110101 g$
b110110 g$
b110111 g$
b111000 g$
b111001 g$
b111010 g$
b111011 g$
b111100 g$
b111101 g$
b111110 g$
b111111 g$
b1000000 g$
b1000001 g$
b1000010 g$
b1000011 g$
b1000100 g$
b1000101 g$
b1000110 g$
b1000111 g$
b1001000 g$
b1001001 g$
b1001010 g$
b1001011 g$
b1001100 g$
b1001101 g$
b1001110 g$
b1001111 g$
b1010000 g$
b1010001 g$
b1010010 g$
b1010011 g$
b1010100 g$
b1010101 g$
b1010110 g$
b1010111 g$
b1011000 g$
b1011001 g$
b1011010 g$
b1011011 g$
b1011100 g$
b1011101 g$
b1011110 g$
b1011111 g$
b1100000 g$
b1100001 g$
b1100010 g$
b1100011 g$
b1100100 g$
b1100101 g$
b1100110 g$
b1100111 g$
b1101000 g$
b1101001 g$
b1101010 g$
b1101011 g$
b1101100 g$
b1101101 g$
b1101110 g$
b1101111 g$
b1110000 g$
b1110001 g$
b1110010 g$
b1110011 g$
b1110100 g$
b1110101 g$
b1110110 g$
b1110111 g$
b1111000 g$
b1111001 g$
b1111010 g$
b1111011 g$
b1111100 g$
b1111101 g$
b1111110 g$
b1111111 g$
b10000000 g$
b10000001 g$
b10000010 g$
b10000011 g$
b10000100 g$
b10000101 g$
b10000110 g$
b10000111 g$
b10001000 g$
b10001001 g$
b10001010 g$
b10001011 g$
b10001100 g$
b10001101 g$
b10001110 g$
b10001111 g$
b10010000 g$
b10010001 g$
b10010010 g$
b10010011 g$
b10010100 g$
b10010101 g$
b10010110 g$
b10010111 g$
b10011000 g$
b10011001 g$
b10011010 g$
b10011011 g$
b10011100 g$
b10011101 g$
b10011110 g$
b10011111 g$
b10100000 g$
b10100001 g$
b10100010 g$
b10100011 g$
b10100100 g$
b10100101 g$
b10100110 g$
b10100111 g$
b10101000 g$
b10101001 g$
b10101010 g$
b10101011 g$
b10101100 g$
b10101101 g$
b10101110 g$
b10101111 g$
b10110000 g$
b10110001 g$
b10110010 g$
b10110011 g$
b10110100 g$
b10110101 g$
b10110110 g$
b10110111 g$
b10111000 g$
b10111001 g$
b10111010 g$
b10111011 g$
b10111100 g$
b10111101 g$
b10111110 g$
b10111111 g$
b11000000 g$
b11000001 g$
b11000010 g$
b11000011 g$
b11000100 g$
b11000101 g$
b11000110 g$
b11000111 g$
b11001000 g$
b11001001 g$
b11001010 g$
b11001011 g$
b11001100 g$
b11001101 g$
b11001110 g$
b11001111 g$
b11010000 g$
b11010001 g$
b11010010 g$
b11010011 g$
b11010100 g$
b11010101 g$
b11010110 g$
b11010111 g$
b11011000 g$
b11011001 g$
b11011010 g$
b11011011 g$
b11011100 g$
b11011101 g$
b11011110 g$
b11011111 g$
b11100000 g$
b11100001 g$
b11100010 g$
b11100011 g$
b11100100 g$
b11100101 g$
b11100110 g$
b11100111 g$
b11101000 g$
b11101001 g$
b11101010 g$
b11101011 g$
b11101100 g$
b11101101 g$
b11101110 g$
b11101111 g$
b11110000 g$
b11110001 g$
b11110010 g$
b11110011 g$
b11110100 g$
b11110101 g$
b11110110 g$
b11110111 g$
b11111000 g$
b11111001 g$
b11111010 g$
b11111011 g$
b11111100 g$
b11111101 g$
b11111110 g$
b11111111 g$
b100000000 g$
b0 j$
b1 j$
b10 j$
b11 j$
b100 j$
b101 j$
b110 j$
b111 j$
b1000 j$
b1001 j$
b1010 j$
b1011 j$
b1100 j$
b1101 j$
b1110 j$
b1111 j$
b10000 j$
b10001 j$
b10010 j$
b10011 j$
b10100 j$
b10101 j$
b10110 j$
b10111 j$
b11000 j$
b11001 j$
b11010 j$
b11011 j$
b11100 j$
b11101 j$
b11110 j$
b11111 j$
b100000 j$
b100001 j$
b100010 j$
b100011 j$
b100100 j$
b100101 j$
b100110 j$
b100111 j$
b101000 j$
b101001 j$
b101010 j$
b101011 j$
b101100 j$
b101101 j$
b101110 j$
b101111 j$
b110000 j$
b110001 j$
b110010 j$
b110011 j$
b110100 j$
b110101 j$
b110110 j$
b110111 j$
b111000 j$
b111001 j$
b111010 j$
b111011 j$
b111100 j$
b111101 j$
b111110 j$
b111111 j$
b1000000 j$
b1000001 j$
b1000010 j$
b1000011 j$
b1000100 j$
b1000101 j$
b1000110 j$
b1000111 j$
b1001000 j$
b1001001 j$
b1001010 j$
b1001011 j$
b1001100 j$
b1001101 j$
b1001110 j$
b1001111 j$
b1010000 j$
b1010001 j$
b1010010 j$
b1010011 j$
b1010100 j$
b1010101 j$
b1010110 j$
b1010111 j$
b1011000 j$
b1011001 j$
b1011010 j$
b1011011 j$
b1011100 j$
b1011101 j$
b1011110 j$
b1011111 j$
b1100000 j$
b1100001 j$
b1100010 j$
b1100011 j$
b1100100 j$
b1100101 j$
b1100110 j$
b1100111 j$
b1101000 j$
b1101001 j$
b1101010 j$
b1101011 j$
b1101100 j$
b1101101 j$
b1101110 j$
b1101111 j$
b1110000 j$
b1110001 j$
b1110010 j$
b1110011 j$
b1110100 j$
b1110101 j$
b1110110 j$
b1110111 j$
b1111000 j$
b1111001 j$
b1111010 j$
b1111011 j$
b1111100 j$
b1111101 j$
b1111110 j$
b1111111 j$
b10000000 j$
b10000001 j$
b10000010 j$
b10000011 j$
b10000100 j$
b10000101 j$
b10000110 j$
b10000111 j$
b10001000 j$
b10001001 j$
b10001010 j$
b10001011 j$
b10001100 j$
b10001101 j$
b10001110 j$
b10001111 j$
b10010000 j$
b10010001 j$
b10010010 j$
b10010011 j$
b10010100 j$
b10010101 j$
b10010110 j$
b10010111 j$
b10011000 j$
b10011001 j$
b10011010 j$
b10011011 j$
b10011100 j$
b10011101 j$
b10011110 j$
b10011111 j$
b10100000 j$
b10100001 j$
b10100010 j$
b10100011 j$
b10100100 j$
b10100101 j$
b10100110 j$
b10100111 j$
b10101000 j$
b10101001 j$
b10101010 j$
b10101011 j$
b10101100 j$
b10101101 j$
b10101110 j$
b10101111 j$
b10110000 j$
b10110001 j$
b10110010 j$
b10110011 j$
b10110100 j$
b10110101 j$
b10110110 j$
b10110111 j$
b10111000 j$
b10111001 j$
b10111010 j$
b10111011 j$
b10111100 j$
b10111101 j$
b10111110 j$
b10111111 j$
b11000000 j$
b11000001 j$
b11000010 j$
b11000011 j$
b11000100 j$
b11000101 j$
b11000110 j$
b11000111 j$
b11001000 j$
b11001001 j$
b11001010 j$
b11001011 j$
b11001100 j$
b11001101 j$
b11001110 j$
b11001111 j$
b11010000 j$
b11010001 j$
b11010010 j$
b11010011 j$
b11010100 j$
b11010101 j$
b11010110 j$
b11010111 j$
b11011000 j$
b11011001 j$
b11011010 j$
b11011011 j$
b11011100 j$
b11011101 j$
b11011110 j$
b11011111 j$
b11100000 j$
b11100001 j$
b11100010 j$
b11100011 j$
b11100100 j$
b11100101 j$
b11100110 j$
b11100111 j$
b11101000 j$
b11101001 j$
b11101010 j$
b11101011 j$
b11101100 j$
b11101101 j$
b11101110 j$
b11101111 j$
b11110000 j$
b11110001 j$
b11110010 j$
b11110011 j$
b11110100 j$
b11110101 j$
b11110110 j$
b11110111 j$
b11111000 j$
b11111001 j$
b11111010 j$
b11111011 j$
b11111100 j$
b11111101 j$
b11111110 j$
b11111111 j$
b100000000 j$
b0 m$
b1 m$
b10 m$
b11 m$
b100 m$
b101 m$
b110 m$
b111 m$
b1000 m$
b1001 m$
b1010 m$
b1011 m$
b1100 m$
b1101 m$
b1110 m$
b1111 m$
b10000 m$
b10001 m$
b10010 m$
b10011 m$
b10100 m$
b10101 m$
b10110 m$
b10111 m$
b11000 m$
b11001 m$
b11010 m$
b11011 m$
b11100 m$
b11101 m$
b11110 m$
b11111 m$
b100000 m$
b100001 m$
b100010 m$
b100011 m$
b100100 m$
b100101 m$
b100110 m$
b100111 m$
b101000 m$
b101001 m$
b101010 m$
b101011 m$
b101100 m$
b101101 m$
b101110 m$
b101111 m$
b110000 m$
b110001 m$
b110010 m$
b110011 m$
b110100 m$
b110101 m$
b110110 m$
b110111 m$
b111000 m$
b111001 m$
b111010 m$
b111011 m$
b111100 m$
b111101 m$
b111110 m$
b111111 m$
b1000000 m$
b1000001 m$
b1000010 m$
b1000011 m$
b1000100 m$
b1000101 m$
b1000110 m$
b1000111 m$
b1001000 m$
b1001001 m$
b1001010 m$
b1001011 m$
b1001100 m$
b1001101 m$
b1001110 m$
b1001111 m$
b1010000 m$
b1010001 m$
b1010010 m$
b1010011 m$
b1010100 m$
b1010101 m$
b1010110 m$
b1010111 m$
b1011000 m$
b1011001 m$
b1011010 m$
b1011011 m$
b1011100 m$
b1011101 m$
b1011110 m$
b1011111 m$
b1100000 m$
b1100001 m$
b1100010 m$
b1100011 m$
b1100100 m$
b1100101 m$
b1100110 m$
b1100111 m$
b1101000 m$
b1101001 m$
b1101010 m$
b1101011 m$
b1101100 m$
b1101101 m$
b1101110 m$
b1101111 m$
b1110000 m$
b1110001 m$
b1110010 m$
b1110011 m$
b1110100 m$
b1110101 m$
b1110110 m$
b1110111 m$
b1111000 m$
b1111001 m$
b1111010 m$
b1111011 m$
b1111100 m$
b1111101 m$
b1111110 m$
b1111111 m$
b10000000 m$
b10000001 m$
b10000010 m$
b10000011 m$
b10000100 m$
b10000101 m$
b10000110 m$
b10000111 m$
b10001000 m$
b10001001 m$
b10001010 m$
b10001011 m$
b10001100 m$
b10001101 m$
b10001110 m$
b10001111 m$
b10010000 m$
b10010001 m$
b10010010 m$
b10010011 m$
b10010100 m$
b10010101 m$
b10010110 m$
b10010111 m$
b10011000 m$
b10011001 m$
b10011010 m$
b10011011 m$
b10011100 m$
b10011101 m$
b10011110 m$
b10011111 m$
b10100000 m$
b10100001 m$
b10100010 m$
b10100011 m$
b10100100 m$
b10100101 m$
b10100110 m$
b10100111 m$
b10101000 m$
b10101001 m$
b10101010 m$
b10101011 m$
b10101100 m$
b10101101 m$
b10101110 m$
b10101111 m$
b10110000 m$
b10110001 m$
b10110010 m$
b10110011 m$
b10110100 m$
b10110101 m$
b10110110 m$
b10110111 m$
b10111000 m$
b10111001 m$
b10111010 m$
b10111011 m$
b10111100 m$
b10111101 m$
b10111110 m$
b10111111 m$
b11000000 m$
b11000001 m$
b11000010 m$
b11000011 m$
b11000100 m$
b11000101 m$
b11000110 m$
b11000111 m$
b11001000 m$
b11001001 m$
b11001010 m$
b11001011 m$
b11001100 m$
b11001101 m$
b11001110 m$
b11001111 m$
b11010000 m$
b11010001 m$
b11010010 m$
b11010011 m$
b11010100 m$
b11010101 m$
b11010110 m$
b11010111 m$
b11011000 m$
b11011001 m$
b11011010 m$
b11011011 m$
b11011100 m$
b11011101 m$
b11011110 m$
b11011111 m$
b11100000 m$
b11100001 m$
b11100010 m$
b11100011 m$
b11100100 m$
b11100101 m$
b11100110 m$
b11100111 m$
b11101000 m$
b11101001 m$
b11101010 m$
b11101011 m$
b11101100 m$
b11101101 m$
b11101110 m$
b11101111 m$
b11110000 m$
b11110001 m$
b11110010 m$
b11110011 m$
b11110100 m$
b11110101 m$
b11110110 m$
b11110111 m$
b11111000 m$
b11111001 m$
b11111010 m$
b11111011 m$
b11111100 m$
b11111101 m$
b11111110 m$
b11111111 m$
b100000000 m$
b0 p$
b1 p$
b10 p$
b11 p$
b100 p$
b101 p$
b110 p$
b111 p$
b1000 p$
b1001 p$
b1010 p$
b1011 p$
b1100 p$
b1101 p$
b1110 p$
b1111 p$
b10000 p$
b10001 p$
b10010 p$
b10011 p$
b10100 p$
b10101 p$
b10110 p$
b10111 p$
b11000 p$
b11001 p$
b11010 p$
b11011 p$
b11100 p$
b11101 p$
b11110 p$
b11111 p$
b100000 p$
b100001 p$
b100010 p$
b100011 p$
b100100 p$
b100101 p$
b100110 p$
b100111 p$
b101000 p$
b101001 p$
b101010 p$
b101011 p$
b101100 p$
b101101 p$
b101110 p$
b101111 p$
b110000 p$
b110001 p$
b110010 p$
b110011 p$
b110100 p$
b110101 p$
b110110 p$
b110111 p$
b111000 p$
b111001 p$
b111010 p$
b111011 p$
b111100 p$
b111101 p$
b111110 p$
b111111 p$
b1000000 p$
b1000001 p$
b1000010 p$
b1000011 p$
b1000100 p$
b1000101 p$
b1000110 p$
b1000111 p$
b1001000 p$
b1001001 p$
b1001010 p$
b1001011 p$
b1001100 p$
b1001101 p$
b1001110 p$
b1001111 p$
b1010000 p$
b1010001 p$
b1010010 p$
b1010011 p$
b1010100 p$
b1010101 p$
b1010110 p$
b1010111 p$
b1011000 p$
b1011001 p$
b1011010 p$
b1011011 p$
b1011100 p$
b1011101 p$
b1011110 p$
b1011111 p$
b1100000 p$
b1100001 p$
b1100010 p$
b1100011 p$
b1100100 p$
b1100101 p$
b1100110 p$
b1100111 p$
b1101000 p$
b1101001 p$
b1101010 p$
b1101011 p$
b1101100 p$
b1101101 p$
b1101110 p$
b1101111 p$
b1110000 p$
b1110001 p$
b1110010 p$
b1110011 p$
b1110100 p$
b1110101 p$
b1110110 p$
b1110111 p$
b1111000 p$
b1111001 p$
b1111010 p$
b1111011 p$
b1111100 p$
b1111101 p$
b1111110 p$
b1111111 p$
b10000000 p$
b10000001 p$
b10000010 p$
b10000011 p$
b10000100 p$
b10000101 p$
b10000110 p$
b10000111 p$
b10001000 p$
b10001001 p$
b10001010 p$
b10001011 p$
b10001100 p$
b10001101 p$
b10001110 p$
b10001111 p$
b10010000 p$
b10010001 p$
b10010010 p$
b10010011 p$
b10010100 p$
b10010101 p$
b10010110 p$
b10010111 p$
b10011000 p$
b10011001 p$
b10011010 p$
b10011011 p$
b10011100 p$
b10011101 p$
b10011110 p$
b10011111 p$
b10100000 p$
b10100001 p$
b10100010 p$
b10100011 p$
b10100100 p$
b10100101 p$
b10100110 p$
b10100111 p$
b10101000 p$
b10101001 p$
b10101010 p$
b10101011 p$
b10101100 p$
b10101101 p$
b10101110 p$
b10101111 p$
b10110000 p$
b10110001 p$
b10110010 p$
b10110011 p$
b10110100 p$
b10110101 p$
b10110110 p$
b10110111 p$
b10111000 p$
b10111001 p$
b10111010 p$
b10111011 p$
b10111100 p$
b10111101 p$
b10111110 p$
b10111111 p$
b11000000 p$
b11000001 p$
b11000010 p$
b11000011 p$
b11000100 p$
b11000101 p$
b11000110 p$
b11000111 p$
b11001000 p$
b11001001 p$
b11001010 p$
b11001011 p$
b11001100 p$
b11001101 p$
b11001110 p$
b11001111 p$
b11010000 p$
b11010001 p$
b11010010 p$
b11010011 p$
b11010100 p$
b11010101 p$
b11010110 p$
b11010111 p$
b11011000 p$
b11011001 p$
b11011010 p$
b11011011 p$
b11011100 p$
b11011101 p$
b11011110 p$
b11011111 p$
b11100000 p$
b11100001 p$
b11100010 p$
b11100011 p$
b11100100 p$
b11100101 p$
b11100110 p$
b11100111 p$
b11101000 p$
b11101001 p$
b11101010 p$
b11101011 p$
b11101100 p$
b11101101 p$
b11101110 p$
b11101111 p$
b11110000 p$
b11110001 p$
b11110010 p$
b11110011 p$
b11110100 p$
b11110101 p$
b11110110 p$
b11110111 p$
b11111000 p$
b11111001 p$
b11111010 p$
b11111011 p$
b11111100 p$
b11111101 p$
b11111110 p$
b11111111 p$
b100000000 p$
b0 s$
b1 s$
b10 s$
b11 s$
b100 s$
b101 s$
b110 s$
b111 s$
b1000 s$
b1001 s$
b1010 s$
b1011 s$
b1100 s$
b1101 s$
b1110 s$
b1111 s$
b10000 s$
b10001 s$
b10010 s$
b10011 s$
b10100 s$
b10101 s$
b10110 s$
b10111 s$
b11000 s$
b11001 s$
b11010 s$
b11011 s$
b11100 s$
b11101 s$
b11110 s$
b11111 s$
b100000 s$
b100001 s$
b100010 s$
b100011 s$
b100100 s$
b100101 s$
b100110 s$
b100111 s$
b101000 s$
b101001 s$
b101010 s$
b101011 s$
b101100 s$
b101101 s$
b101110 s$
b101111 s$
b110000 s$
b110001 s$
b110010 s$
b110011 s$
b110100 s$
b110101 s$
b110110 s$
b110111 s$
b111000 s$
b111001 s$
b111010 s$
b111011 s$
b111100 s$
b111101 s$
b111110 s$
b111111 s$
b1000000 s$
b1000001 s$
b1000010 s$
b1000011 s$
b1000100 s$
b1000101 s$
b1000110 s$
b1000111 s$
b1001000 s$
b1001001 s$
b1001010 s$
b1001011 s$
b1001100 s$
b1001101 s$
b1001110 s$
b1001111 s$
b1010000 s$
b1010001 s$
b1010010 s$
b1010011 s$
b1010100 s$
b1010101 s$
b1010110 s$
b1010111 s$
b1011000 s$
b1011001 s$
b1011010 s$
b1011011 s$
b1011100 s$
b1011101 s$
b1011110 s$
b1011111 s$
b1100000 s$
b1100001 s$
b1100010 s$
b1100011 s$
b1100100 s$
b1100101 s$
b1100110 s$
b1100111 s$
b1101000 s$
b1101001 s$
b1101010 s$
b1101011 s$
b1101100 s$
b1101101 s$
b1101110 s$
b1101111 s$
b1110000 s$
b1110001 s$
b1110010 s$
b1110011 s$
b1110100 s$
b1110101 s$
b1110110 s$
b1110111 s$
b1111000 s$
b1111001 s$
b1111010 s$
b1111011 s$
b1111100 s$
b1111101 s$
b1111110 s$
b1111111 s$
b10000000 s$
b10000001 s$
b10000010 s$
b10000011 s$
b10000100 s$
b10000101 s$
b10000110 s$
b10000111 s$
b10001000 s$
b10001001 s$
b10001010 s$
b10001011 s$
b10001100 s$
b10001101 s$
b10001110 s$
b10001111 s$
b10010000 s$
b10010001 s$
b10010010 s$
b10010011 s$
b10010100 s$
b10010101 s$
b10010110 s$
b10010111 s$
b10011000 s$
b10011001 s$
b10011010 s$
b10011011 s$
b10011100 s$
b10011101 s$
b10011110 s$
b10011111 s$
b10100000 s$
b10100001 s$
b10100010 s$
b10100011 s$
b10100100 s$
b10100101 s$
b10100110 s$
b10100111 s$
b10101000 s$
b10101001 s$
b10101010 s$
b10101011 s$
b10101100 s$
b10101101 s$
b10101110 s$
b10101111 s$
b10110000 s$
b10110001 s$
b10110010 s$
b10110011 s$
b10110100 s$
b10110101 s$
b10110110 s$
b10110111 s$
b10111000 s$
b10111001 s$
b10111010 s$
b10111011 s$
b10111100 s$
b10111101 s$
b10111110 s$
b10111111 s$
b11000000 s$
b11000001 s$
b11000010 s$
b11000011 s$
b11000100 s$
b11000101 s$
b11000110 s$
b11000111 s$
b11001000 s$
b11001001 s$
b11001010 s$
b11001011 s$
b11001100 s$
b11001101 s$
b11001110 s$
b11001111 s$
b11010000 s$
b11010001 s$
b11010010 s$
b11010011 s$
b11010100 s$
b11010101 s$
b11010110 s$
b11010111 s$
b11011000 s$
b11011001 s$
b11011010 s$
b11011011 s$
b11011100 s$
b11011101 s$
b11011110 s$
b11011111 s$
b11100000 s$
b11100001 s$
b11100010 s$
b11100011 s$
b11100100 s$
b11100101 s$
b11100110 s$
b11100111 s$
b11101000 s$
b11101001 s$
b11101010 s$
b11101011 s$
b11101100 s$
b11101101 s$
b11101110 s$
b11101111 s$
b11110000 s$
b11110001 s$
b11110010 s$
b11110011 s$
b11110100 s$
b11110101 s$
b11110110 s$
b11110111 s$
b11111000 s$
b11111001 s$
b11111010 s$
b11111011 s$
b11111100 s$
b11111101 s$
b11111110 s$
b11111111 s$
b100000000 s$
b0 u$
b1 u$
b10 u$
b11 u$
b100 u$
b101 u$
b110 u$
b111 u$
b1000 u$
b1001 u$
b1010 u$
b1011 u$
b1100 u$
b1101 u$
b1110 u$
b1111 u$
b10000 u$
b10001 u$
b10010 u$
b10011 u$
b10100 u$
b10101 u$
b10110 u$
b10111 u$
b11000 u$
b11001 u$
b11010 u$
b11011 u$
b11100 u$
b11101 u$
b11110 u$
b11111 u$
b100000 u$
b100001 u$
b100010 u$
b100011 u$
b100100 u$
b100101 u$
b100110 u$
b100111 u$
b101000 u$
b101001 u$
b101010 u$
b101011 u$
b101100 u$
b101101 u$
b101110 u$
b101111 u$
b110000 u$
b110001 u$
b110010 u$
b110011 u$
b110100 u$
b110101 u$
b110110 u$
b110111 u$
b111000 u$
b111001 u$
b111010 u$
b111011 u$
b111100 u$
b111101 u$
b111110 u$
b111111 u$
b1000000 u$
b1000001 u$
b1000010 u$
b1000011 u$
b1000100 u$
b1000101 u$
b1000110 u$
b1000111 u$
b1001000 u$
b1001001 u$
b1001010 u$
b1001011 u$
b1001100 u$
b1001101 u$
b1001110 u$
b1001111 u$
b1010000 u$
b1010001 u$
b1010010 u$
b1010011 u$
b1010100 u$
b1010101 u$
b1010110 u$
b1010111 u$
b1011000 u$
b1011001 u$
b1011010 u$
b1011011 u$
b1011100 u$
b1011101 u$
b1011110 u$
b1011111 u$
b1100000 u$
b1100001 u$
b1100010 u$
b1100011 u$
b1100100 u$
b1100101 u$
b1100110 u$
b1100111 u$
b1101000 u$
b1101001 u$
b1101010 u$
b1101011 u$
b1101100 u$
b1101101 u$
b1101110 u$
b1101111 u$
b1110000 u$
b1110001 u$
b1110010 u$
b1110011 u$
b1110100 u$
b1110101 u$
b1110110 u$
b1110111 u$
b1111000 u$
b1111001 u$
b1111010 u$
b1111011 u$
b1111100 u$
b1111101 u$
b1111110 u$
b1111111 u$
b10000000 u$
b10000001 u$
b10000010 u$
b10000011 u$
b10000100 u$
b10000101 u$
b10000110 u$
b10000111 u$
b10001000 u$
b10001001 u$
b10001010 u$
b10001011 u$
b10001100 u$
b10001101 u$
b10001110 u$
b10001111 u$
b10010000 u$
b10010001 u$
b10010010 u$
b10010011 u$
b10010100 u$
b10010101 u$
b10010110 u$
b10010111 u$
b10011000 u$
b10011001 u$
b10011010 u$
b10011011 u$
b10011100 u$
b10011101 u$
b10011110 u$
b10011111 u$
b10100000 u$
b10100001 u$
b10100010 u$
b10100011 u$
b10100100 u$
b10100101 u$
b10100110 u$
b10100111 u$
b10101000 u$
b10101001 u$
b10101010 u$
b10101011 u$
b10101100 u$
b10101101 u$
b10101110 u$
b10101111 u$
b10110000 u$
b10110001 u$
b10110010 u$
b10110011 u$
b10110100 u$
b10110101 u$
b10110110 u$
b10110111 u$
b10111000 u$
b10111001 u$
b10111010 u$
b10111011 u$
b10111100 u$
b10111101 u$
b10111110 u$
b10111111 u$
b11000000 u$
b11000001 u$
b11000010 u$
b11000011 u$
b11000100 u$
b11000101 u$
b11000110 u$
b11000111 u$
b11001000 u$
b11001001 u$
b11001010 u$
b11001011 u$
b11001100 u$
b11001101 u$
b11001110 u$
b11001111 u$
b11010000 u$
b11010001 u$
b11010010 u$
b11010011 u$
b11010100 u$
b11010101 u$
b11010110 u$
b11010111 u$
b11011000 u$
b11011001 u$
b11011010 u$
b11011011 u$
b11011100 u$
b11011101 u$
b11011110 u$
b11011111 u$
b11100000 u$
b11100001 u$
b11100010 u$
b11100011 u$
b11100100 u$
b11100101 u$
b11100110 u$
b11100111 u$
b11101000 u$
b11101001 u$
b11101010 u$
b11101011 u$
b11101100 u$
b11101101 u$
b11101110 u$
b11101111 u$
b11110000 u$
b11110001 u$
b11110010 u$
b11110011 u$
b11110100 u$
b11110101 u$
b11110110 u$
b11110111 u$
b11111000 u$
b11111001 u$
b11111010 u$
b11111011 u$
b11111100 u$
b11111101 u$
b11111110 u$
b11111111 u$
b100000000 u$
b0 '&
b1 '&
b10 '&
b11 '&
b100 '&
b101 '&
b110 '&
b111 '&
b1000 '&
b1001 '&
b1010 '&
b1011 '&
b1100 '&
b1101 '&
b1110 '&
b1111 '&
b10000 '&
b10001 '&
b10010 '&
b10011 '&
b10100 '&
b10101 '&
b10110 '&
b10111 '&
b11000 '&
b11001 '&
b11010 '&
b11011 '&
b11100 '&
b11101 '&
b11110 '&
b11111 '&
b100000 '&
b100001 '&
b100010 '&
b100011 '&
b100100 '&
b100101 '&
b100110 '&
b100111 '&
b101000 '&
b101001 '&
b101010 '&
b101011 '&
b101100 '&
b101101 '&
b101110 '&
b101111 '&
b110000 '&
b110001 '&
b110010 '&
b110011 '&
b110100 '&
b110101 '&
b110110 '&
b110111 '&
b111000 '&
b111001 '&
b111010 '&
b111011 '&
b111100 '&
b111101 '&
b111110 '&
b111111 '&
b1000000 '&
b1000001 '&
b1000010 '&
b1000011 '&
b1000100 '&
b1000101 '&
b1000110 '&
b1000111 '&
b1001000 '&
b1001001 '&
b1001010 '&
b1001011 '&
b1001100 '&
b1001101 '&
b1001110 '&
b1001111 '&
b1010000 '&
b1010001 '&
b1010010 '&
b1010011 '&
b1010100 '&
b1010101 '&
b1010110 '&
b1010111 '&
b1011000 '&
b1011001 '&
b1011010 '&
b1011011 '&
b1011100 '&
b1011101 '&
b1011110 '&
b1011111 '&
b1100000 '&
b1100001 '&
b1100010 '&
b1100011 '&
b1100100 '&
b1100101 '&
b1100110 '&
b1100111 '&
b1101000 '&
b1101001 '&
b1101010 '&
b1101011 '&
b1101100 '&
b1101101 '&
b1101110 '&
b1101111 '&
b1110000 '&
b1110001 '&
b1110010 '&
b1110011 '&
b1110100 '&
b1110101 '&
b1110110 '&
b1110111 '&
b1111000 '&
b1111001 '&
b1111010 '&
b1111011 '&
b1111100 '&
b1111101 '&
b1111110 '&
b1111111 '&
b10000000 '&
b10000001 '&
b10000010 '&
b10000011 '&
b10000100 '&
b10000101 '&
b10000110 '&
b10000111 '&
b10001000 '&
b10001001 '&
b10001010 '&
b10001011 '&
b10001100 '&
b10001101 '&
b10001110 '&
b10001111 '&
b10010000 '&
b10010001 '&
b10010010 '&
b10010011 '&
b10010100 '&
b10010101 '&
b10010110 '&
b10010111 '&
b10011000 '&
b10011001 '&
b10011010 '&
b10011011 '&
b10011100 '&
b10011101 '&
b10011110 '&
b10011111 '&
b10100000 '&
b10100001 '&
b10100010 '&
b10100011 '&
b10100100 '&
b10100101 '&
b10100110 '&
b10100111 '&
b10101000 '&
b10101001 '&
b10101010 '&
b10101011 '&
b10101100 '&
b10101101 '&
b10101110 '&
b10101111 '&
b10110000 '&
b10110001 '&
b10110010 '&
b10110011 '&
b10110100 '&
b10110101 '&
b10110110 '&
b10110111 '&
b10111000 '&
b10111001 '&
b10111010 '&
b10111011 '&
b10111100 '&
b10111101 '&
b10111110 '&
b10111111 '&
b11000000 '&
b11000001 '&
b11000010 '&
b11000011 '&
b11000100 '&
b11000101 '&
b11000110 '&
b11000111 '&
b11001000 '&
b11001001 '&
b11001010 '&
b11001011 '&
b11001100 '&
b11001101 '&
b11001110 '&
b11001111 '&
b11010000 '&
b11010001 '&
b11010010 '&
b11010011 '&
b11010100 '&
b11010101 '&
b11010110 '&
b11010111 '&
b11011000 '&
b11011001 '&
b11011010 '&
b11011011 '&
b11011100 '&
b11011101 '&
b11011110 '&
b11011111 '&
b11100000 '&
b11100001 '&
b11100010 '&
b11100011 '&
b11100100 '&
b11100101 '&
b11100110 '&
b11100111 '&
b11101000 '&
b11101001 '&
b11101010 '&
b11101011 '&
b11101100 '&
b11101101 '&
b11101110 '&
b11101111 '&
b11110000 '&
b11110001 '&
b11110010 '&
b11110011 '&
b11110100 '&
b11110101 '&
b11110110 '&
b11110111 '&
b11111000 '&
b11111001 '&
b11111010 '&
b11111011 '&
b11111100 '&
b11111101 '&
b11111110 '&
b11111111 '&
b100000000 '&
b0 *&
b1 *&
b10 *&
b11 *&
b100 *&
b101 *&
b110 *&
b111 *&
b1000 *&
b1001 *&
b1010 *&
b1011 *&
b1100 *&
b1101 *&
b1110 *&
b1111 *&
b10000 *&
b10001 *&
b10010 *&
b10011 *&
b10100 *&
b10101 *&
b10110 *&
b10111 *&
b11000 *&
b11001 *&
b11010 *&
b11011 *&
b11100 *&
b11101 *&
b11110 *&
b11111 *&
b100000 *&
b100001 *&
b100010 *&
b100011 *&
b100100 *&
b100101 *&
b100110 *&
b100111 *&
b101000 *&
b101001 *&
b101010 *&
b101011 *&
b101100 *&
b101101 *&
b101110 *&
b101111 *&
b110000 *&
b110001 *&
b110010 *&
b110011 *&
b110100 *&
b110101 *&
b110110 *&
b110111 *&
b111000 *&
b111001 *&
b111010 *&
b111011 *&
b111100 *&
b111101 *&
b111110 *&
b111111 *&
b1000000 *&
b1000001 *&
b1000010 *&
b1000011 *&
b1000100 *&
b1000101 *&
b1000110 *&
b1000111 *&
b1001000 *&
b1001001 *&
b1001010 *&
b1001011 *&
b1001100 *&
b1001101 *&
b1001110 *&
b1001111 *&
b1010000 *&
b1010001 *&
b1010010 *&
b1010011 *&
b1010100 *&
b1010101 *&
b1010110 *&
b1010111 *&
b1011000 *&
b1011001 *&
b1011010 *&
b1011011 *&
b1011100 *&
b1011101 *&
b1011110 *&
b1011111 *&
b1100000 *&
b1100001 *&
b1100010 *&
b1100011 *&
b1100100 *&
b1100101 *&
b1100110 *&
b1100111 *&
b1101000 *&
b1101001 *&
b1101010 *&
b1101011 *&
b1101100 *&
b1101101 *&
b1101110 *&
b1101111 *&
b1110000 *&
b1110001 *&
b1110010 *&
b1110011 *&
b1110100 *&
b1110101 *&
b1110110 *&
b1110111 *&
b1111000 *&
b1111001 *&
b1111010 *&
b1111011 *&
b1111100 *&
b1111101 *&
b1111110 *&
b1111111 *&
b10000000 *&
b10000001 *&
b10000010 *&
b10000011 *&
b10000100 *&
b10000101 *&
b10000110 *&
b10000111 *&
b10001000 *&
b10001001 *&
b10001010 *&
b10001011 *&
b10001100 *&
b10001101 *&
b10001110 *&
b10001111 *&
b10010000 *&
b10010001 *&
b10010010 *&
b10010011 *&
b10010100 *&
b10010101 *&
b10010110 *&
b10010111 *&
b10011000 *&
b10011001 *&
b10011010 *&
b10011011 *&
b10011100 *&
b10011101 *&
b10011110 *&
b10011111 *&
b10100000 *&
b10100001 *&
b10100010 *&
b10100011 *&
b10100100 *&
b10100101 *&
b10100110 *&
b10100111 *&
b10101000 *&
b10101001 *&
b10101010 *&
b10101011 *&
b10101100 *&
b10101101 *&
b10101110 *&
b10101111 *&
b10110000 *&
b10110001 *&
b10110010 *&
b10110011 *&
b10110100 *&
b10110101 *&
b10110110 *&
b10110111 *&
b10111000 *&
b10111001 *&
b10111010 *&
b10111011 *&
b10111100 *&
b10111101 *&
b10111110 *&
b10111111 *&
b11000000 *&
b11000001 *&
b11000010 *&
b11000011 *&
b11000100 *&
b11000101 *&
b11000110 *&
b11000111 *&
b11001000 *&
b11001001 *&
b11001010 *&
b11001011 *&
b11001100 *&
b11001101 *&
b11001110 *&
b11001111 *&
b11010000 *&
b11010001 *&
b11010010 *&
b11010011 *&
b11010100 *&
b11010101 *&
b11010110 *&
b11010111 *&
b11011000 *&
b11011001 *&
b11011010 *&
b11011011 *&
b11011100 *&
b11011101 *&
b11011110 *&
b11011111 *&
b11100000 *&
b11100001 *&
b11100010 *&
b11100011 *&
b11100100 *&
b11100101 *&
b11100110 *&
b11100111 *&
b11101000 *&
b11101001 *&
b11101010 *&
b11101011 *&
b11101100 *&
b11101101 *&
b11101110 *&
b11101111 *&
b11110000 *&
b11110001 *&
b11110010 *&
b11110011 *&
b11110100 *&
b11110101 *&
b11110110 *&
b11110111 *&
b11111000 *&
b11111001 *&
b11111010 *&
b11111011 *&
b11111100 *&
b11111101 *&
b11111110 *&
b11111111 *&
b100000000 *&
b0 -&
b1 -&
b10 -&
b11 -&
b100 -&
b101 -&
b110 -&
b111 -&
b1000 -&
b1001 -&
b1010 -&
b1011 -&
b1100 -&
b1101 -&
b1110 -&
b1111 -&
b10000 -&
b10001 -&
b10010 -&
b10011 -&
b10100 -&
b10101 -&
b10110 -&
b10111 -&
b11000 -&
b11001 -&
b11010 -&
b11011 -&
b11100 -&
b11101 -&
b11110 -&
b11111 -&
b100000 -&
b100001 -&
b100010 -&
b100011 -&
b100100 -&
b100101 -&
b100110 -&
b100111 -&
b101000 -&
b101001 -&
b101010 -&
b101011 -&
b101100 -&
b101101 -&
b101110 -&
b101111 -&
b110000 -&
b110001 -&
b110010 -&
b110011 -&
b110100 -&
b110101 -&
b110110 -&
b110111 -&
b111000 -&
b111001 -&
b111010 -&
b111011 -&
b111100 -&
b111101 -&
b111110 -&
b111111 -&
b1000000 -&
b1000001 -&
b1000010 -&
b1000011 -&
b1000100 -&
b1000101 -&
b1000110 -&
b1000111 -&
b1001000 -&
b1001001 -&
b1001010 -&
b1001011 -&
b1001100 -&
b1001101 -&
b1001110 -&
b1001111 -&
b1010000 -&
b1010001 -&
b1010010 -&
b1010011 -&
b1010100 -&
b1010101 -&
b1010110 -&
b1010111 -&
b1011000 -&
b1011001 -&
b1011010 -&
b1011011 -&
b1011100 -&
b1011101 -&
b1011110 -&
b1011111 -&
b1100000 -&
b1100001 -&
b1100010 -&
b1100011 -&
b1100100 -&
b1100101 -&
b1100110 -&
b1100111 -&
b1101000 -&
b1101001 -&
b1101010 -&
b1101011 -&
b1101100 -&
b1101101 -&
b1101110 -&
b1101111 -&
b1110000 -&
b1110001 -&
b1110010 -&
b1110011 -&
b1110100 -&
b1110101 -&
b1110110 -&
b1110111 -&
b1111000 -&
b1111001 -&
b1111010 -&
b1111011 -&
b1111100 -&
b1111101 -&
b1111110 -&
b1111111 -&
b10000000 -&
b10000001 -&
b10000010 -&
b10000011 -&
b10000100 -&
b10000101 -&
b10000110 -&
b10000111 -&
b10001000 -&
b10001001 -&
b10001010 -&
b10001011 -&
b10001100 -&
b10001101 -&
b10001110 -&
b10001111 -&
b10010000 -&
b10010001 -&
b10010010 -&
b10010011 -&
b10010100 -&
b10010101 -&
b10010110 -&
b10010111 -&
b10011000 -&
b10011001 -&
b10011010 -&
b10011011 -&
b10011100 -&
b10011101 -&
b10011110 -&
b10011111 -&
b10100000 -&
b10100001 -&
b10100010 -&
b10100011 -&
b10100100 -&
b10100101 -&
b10100110 -&
b10100111 -&
b10101000 -&
b10101001 -&
b10101010 -&
b10101011 -&
b10101100 -&
b10101101 -&
b10101110 -&
b10101111 -&
b10110000 -&
b10110001 -&
b10110010 -&
b10110011 -&
b10110100 -&
b10110101 -&
b10110110 -&
b10110111 -&
b10111000 -&
b10111001 -&
b10111010 -&
b10111011 -&
b10111100 -&
b10111101 -&
b10111110 -&
b10111111 -&
b11000000 -&
b11000001 -&
b11000010 -&
b11000011 -&
b11000100 -&
b11000101 -&
b11000110 -&
b11000111 -&
b11001000 -&
b11001001 -&
b11001010 -&
b11001011 -&
b11001100 -&
b11001101 -&
b11001110 -&
b11001111 -&
b11010000 -&
b11010001 -&
b11010010 -&
b11010011 -&
b11010100 -&
b11010101 -&
b11010110 -&
b11010111 -&
b11011000 -&
b11011001 -&
b11011010 -&
b11011011 -&
b11011100 -&
b11011101 -&
b11011110 -&
b11011111 -&
b11100000 -&
b11100001 -&
b11100010 -&
b11100011 -&
b11100100 -&
b11100101 -&
b11100110 -&
b11100111 -&
b11101000 -&
b11101001 -&
b11101010 -&
b11101011 -&
b11101100 -&
b11101101 -&
b11101110 -&
b11101111 -&
b11110000 -&
b11110001 -&
b11110010 -&
b11110011 -&
b11110100 -&
b11110101 -&
b11110110 -&
b11110111 -&
b11111000 -&
b11111001 -&
b11111010 -&
b11111011 -&
b11111100 -&
b11111101 -&
b11111110 -&
b11111111 -&
b100000000 -&
b0 0&
b1 0&
b10 0&
b11 0&
b100 0&
b101 0&
b110 0&
b111 0&
b1000 0&
b1001 0&
b1010 0&
b1011 0&
b1100 0&
b1101 0&
b1110 0&
b1111 0&
b10000 0&
b10001 0&
b10010 0&
b10011 0&
b10100 0&
b10101 0&
b10110 0&
b10111 0&
b11000 0&
b11001 0&
b11010 0&
b11011 0&
b11100 0&
b11101 0&
b11110 0&
b11111 0&
b100000 0&
b100001 0&
b100010 0&
b100011 0&
b100100 0&
b100101 0&
b100110 0&
b100111 0&
b101000 0&
b101001 0&
b101010 0&
b101011 0&
b101100 0&
b101101 0&
b101110 0&
b101111 0&
b110000 0&
b110001 0&
b110010 0&
b110011 0&
b110100 0&
b110101 0&
b110110 0&
b110111 0&
b111000 0&
b111001 0&
b111010 0&
b111011 0&
b111100 0&
b111101 0&
b111110 0&
b111111 0&
b1000000 0&
b1000001 0&
b1000010 0&
b1000011 0&
b1000100 0&
b1000101 0&
b1000110 0&
b1000111 0&
b1001000 0&
b1001001 0&
b1001010 0&
b1001011 0&
b1001100 0&
b1001101 0&
b1001110 0&
b1001111 0&
b1010000 0&
b1010001 0&
b1010010 0&
b1010011 0&
b1010100 0&
b1010101 0&
b1010110 0&
b1010111 0&
b1011000 0&
b1011001 0&
b1011010 0&
b1011011 0&
b1011100 0&
b1011101 0&
b1011110 0&
b1011111 0&
b1100000 0&
b1100001 0&
b1100010 0&
b1100011 0&
b1100100 0&
b1100101 0&
b1100110 0&
b1100111 0&
b1101000 0&
b1101001 0&
b1101010 0&
b1101011 0&
b1101100 0&
b1101101 0&
b1101110 0&
b1101111 0&
b1110000 0&
b1110001 0&
b1110010 0&
b1110011 0&
b1110100 0&
b1110101 0&
b1110110 0&
b1110111 0&
b1111000 0&
b1111001 0&
b1111010 0&
b1111011 0&
b1111100 0&
b1111101 0&
b1111110 0&
b1111111 0&
b10000000 0&
b10000001 0&
b10000010 0&
b10000011 0&
b10000100 0&
b10000101 0&
b10000110 0&
b10000111 0&
b10001000 0&
b10001001 0&
b10001010 0&
b10001011 0&
b10001100 0&
b10001101 0&
b10001110 0&
b10001111 0&
b10010000 0&
b10010001 0&
b10010010 0&
b10010011 0&
b10010100 0&
b10010101 0&
b10010110 0&
b10010111 0&
b10011000 0&
b10011001 0&
b10011010 0&
b10011011 0&
b10011100 0&
b10011101 0&
b10011110 0&
b10011111 0&
b10100000 0&
b10100001 0&
b10100010 0&
b10100011 0&
b10100100 0&
b10100101 0&
b10100110 0&
b10100111 0&
b10101000 0&
b10101001 0&
b10101010 0&
b10101011 0&
b10101100 0&
b10101101 0&
b10101110 0&
b10101111 0&
b10110000 0&
b10110001 0&
b10110010 0&
b10110011 0&
b10110100 0&
b10110101 0&
b10110110 0&
b10110111 0&
b10111000 0&
b10111001 0&
b10111010 0&
b10111011 0&
b10111100 0&
b10111101 0&
b10111110 0&
b10111111 0&
b11000000 0&
b11000001 0&
b11000010 0&
b11000011 0&
b11000100 0&
b11000101 0&
b11000110 0&
b11000111 0&
b11001000 0&
b11001001 0&
b11001010 0&
b11001011 0&
b11001100 0&
b11001101 0&
b11001110 0&
b11001111 0&
b11010000 0&
b11010001 0&
b11010010 0&
b11010011 0&
b11010100 0&
b11010101 0&
b11010110 0&
b11010111 0&
b11011000 0&
b11011001 0&
b11011010 0&
b11011011 0&
b11011100 0&
b11011101 0&
b11011110 0&
b11011111 0&
b11100000 0&
b11100001 0&
b11100010 0&
b11100011 0&
b11100100 0&
b11100101 0&
b11100110 0&
b11100111 0&
b11101000 0&
b11101001 0&
b11101010 0&
b11101011 0&
b11101100 0&
b11101101 0&
b11101110 0&
b11101111 0&
b11110000 0&
b11110001 0&
b11110010 0&
b11110011 0&
b11110100 0&
b11110101 0&
b11110110 0&
b11110111 0&
b11111000 0&
b11111001 0&
b11111010 0&
b11111011 0&
b11111100 0&
b11111101 0&
b11111110 0&
b11111111 0&
b100000000 0&
b0 3&
b1 3&
b10 3&
b11 3&
b100 3&
b101 3&
b110 3&
b111 3&
b1000 3&
b1001 3&
b1010 3&
b1011 3&
b1100 3&
b1101 3&
b1110 3&
b1111 3&
b10000 3&
b10001 3&
b10010 3&
b10011 3&
b10100 3&
b10101 3&
b10110 3&
b10111 3&
b11000 3&
b11001 3&
b11010 3&
b11011 3&
b11100 3&
b11101 3&
b11110 3&
b11111 3&
b100000 3&
b100001 3&
b100010 3&
b100011 3&
b100100 3&
b100101 3&
b100110 3&
b100111 3&
b101000 3&
b101001 3&
b101010 3&
b101011 3&
b101100 3&
b101101 3&
b101110 3&
b101111 3&
b110000 3&
b110001 3&
b110010 3&
b110011 3&
b110100 3&
b110101 3&
b110110 3&
b110111 3&
b111000 3&
b111001 3&
b111010 3&
b111011 3&
b111100 3&
b111101 3&
b111110 3&
b111111 3&
b1000000 3&
b1000001 3&
b1000010 3&
b1000011 3&
b1000100 3&
b1000101 3&
b1000110 3&
b1000111 3&
b1001000 3&
b1001001 3&
b1001010 3&
b1001011 3&
b1001100 3&
b1001101 3&
b1001110 3&
b1001111 3&
b1010000 3&
b1010001 3&
b1010010 3&
b1010011 3&
b1010100 3&
b1010101 3&
b1010110 3&
b1010111 3&
b1011000 3&
b1011001 3&
b1011010 3&
b1011011 3&
b1011100 3&
b1011101 3&
b1011110 3&
b1011111 3&
b1100000 3&
b1100001 3&
b1100010 3&
b1100011 3&
b1100100 3&
b1100101 3&
b1100110 3&
b1100111 3&
b1101000 3&
b1101001 3&
b1101010 3&
b1101011 3&
b1101100 3&
b1101101 3&
b1101110 3&
b1101111 3&
b1110000 3&
b1110001 3&
b1110010 3&
b1110011 3&
b1110100 3&
b1110101 3&
b1110110 3&
b1110111 3&
b1111000 3&
b1111001 3&
b1111010 3&
b1111011 3&
b1111100 3&
b1111101 3&
b1111110 3&
b1111111 3&
b10000000 3&
b10000001 3&
b10000010 3&
b10000011 3&
b10000100 3&
b10000101 3&
b10000110 3&
b10000111 3&
b10001000 3&
b10001001 3&
b10001010 3&
b10001011 3&
b10001100 3&
b10001101 3&
b10001110 3&
b10001111 3&
b10010000 3&
b10010001 3&
b10010010 3&
b10010011 3&
b10010100 3&
b10010101 3&
b10010110 3&
b10010111 3&
b10011000 3&
b10011001 3&
b10011010 3&
b10011011 3&
b10011100 3&
b10011101 3&
b10011110 3&
b10011111 3&
b10100000 3&
b10100001 3&
b10100010 3&
b10100011 3&
b10100100 3&
b10100101 3&
b10100110 3&
b10100111 3&
b10101000 3&
b10101001 3&
b10101010 3&
b10101011 3&
b10101100 3&
b10101101 3&
b10101110 3&
b10101111 3&
b10110000 3&
b10110001 3&
b10110010 3&
b10110011 3&
b10110100 3&
b10110101 3&
b10110110 3&
b10110111 3&
b10111000 3&
b10111001 3&
b10111010 3&
b10111011 3&
b10111100 3&
b10111101 3&
b10111110 3&
b10111111 3&
b11000000 3&
b11000001 3&
b11000010 3&
b11000011 3&
b11000100 3&
b11000101 3&
b11000110 3&
b11000111 3&
b11001000 3&
b11001001 3&
b11001010 3&
b11001011 3&
b11001100 3&
b11001101 3&
b11001110 3&
b11001111 3&
b11010000 3&
b11010001 3&
b11010010 3&
b11010011 3&
b11010100 3&
b11010101 3&
b11010110 3&
b11010111 3&
b11011000 3&
b11011001 3&
b11011010 3&
b11011011 3&
b11011100 3&
b11011101 3&
b11011110 3&
b11011111 3&
b11100000 3&
b11100001 3&
b11100010 3&
b11100011 3&
b11100100 3&
b11100101 3&
b11100110 3&
b11100111 3&
b11101000 3&
b11101001 3&
b11101010 3&
b11101011 3&
b11101100 3&
b11101101 3&
b11101110 3&
b11101111 3&
b11110000 3&
b11110001 3&
b11110010 3&
b11110011 3&
b11110100 3&
b11110101 3&
b11110110 3&
b11110111 3&
b11111000 3&
b11111001 3&
b11111010 3&
b11111011 3&
b11111100 3&
b11111101 3&
b11111110 3&
b11111111 3&
b100000000 3&
b0 6&
b1 6&
b10 6&
b11 6&
b100 6&
b101 6&
b110 6&
b111 6&
b1000 6&
b1001 6&
b1010 6&
b1011 6&
b1100 6&
b1101 6&
b1110 6&
b1111 6&
b10000 6&
b10001 6&
b10010 6&
b10011 6&
b10100 6&
b10101 6&
b10110 6&
b10111 6&
b11000 6&
b11001 6&
b11010 6&
b11011 6&
b11100 6&
b11101 6&
b11110 6&
b11111 6&
b100000 6&
b100001 6&
b100010 6&
b100011 6&
b100100 6&
b100101 6&
b100110 6&
b100111 6&
b101000 6&
b101001 6&
b101010 6&
b101011 6&
b101100 6&
b101101 6&
b101110 6&
b101111 6&
b110000 6&
b110001 6&
b110010 6&
b110011 6&
b110100 6&
b110101 6&
b110110 6&
b110111 6&
b111000 6&
b111001 6&
b111010 6&
b111011 6&
b111100 6&
b111101 6&
b111110 6&
b111111 6&
b1000000 6&
b1000001 6&
b1000010 6&
b1000011 6&
b1000100 6&
b1000101 6&
b1000110 6&
b1000111 6&
b1001000 6&
b1001001 6&
b1001010 6&
b1001011 6&
b1001100 6&
b1001101 6&
b1001110 6&
b1001111 6&
b1010000 6&
b1010001 6&
b1010010 6&
b1010011 6&
b1010100 6&
b1010101 6&
b1010110 6&
b1010111 6&
b1011000 6&
b1011001 6&
b1011010 6&
b1011011 6&
b1011100 6&
b1011101 6&
b1011110 6&
b1011111 6&
b1100000 6&
b1100001 6&
b1100010 6&
b1100011 6&
b1100100 6&
b1100101 6&
b1100110 6&
b1100111 6&
b1101000 6&
b1101001 6&
b1101010 6&
b1101011 6&
b1101100 6&
b1101101 6&
b1101110 6&
b1101111 6&
b1110000 6&
b1110001 6&
b1110010 6&
b1110011 6&
b1110100 6&
b1110101 6&
b1110110 6&
b1110111 6&
b1111000 6&
b1111001 6&
b1111010 6&
b1111011 6&
b1111100 6&
b1111101 6&
b1111110 6&
b1111111 6&
b10000000 6&
b10000001 6&
b10000010 6&
b10000011 6&
b10000100 6&
b10000101 6&
b10000110 6&
b10000111 6&
b10001000 6&
b10001001 6&
b10001010 6&
b10001011 6&
b10001100 6&
b10001101 6&
b10001110 6&
b10001111 6&
b10010000 6&
b10010001 6&
b10010010 6&
b10010011 6&
b10010100 6&
b10010101 6&
b10010110 6&
b10010111 6&
b10011000 6&
b10011001 6&
b10011010 6&
b10011011 6&
b10011100 6&
b10011101 6&
b10011110 6&
b10011111 6&
b10100000 6&
b10100001 6&
b10100010 6&
b10100011 6&
b10100100 6&
b10100101 6&
b10100110 6&
b10100111 6&
b10101000 6&
b10101001 6&
b10101010 6&
b10101011 6&
b10101100 6&
b10101101 6&
b10101110 6&
b10101111 6&
b10110000 6&
b10110001 6&
b10110010 6&
b10110011 6&
b10110100 6&
b10110101 6&
b10110110 6&
b10110111 6&
b10111000 6&
b10111001 6&
b10111010 6&
b10111011 6&
b10111100 6&
b10111101 6&
b10111110 6&
b10111111 6&
b11000000 6&
b11000001 6&
b11000010 6&
b11000011 6&
b11000100 6&
b11000101 6&
b11000110 6&
b11000111 6&
b11001000 6&
b11001001 6&
b11001010 6&
b11001011 6&
b11001100 6&
b11001101 6&
b11001110 6&
b11001111 6&
b11010000 6&
b11010001 6&
b11010010 6&
b11010011 6&
b11010100 6&
b11010101 6&
b11010110 6&
b11010111 6&
b11011000 6&
b11011001 6&
b11011010 6&
b11011011 6&
b11011100 6&
b11011101 6&
b11011110 6&
b11011111 6&
b11100000 6&
b11100001 6&
b11100010 6&
b11100011 6&
b11100100 6&
b11100101 6&
b11100110 6&
b11100111 6&
b11101000 6&
b11101001 6&
b11101010 6&
b11101011 6&
b11101100 6&
b11101101 6&
b11101110 6&
b11101111 6&
b11110000 6&
b11110001 6&
b11110010 6&
b11110011 6&
b11110100 6&
b11110101 6&
b11110110 6&
b11110111 6&
b11111000 6&
b11111001 6&
b11111010 6&
b11111011 6&
b11111100 6&
b11111101 6&
b11111110 6&
b11111111 6&
b100000000 6&
b0 8&
b1 8&
b10 8&
b11 8&
b100 8&
b101 8&
b110 8&
b111 8&
b1000 8&
b1001 8&
b1010 8&
b1011 8&
b1100 8&
b1101 8&
b1110 8&
b1111 8&
b10000 8&
b10001 8&
b10010 8&
b10011 8&
b10100 8&
b10101 8&
b10110 8&
b10111 8&
b11000 8&
b11001 8&
b11010 8&
b11011 8&
b11100 8&
b11101 8&
b11110 8&
b11111 8&
b100000 8&
b100001 8&
b100010 8&
b100011 8&
b100100 8&
b100101 8&
b100110 8&
b100111 8&
b101000 8&
b101001 8&
b101010 8&
b101011 8&
b101100 8&
b101101 8&
b101110 8&
b101111 8&
b110000 8&
b110001 8&
b110010 8&
b110011 8&
b110100 8&
b110101 8&
b110110 8&
b110111 8&
b111000 8&
b111001 8&
b111010 8&
b111011 8&
b111100 8&
b111101 8&
b111110 8&
b111111 8&
b1000000 8&
b1000001 8&
b1000010 8&
b1000011 8&
b1000100 8&
b1000101 8&
b1000110 8&
b1000111 8&
b1001000 8&
b1001001 8&
b1001010 8&
b1001011 8&
b1001100 8&
b1001101 8&
b1001110 8&
b1001111 8&
b1010000 8&
b1010001 8&
b1010010 8&
b1010011 8&
b1010100 8&
b1010101 8&
b1010110 8&
b1010111 8&
b1011000 8&
b1011001 8&
b1011010 8&
b1011011 8&
b1011100 8&
b1011101 8&
b1011110 8&
b1011111 8&
b1100000 8&
b1100001 8&
b1100010 8&
b1100011 8&
b1100100 8&
b1100101 8&
b1100110 8&
b1100111 8&
b1101000 8&
b1101001 8&
b1101010 8&
b1101011 8&
b1101100 8&
b1101101 8&
b1101110 8&
b1101111 8&
b1110000 8&
b1110001 8&
b1110010 8&
b1110011 8&
b1110100 8&
b1110101 8&
b1110110 8&
b1110111 8&
b1111000 8&
b1111001 8&
b1111010 8&
b1111011 8&
b1111100 8&
b1111101 8&
b1111110 8&
b1111111 8&
b10000000 8&
b10000001 8&
b10000010 8&
b10000011 8&
b10000100 8&
b10000101 8&
b10000110 8&
b10000111 8&
b10001000 8&
b10001001 8&
b10001010 8&
b10001011 8&
b10001100 8&
b10001101 8&
b10001110 8&
b10001111 8&
b10010000 8&
b10010001 8&
b10010010 8&
b10010011 8&
b10010100 8&
b10010101 8&
b10010110 8&
b10010111 8&
b10011000 8&
b10011001 8&
b10011010 8&
b10011011 8&
b10011100 8&
b10011101 8&
b10011110 8&
b10011111 8&
b10100000 8&
b10100001 8&
b10100010 8&
b10100011 8&
b10100100 8&
b10100101 8&
b10100110 8&
b10100111 8&
b10101000 8&
b10101001 8&
b10101010 8&
b10101011 8&
b10101100 8&
b10101101 8&
b10101110 8&
b10101111 8&
b10110000 8&
b10110001 8&
b10110010 8&
b10110011 8&
b10110100 8&
b10110101 8&
b10110110 8&
b10110111 8&
b10111000 8&
b10111001 8&
b10111010 8&
b10111011 8&
b10111100 8&
b10111101 8&
b10111110 8&
b10111111 8&
b11000000 8&
b11000001 8&
b11000010 8&
b11000011 8&
b11000100 8&
b11000101 8&
b11000110 8&
b11000111 8&
b11001000 8&
b11001001 8&
b11001010 8&
b11001011 8&
b11001100 8&
b11001101 8&
b11001110 8&
b11001111 8&
b11010000 8&
b11010001 8&
b11010010 8&
b11010011 8&
b11010100 8&
b11010101 8&
b11010110 8&
b11010111 8&
b11011000 8&
b11011001 8&
b11011010 8&
b11011011 8&
b11011100 8&
b11011101 8&
b11011110 8&
b11011111 8&
b11100000 8&
b11100001 8&
b11100010 8&
b11100011 8&
b11100100 8&
b11100101 8&
b11100110 8&
b11100111 8&
b11101000 8&
b11101001 8&
b11101010 8&
b11101011 8&
b11101100 8&
b11101101 8&
b11101110 8&
b11101111 8&
b11110000 8&
b11110001 8&
b11110010 8&
b11110011 8&
b11110100 8&
b11110101 8&
b11110110 8&
b11110111 8&
b11111000 8&
b11111001 8&
b11111010 8&
b11111011 8&
b11111100 8&
b11111101 8&
b11111110 8&
b11111111 8&
b100000000 8&
#201
0"!
09
0P,
0~
1w%
17!
1V$
16!
#250
0!!
08
0O,
0}
#287
16
b101011100 3
b11000 4
b100 W
b11 S
b1 O
1z
1N,
1K
1f
1e
1d
1b
1`
1:,
19,
18,
16,
14,
1u
1t
1I,
1H,
1'#
1s"
1o!
1n!
1H!
1G!
1E!
1C!
1I!
1L!
1A"
1@"
1>"
1<"
#300
1!!
b100 #!
18
1O,
1}
1C#
1!(
1~'
1|'
1z'
14)
13)
11)
1/)
1G*
1F*
1D*
1B*
1Z+
1Y+
1W+
1U+
#301
1x*
1z*
1|*
1}*
1e)
1g)
1i)
1j)
1R(
1T(
1V(
1W(
1?'
1A'
1C'
1D'
1j"
1|"
1%!
1"&
1_$
1-#
0,#
12
1;#
1Q#
07#
0'#
1&!
1Z$
1\$
1{%
1}%
0s"
16#
1$#
1v"
#350
0!!
08
0O,
0}
#400
1!!
b101 #!
18
1O,
1}
1F#
0C#
1R#
#401
1:#
0=!
0w%
07!
0j"
1m"
0{%
0}%
1#&
1c%
1b%
1y"
1*!
1/#
17#
1M#
0|"
0%!
0"&
0_$
1^$
1]$
0-#
0<#
0;#
0&!
0^$
0]$
1"'
1X'
0Z$
0\$
1`$
1B$
1A$
18!
1!"
1~!
1-
1,
#450
0!!
08
0O,
0}
#500
1!!
b110 #!
18
1O,
1}
1N#
1q'
1.(
1-(
1A)
1@)
1T*
1S*
1g+
1f+
1$,
#501
1*'
1++
1,+
1v)
1w)
1c(
1d(
1P'
1Q'
1Z'
1p'
14#
1#'
1Z"
1|
06#
0M#
15#
1K#
1-!
1k'
1f'
1d'
1b'
1^'
1\'
1X"
0"'
0X'
0#'
0Z"
0|
1Y"
1C"
0y&
1z&
1!'
1k(
0Y"
#550
0!!
08
0O,
0}
#600
1!!
b111 #!
18
1O,
1}
1a"
0N#
1L#
0q'
1A(
1<(
1:(
18(
14(
12(
1B(
1&)
0$,
1#,
1(,
#601
1.'
1)'
0*'
1m(
1%)
1l'
19&
1;&
1?&
1A&
1C&
1H&
0Z'
13#
04#
10!
1&!
1^$
1]$
1'!
1$'
1Z$
1\$
08!
0`$
0B$
0A$
1Z"
1|
0o!
0n!
0L!
0!"
0~!
16#
1M#
0-!
1,!
0k'
0f'
0d'
0b'
0^'
0\'
1T"
1O"
1M"
1K"
1G"
1E"
1~(
1|(
1y(
1w(
1v(
1u(
1t(
1s(
1o(
1W"
0!'
0k(
1X$
0Z$
0$'
0Z"
0|
1B$
1A$
1Y"
1r!
1m!
1k!
1i!
1e!
1c!
0C"
1B"
0-
0,
0z&
1{&
1~&
1~)
0Y"
#650
0!!
08
0O,
0}
#700
1!!
b1000 #!
18
1O,
1}
0a"
1`"
1d"
1N#
0.(
0-(
0A(
0<(
0:(
08(
04(
02(
0B(
1D(
0&)
0A)
0@)
1T)
1R)
1O)
1M)
1L)
1K)
1J)
1I)
1E)
1U)
19*
0T*
0S*
0g+
0f+
0#,
1",
0(,
1',
1,,
#701
12'
1-'
0.'
1('
0)'
0++
0,+
0v)
0w)
1"*
18*
1!)
1I&
1M&
1N&
1O&
1P&
1Q&
1S&
1V&
1X&
0c(
0d(
0m(
1n'
0l'
09&
0;&
0?&
0A&
0C&
0H&
0P'
0Q'
14#
13!
1/!
00!
1%'
1Z"
1|
1M!
06#
0M#
05#
0K#
0$#
1%#
1-!
0~(
0|(
0y(
0w(
0v(
0u(
0t(
0s(
0o(
1R"
1L"
1J"
1I"
0G"
13*
12*
10*
1)*
1'*
1&*
1V"
0~&
0~)
0X$
1Y$
0%'
0Z"
0|
1%$
1~#
1|#
1z#
1v#
1t#
1Y"
1p!
1j!
1h!
1g!
0e!
1C"
0v"
1u"
0{&
1|&
1}&
13+
0Y"
#750
0!!
08
0O,
0}
#800
1!!
b1001 #!
18
1O,
1}
1a"
0d"
1c"
0F#
1E#
0N#
0L#
0D(
0T)
0R)
0O)
0M)
0L)
0K)
0J)
0I)
0E)
0U)
1W)
09*
1g*
1f*
1d*
1]*
1[*
1Z*
1h*
1L+
0",
1!,
0',
1&,
0,,
1+,
#801
11'
02'
1,'
0-'
1''
0('
15+
1K+
14*
1[&
1\&
1^&
1e&
1g&
1h&
0"*
1#)
0!)
0I&
0M&
0N&
0O&
0P&
0Q&
0S&
0V&
0X&
0n'
0p'
03#
04#
1l"
0m"
12!
03!
10!
0&!
0^$
0]$
0'!
1&'
0Y$
0\$
15$
13$
10$
1.$
1-$
1,$
1+$
1*$
1&$
1Z"
1|
0r!
0p!
1o!
1n!
0m!
0k!
0j!
0i!
0h!
0g!
0c!
0M!
1L!
0y"
0*!
03+
0/#
07#
1z"
1&#
16#
1$#
0%#
0-!
0,!
03*
02*
00*
0)*
0'*
0&*
1S"
0R"
1Q"
0O"
0M"
0L"
0K"
0I"
1H"
1G"
0E"
1E+
1D+
1C+
1B+
1@+
1>+
1=+
1:+
19+
18+
17+
0X"
1U"
1&!
1^$
1]$
1'!
0}&
0&'
1Z$
1\$
0B$
0A$
1r!
1q!
0n!
1h!
1f!
1e!
0C"
0B"
1v"
0u"
1t"
0$#
0Z"
0|
0v"
1y&
0|&
#850
0!!
08
0O,
0}
#900
1!!
b1010 #!
18
1O,
1}
0a"
0`"
1d"
0E#
1D#
0W)
0g*
0f*
0d*
0]*
0[*
0Z*
0h*
1j*
0L+
1y+
1x+
1w+
1v+
1t+
1r+
1q+
1n+
1m+
1l+
1k+
1{+
0!,
0&,
1%,
0+,
1*,
#901
10'
01'
1+'
0,'
0''
1G+
1i&
1j&
1k&
1l&
1o&
1p&
1r&
1t&
1u&
1v&
1w&
05+
16*
04*
0[&
0\&
0^&
0e&
0g&
0h&
0#)
0%)
1k"
0l"
13!
0/!
00!
1M!
0z"
0&#
1{"
1(!
1.#
0E+
0D+
0C+
0B+
0@+
0>+
0=+
0:+
09+
08+
07+
0T"
1R"
1P"
1N"
1L"
1K"
0J"
1F"
1E"
0W"
1'#
0Z$
1[$
1E$
1D$
1B$
1;$
19$
18$
0r!
1p!
1n!
1l!
1j!
1i!
0h!
1d!
1c!
0t"
1s"
#950
0!!
08
0O,
0}
#1000
1!!
b1011 #!
18
1O,
1}
0d"
0c"
0D#
1C#
1J#
0j*
0y+
0x+
0w+
0v+
0t+
0r+
0q+
0n+
0m+
0l+
0k+
0{+
1}+
0%,
0*,
1),
#1001
1/'
00'
0+'
1I+
0G+
0i&
0j&
0k&
0l&
0o&
0p&
0r&
0t&
0u&
0v&
0w&
06*
08*
12#
1j"
0k"
02!
03!
0M!
0L!
0{"
0(!
0.#
1|"
1%!
1"&
1_$
0^$
0]$
1-#
1<#
0Q#
1;#
1Q#
0S"
0R"
0Q"
0P"
0N"
0L"
0K"
0H"
0G"
0F"
0E"
0V"
0'#
0'!
1X$
0[$
1T$
1S$
1R$
1Q$
1O$
1M$
1L$
1I$
1H$
1G$
1F$
0%$
0~#
0|#
0z#
0v#
0t#
1L!
0s"
0q!
0p!
0l!
0j!
0i!
0f!
0e!
0d!
0c!
1$#
1a$
1:!
0X$
1Z$
11
1S#
0E$
0D$
0B$
0;$
09$
08$
1%$
1~#
1|#
1z#
1v#
1t#
0$#
1v"
0v"
#1002
b1 P
06
0z
0N,
0K
#1050
0!!
08
0O,
0}
#1100
1!!
b1100 #!
18
1O,
1}
0C#
0J#
1T#
0}+
0),
#1101
0/'
0I+
0K+
1>#
0=#
0S#
02#
1:
0j"
0|"
0%!
0"&
0_$
1^$
1]$
0-#
0<#
0;#
1,#
02
1<#
0Q#
17#
1M#
0U"
0:!
0&!
0^$
0]$
01
0:
1S#
0Z$
0\$
1:!
1`$
1B$
1A$
06#
0M#
18!
1!"
1~!
1-
1,
#1150
0!!
08
0O,
0}
#1187
15
b0 4
b1100 S
b10 O
1y
1H#
1M,
1K
0u
0t
0I,
0H,
1##
b11000 Q,
1w"
0o!
0n!
0J
0I
0H
1G
1F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
#1200
1!!
b1101 #!
18
1O,
1}
1G#
1I#
0R#
1.(
1-(
1A)
1@)
1T*
1S*
1g+
1f+
#1201
1++
1,+
1v)
1w)
1c(
1d(
1P'
1Q'
0:#
1=!
1w%
17!
11#
1n"
19!
1x"
1%!
1"&
1_$
1-#
0,#
12
1;#
1Q#
07#
11"
10"
0##
11
1:
0S#
0w"
16#
#1202
b10 P
b1 Q
05
0y
0M,
0K
#1250
0!!
08
0O,
0}
#1300
1!!
b1110 #!
18
1O,
1}
0G#
1R#
0T#
#1301
0>#
1=#
1S#
1:#
0=!
0w%
07!
0n"
09!
0x"
0%!
0"&
0_$
0-#
0<#
0;#
1,#
02
1<#
0Q#
17#
1M#
0H#
01"
00"
01
0:
0S#
06#
0M#
#1350
0!!
08
0O,
0}
#1387
b11111111111111111111111111111111 W
